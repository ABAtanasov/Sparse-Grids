(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    254261,       5067]
NotebookOptionsPosition[    251972,       4988]
NotebookOutlinePosition[    252330,       5004]
CellTagsIndexPosition[    252287,       5001]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"switch", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">", "0"}], ",", "x", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ceil", "[", 
   RowBox[{"x_", ",", "l_Integer"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[GreaterEqual]", "1"}], ",", 
    SuperscriptBox["2", 
     RowBox[{"l", "-", "1"}]], ",", 
    RowBox[{"1", "+", 
     RowBox[{"Floor", "[", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"l", "-", "1"}]], "x"}], "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.675530697996972*^9, 3.675530709604784*^9}, {
  3.675530784757474*^9, 3.6755307854699507`*^9}, {3.675557179959766*^9, 
  3.675557180440319*^9}, {3.675598722564789*^9, 3.675598722754263*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]", "[", 
   RowBox[{"f_", ",", "a_", ",", "g_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "#", "]"}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"g", "[", "#", "]"}]}]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.6757060305371532`*^9, 3.6757060700827723`*^9}, {
  3.6757072978799334`*^9, 3.675707302108508*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"legendre", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"LegendreP", "[", 
    RowBox[{
     RowBox[{"n", "-", "1"}], ",", 
     RowBox[{
      RowBox[{"2", " ", "x"}], "-", "1"}]}], "]"}], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}], "+", 
     "1"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"1", ",", "1", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      FractionBox["1", 
       SqrtBox["2"]], ",", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"2", ",", "1", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       SqrtBox[
        FractionBox["3", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "x"}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"2", ",", "1", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"2", ",", "2", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       SqrtBox[
        FractionBox["1", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"3", " ", "x"}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"2", ",", "2", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"3", ",", "1", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SqrtBox[
        FractionBox["1", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"24", " ", "x"}], "+", 
         RowBox[{"30", " ", 
          SuperscriptBox["x", "2"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"3", ",", "1", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"3", ",", "2", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        FractionBox["3", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"16", " ", "x"}], "+", 
         RowBox[{"15", " ", 
          SuperscriptBox["x", "2"]}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"3", ",", "2", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"3", ",", "3", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SqrtBox[
        FractionBox["5", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"15", " ", "x"}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox["x", "2"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"3", ",", "3", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"4", ",", "1", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", " ", 
      RowBox[{
       SqrtBox[
        FractionBox["15", "34"]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"4", "x"}], "-", 
         RowBox[{"30", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"28", " ", 
          SuperscriptBox["x", "3"]}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"4", ",", "1", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"4", ",", "2", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", " ", 
      RowBox[{
       SqrtBox[
        FractionBox["1", "42"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"105", "x"}], "-", 
         RowBox[{"300", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"210", " ", 
          SuperscriptBox["x", "3"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"4", ",", "2", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"4", ",", "3", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        FractionBox["35", "34"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"48", "x"}], "-", 
         RowBox[{"105", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"64", " ", 
          SuperscriptBox["x", "3"]}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"4", ",", "3", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"4", ",", "4", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", " ", 
      RowBox[{
       FractionBox["1", "2"], 
       SqrtBox[
        FractionBox["5", "42"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "16"}], "+", 
         RowBox[{"105", "x"}], "-", 
         RowBox[{"192", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"105", " ", 
          SuperscriptBox["x", "3"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"4", ",", "4", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"5", ",", "1", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       SqrtBox[
        FractionBox["1", "186"]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"30", "x"}], "+", 
         RowBox[{"210", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"840", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"630", 
          SuperscriptBox["x", "4"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"5", ",", "1", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"5", ",", "2", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "2"], 
       SqrtBox[
        FractionBox["1", "38"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "-", 
         RowBox[{"144", "x"}], "+", 
         RowBox[{"1155", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"2240", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"1260", 
          SuperscriptBox["x", "4"]}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"5", ",", "2", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"5", ",", "3", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       SqrtBox[
        FractionBox["35", "14694"]], " ", 
       RowBox[{"(", 
        RowBox[{"22", "-", 
         RowBox[{"735", "x"}], "+", 
         RowBox[{"3504", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"5460", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"2700", 
          SuperscriptBox["x", "4"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"5", ",", "3", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"5", ",", "4", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "8"], 
       SqrtBox[
        FractionBox["21", "38"]], " ", 
       RowBox[{"(", 
        RowBox[{"35", "-", 
         RowBox[{"512", "x"}], "+", 
         RowBox[{"1890", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"2560", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"1155", 
          SuperscriptBox["x", "4"]}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"5", ",", "4", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"5", ",", "5", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "2"], 
       SqrtBox[
        FractionBox["7", "158"]], " ", 
       RowBox[{"(", 
        RowBox[{"32", "-", 
         RowBox[{"315", "x"}], "+", 
         RowBox[{"960", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"1155", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"480", 
          SuperscriptBox["x", "4"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"5", ",", "5", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.675447334184072*^9, 3.675447464213695*^9}, {
  3.675447544245944*^9, 3.675447615694927*^9}, {3.6754476549568033`*^9, 
  3.675447686386791*^9}, {3.675447716966317*^9, 3.6754477235600357`*^9}, {
  3.675448007387443*^9, 3.675448016070777*^9}, {3.675528282866611*^9, 
  3.675528320546008*^9}, {3.67552914761718*^9, 3.675529155105283*^9}, {
  3.675529368119573*^9, 3.675529374163878*^9}, {3.675529643493765*^9, 
  3.6755296881587057`*^9}, {3.675541707759493*^9, 3.675541762689043*^9}, {
  3.675549367860647*^9, 3.675549463685646*^9}, {3.675550177804304*^9, 
  3.675550301656516*^9}, {3.6755503385854197`*^9, 3.675550625933754*^9}, {
  3.675550703098613*^9, 3.675550841347681*^9}, {3.675550884121045*^9, 
  3.675550895381874*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fk", "[", 
   RowBox[{"k_", ",", "fnumber_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"k", ",", "fnumber", ",", "#"}], "]"}], "&"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.675551380531869*^9, 3.675551421155471*^9}, {
  3.6755516845361967`*^9, 3.675551688590851*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vk", "[", 
   RowBox[{"k_", ",", "fnumber_", ",", "level_", ",", "place_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"level", "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"legendre", "[", 
      RowBox[{"fnumber", ",", "#1"}], "]"}], "&"}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"level", "/", "2"}]], " ", 
      RowBox[{
       RowBox[{"fk", "[", 
        RowBox[{"k", ",", "fnumber"}], "]"}], "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["2", "level"], " ", "#1"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "place"}], "-", "1"}], ")"}]}], "]"}]}], "&"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.675551428128154*^9, 3.6755514522251177`*^9}, {
  3.675551689944075*^9, 3.6755516941769648`*^9}, {3.675555714578012*^9, 
  3.675555719849732*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vk", "[", 
   RowBox[{"k_", ",", "fnumber_List", ",", "level_List", ",", "place_List"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"vk", "[", 
      RowBox[{"k", ",", 
       RowBox[{
       "fnumber", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "place", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      "]"}], "[", 
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}], 
    RowBox[{
     RowBox[{"vk", "[", 
      RowBox[{"k", ",", 
       RowBox[{
       "fnumber", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "place", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "]"}], "[", 
     RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "]"}]}], "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Tensor", " ", "Product", " ", "Construction"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6755574008683023`*^9, 3.6755574772125063`*^9}, {
   3.675596297284898*^9, 3.6755963117338247`*^9}, {3.675597944503475*^9, 
   3.6755979562005568`*^9}, 3.675604234073991*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"innerProduct", "[", 
    RowBox[{
    "f_", ",", "g_", ",", "level_List", ",", "place_List", ",", 
     "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Epsilon]", "2"], " ", 
      SuperscriptBox["2", 
       RowBox[{"-", 
        RowBox[{"switch", "[", 
         RowBox[{
          RowBox[{
          "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "-", "1"}], "]"}]}]], 
      SuperscriptBox["2", 
       RowBox[{"-", 
        RowBox[{"switch", "[", 
         RowBox[{
          RowBox[{
          "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "-", "1"}], "]"}]}]]}], ")"}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "place", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "-", "1"}], ")"}], " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "place", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          ")"}], " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Epsilon]", " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "place", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "-", "1"}], ")"}], " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "place", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          ")"}], " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}], ",", 
        RowBox[{"\[Epsilon]", " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}]}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"innerProduct", "[", 
   RowBox[{"f_", ",", "g_", ",", "level_List", ",", "place_List"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}], " ", 
     RowBox[{"g", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "place", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-",
          "1"}], ")"}], " ", 
       SuperscriptBox["2", 
        RowBox[{"-", 
         RowBox[{"switch", "[", 
          RowBox[{
           RowBox[{
           "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "-", "1"}], "]"}]}]]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "place", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ")"}], " ", 
       SuperscriptBox["2", 
        RowBox[{"-", 
         RowBox[{"switch", "[", 
          RowBox[{
           RowBox[{
           "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "-", "1"}], "]"}]}]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "place", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-",
          "1"}], ")"}], " ", 
       SuperscriptBox["2", 
        RowBox[{"-", 
         RowBox[{"switch", "[", 
          RowBox[{
           RowBox[{
           "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "-", "1"}], "]"}]}]]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "place", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ")"}], " ", 
       SuperscriptBox["2", 
        RowBox[{"-", 
         RowBox[{"switch", "[", 
          RowBox[{
           RowBox[{
           "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "-", "1"}], "]"}]}]]}]}], "}"}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.67555751405438*^9, 3.6755576031180077`*^9}, {
   3.675557651394096*^9, 3.675557691767502*^9}, {3.675595807015128*^9, 
   3.675595863687018*^9}, {3.6755979021319017`*^9, 3.675597904575652*^9}, {
   3.675598149255072*^9, 3.675598249439992*^9}, {3.6755983007145233`*^9, 
   3.675598312965866*^9}, {3.675598414743586*^9, 3.675598457517686*^9}, 
   3.675604682498172*^9, {3.675604892236114*^9, 3.675604892597993*^9}}],

Cell[CellGroupData[{

Cell["Hierarchical Iteration", "Subsection",
 CellChangeTimes->{{3.675725224082662*^9, 3.6757252264529533`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hierIterate", "[", 
    RowBox[{"k_", ",", "n_List", ",", "lp_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fnumber", ",", "level", ",", "place", ",", "hashMap", ",", "count"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hashMap", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"k", " ", 
            SuperscriptBox["2", 
             RowBox[{
             "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}]}],
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"count", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "n", "]"}], "\[Equal]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"level", "=", "0"}], ",", 
           RowBox[{"level", "\[LessEqual]", 
            RowBox[{
            "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"place", "=", "1"}], ",", 
             RowBox[{"place", "\[LessEqual]", 
              SuperscriptBox["2", 
               RowBox[{"switch", "[", 
                RowBox[{"level", "-", "1"}], "]"}]]}], ",", 
             RowBox[{"place", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"fnumber", "=", "1"}], ",", 
               RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
               RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"hashMap", "\[LeftDoubleBracket]", 
                  RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"lp", ",", 
                   RowBox[{"{", 
                    RowBox[{"fnumber", ",", 
                    RowBox[{"level", "+", "1"}], ",", "place"}], "}"}]}], 
                  "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"Partition", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "hashMap", "]"}], ",", 
            RowBox[{"3", " ", 
             RowBox[{"Length", "[", "n", "]"}]}]}], "]"}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"level", "=", "0"}], ",", 
           RowBox[{"level", "\[LessEqual]", 
            RowBox[{
            "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"place", "=", "1"}], ",", 
             RowBox[{"place", "\[LessEqual]", 
              SuperscriptBox["2", 
               RowBox[{"switch", "[", 
                RowBox[{"level", "-", "1"}], "]"}]]}], ",", 
             RowBox[{"place", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"fnumber", "=", "1"}], ",", 
               RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
               RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"hashMap", "\[LeftDoubleBracket]", 
                  RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
                 RowBox[{"hierIterate", "[", 
                  RowBox[{"k", ",", 
                   RowBox[{"n", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"Join", "[", 
                    RowBox[{"lp", ",", 
                    RowBox[{"{", 
                    RowBox[{"fnumber", ",", 
                    RowBox[{"level", "+", "1"}], ",", "place"}], "}"}]}], 
                    "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"Partition", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "hashMap", "]"}], ",", 
            RowBox[{"3", " ", 
             RowBox[{"Length", "[", "n", "]"}]}]}], "]"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hierIterate", "[", 
    RowBox[{"k_", ",", "n_List"}], "]"}], ":=", 
   RowBox[{"hierIterate", "[", 
    RowBox[{"k", ",", "n", ",", 
     RowBox[{"{", "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hierLevFuncIterate", "[", 
    RowBox[{"k_", ",", "n_List", ",", "l_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"count", ",", "level", ",", "fnumber", ",", "hashMap"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "n", "]"}], "\[Equal]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"hashMap", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"k", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "+", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"level", "=", "0"}], ",", 
          RowBox[{"level", "\[LessEqual]", 
           RowBox[{
           "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"fnumber", "=", "1"}], ",", 
            RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
            RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"hashMap", "\[LeftDoubleBracket]", 
               RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Join", "[", 
               RowBox[{"l", ",", 
                RowBox[{"{", 
                 RowBox[{"fnumber", ",", 
                  RowBox[{"level", "+", "1"}]}], "}"}]}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", "hashMap", "]"}], ";"}], "\[IndentingNewLine]",
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"hashMap", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"k", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "+", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"level", "=", "0"}], ",", 
          RowBox[{"level", "\[LessEqual]", 
           RowBox[{
           "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"fnumber", "=", "1"}], ",", 
            RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
            RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"hashMap", "\[LeftDoubleBracket]", 
               RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"hierLevFuncIterate", "[", 
               RowBox[{"k", ",", 
                RowBox[{"n", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"Join", "[", 
                 RowBox[{"l", ",", 
                  RowBox[{"{", 
                   RowBox[{"fnumber", ",", 
                    RowBox[{"level", "+", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "hashMap", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hierLevFuncIterate", "[", 
   RowBox[{"k_", ",", "n_List"}], "]"}], ":=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"hierLevFuncIterate", "[", 
      RowBox[{"k", ",", "n", ",", 
       RowBox[{"{", "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"2", " ", 
     RowBox[{"Length", "[", "n", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{3.675730099847455*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sparse Iteration", "Subsection",
 CellChangeTimes->{{3.675725224082662*^9, 3.675725232085167*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sparseIterate", "[", 
    RowBox[{"k_", ",", "n_", ",", "d_", ",", "lp_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fnumber", ",", "level", ",", "place", ",", "hashMap", ",", "count"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hashMap", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"k", " ", 
            SuperscriptBox["2", "n"]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"count", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"d", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"level", "=", "0"}], ",", 
           RowBox[{"level", "\[LessEqual]", "n"}], ",", 
           RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"place", "=", "1"}], ",", 
             RowBox[{"place", "\[LessEqual]", 
              SuperscriptBox["2", 
               RowBox[{"switch", "[", 
                RowBox[{"level", "-", "1"}], "]"}]]}], ",", 
             RowBox[{"place", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"fnumber", "=", "1"}], ",", 
               RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
               RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"hashMap", "\[LeftDoubleBracket]", 
                  RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"lp", ",", 
                   RowBox[{"{", 
                    RowBox[{"fnumber", ",", 
                    RowBox[{"level", "+", "1"}], ",", "place"}], "}"}]}], 
                  "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "hashMap", "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"level", "=", "0"}], ",", 
           RowBox[{"level", "\[LessEqual]", "n"}], ",", 
           RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"place", "=", "1"}], ",", 
             RowBox[{"place", "\[LessEqual]", 
              SuperscriptBox["2", 
               RowBox[{"switch", "[", 
                RowBox[{"level", "-", "1"}], "]"}]]}], ",", 
             RowBox[{"place", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"fnumber", "=", "1"}], ",", 
               RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
               RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"hashMap", "\[LeftDoubleBracket]", 
                  RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
                 RowBox[{"sparseIterate", "[", 
                  RowBox[{"k", ",", 
                   RowBox[{"n", "-", "level"}], ",", 
                   RowBox[{"d", "-", "1"}], ",", 
                   RowBox[{"Join", "[", 
                    RowBox[{"lp", ",", 
                    RowBox[{"{", 
                    RowBox[{"fnumber", ",", 
                    RowBox[{"level", "+", "1"}], ",", "place"}], "}"}]}], 
                    "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "hashMap", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sparseIterate", "[", 
    RowBox[{"k_", ",", "n_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"sparseIterate", "[", 
       RowBox[{"k", ",", "n", ",", "d", ",", 
        RowBox[{"{", "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"3", " ", "d"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sparseLevFuncIterate", "[", 
    RowBox[{"k_", ",", "n_", ",", "d_", ",", "l_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"count", ",", "level", ",", "fnumber", ",", "hashMap"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"d", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"hashMap", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"k", " ", 
              RowBox[{"(", 
               RowBox[{"n", "+", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"level", "=", "0"}], ",", 
          RowBox[{"level", "\[LessEqual]", "n"}], ",", 
          RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"fnumber", "=", "1"}], ",", 
            RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
            RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"hashMap", "\[LeftDoubleBracket]", 
               RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Join", "[", 
               RowBox[{"l", ",", 
                RowBox[{"{", 
                 RowBox[{"fnumber", ",", 
                  RowBox[{"level", "+", "1"}]}], "}"}]}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", "hashMap", "]"}], ";"}], "\[IndentingNewLine]",
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"hashMap", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"k", " ", 
              RowBox[{"(", 
               RowBox[{"n", "+", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"level", "=", "0"}], ",", 
          RowBox[{"level", "\[LessEqual]", "n"}], ",", 
          RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"fnumber", "=", "1"}], ",", 
            RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
            RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"hashMap", "\[LeftDoubleBracket]", 
               RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"sparseLevFuncIterate", "[", 
               RowBox[{"k", ",", 
                RowBox[{"n", "-", "level"}], ",", 
                RowBox[{"d", "-", "1"}], ",", 
                RowBox[{"Join", "[", 
                 RowBox[{"l", ",", 
                  RowBox[{"{", 
                   RowBox[{"fnumber", ",", 
                    RowBox[{"level", "+", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "hashMap", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sparseLevFuncIterate", "[", 
   RowBox[{"k_", ",", "n_", ",", "d_"}], "]"}], ":=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"sparseLevFuncIterate", "[", 
      RowBox[{"k", ",", "n", ",", "d", ",", 
       RowBox[{"{", "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"2", " ", "d"}]}], "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.675725215729121*^9, 3.675725254223815*^9}, {
  3.6757253475943604`*^9, 3.675725352805497*^9}, {3.6757254178794813`*^9, 
  3.6757254644782333`*^9}, {3.675725514221985*^9, 3.675725544773728*^9}, {
  3.6757255795476923`*^9, 3.675725595382804*^9}, {3.675725636718975*^9, 
  3.675725657725479*^9}, {3.675725717933453*^9, 3.675725766276835*^9}, {
  3.675730104419066*^9, 3.675730120402389*^9}, {3.6757301522414713`*^9, 
  3.675730186453292*^9}, {3.6757303984790773`*^9, 3.675730437289371*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting the Coefficients", "Subsection",
 CellChangeTimes->{{3.675730717250081*^9, 3.675730720577447*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getCoefficientsk", "[", 
   RowBox[{
   "k_", ",", "f_", ",", "fnumber_List", ",", "level_List", ",", 
    "place_List"}], "]"}], ":=", 
  RowBox[{"innerProduct", "[", 
   RowBox[{"f", ",", 
    RowBox[{"Vk", "[", 
     RowBox[{"k", ",", "fnumber", ",", "level", ",", "place"}], "]"}], ",", 
    "level", ",", "place"}], "]"}]}]], "Input",
 CellChangeTimes->{3.675730710447343*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sparseCoefficientsk", "[", 
   RowBox[{"k_", ",", "f_", ",", "n_", ",", "d_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"iters", ",", "i", ",", "hash", ",", "count", ",", "coeff"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"iters", "=", 
      RowBox[{"sparseIterate", "[", 
       RowBox[{"k", ",", "n", ",", "d"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"hash", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "iters", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "iters", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"coeff", "=", 
         RowBox[{"getCoefficientsk", "[", 
          RowBox[{"k", ",", "f", ",", 
           RowBox[{
            RowBox[{
            "iters", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"1", ";;", ";;", "3"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
             "iters", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;", ";;", "3"}], "\[RightDoubleBracket]"}], "-", 
            "1"}], ",", 
           RowBox[{
            RowBox[{
            "iters", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"3", ";;", ";;", "3"}], "\[RightDoubleBracket]"}]}], 
          "]"}]}], ";", 
        RowBox[{
         RowBox[{
         "hash", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "=", 
         
         RowBox[{
          RowBox[{
          "iters", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "\[Rule]", "coeff"}]}], ";"}]}], "]"}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"SparseArray", "[", 
       RowBox[{"Chop", "[", "hash", "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.675730693863084*^9, 3.6757306972222567`*^9}, {
  3.675730728751091*^9, 3.675730744172201*^9}, {3.675730814221054*^9, 
  3.6757308236078157`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pointIndex", "[", 
   RowBox[{"x_", ",", "l_Integer"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "\[LessEqual]", "1"}], ",", "1", ",", 
        RowBox[{"ceil", "[", 
         RowBox[{"x", ",", "k"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "l"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointIndex", "[", 
   RowBox[{"x_List", ",", "l_List"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"pointIndex", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"l", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "l", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spointIndex", "[", 
   RowBox[{"x_List", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"pointIndex", "[", 
     RowBox[{
      RowBox[{"x", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      ",", "n"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6757379057577047`*^9, 3.675737906413055*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reconstruction", "Subsection",
 CellChangeTimes->{{3.6757312217352133`*^9, 3.675731224078525*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sparseReconstructk", "[", 
   RowBox[{"k_", ",", "coefficients_", ",", "x_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a", ",", "value", ",", "i", ",", "d", ",", "indices", ",", "lp", ",", 
      "iters"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"value", "=", "0"}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"Length", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"indices", "=", 
      RowBox[{"spointIndex", "[", 
       RowBox[{"x", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"iters", "=", 
      RowBox[{"sparseLevFuncIterate", "[", 
       RowBox[{"k", ",", "n", ",", "d"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "iters", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lp", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"iters", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"2", "a"}], "-", "1"}]}], "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"iters", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", 
                RowBox[{"2", "a"}]}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"indices", "\[LeftDoubleBracket]", 
               RowBox[{"a", ",", 
                RowBox[{"iters", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", 
                  RowBox[{"2", "a"}]}], "\[RightDoubleBracket]"}]}], 
               "\[RightDoubleBracket]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "1", ",", "d"}], "}"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"value", "+=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "coefficients", "\[LeftDoubleBracket]", "##", 
              "\[RightDoubleBracket]"}], "&"}], "@@", 
            RowBox[{"Sequence", "[", "lp", "]"}]}], ")"}], 
          RowBox[{
           RowBox[{"Vk", "[", 
            RowBox[{"k", ",", 
             RowBox[{"lp", "\[LeftDoubleBracket]", 
              RowBox[{"1", ";;", ";;", "3"}], "\[RightDoubleBracket]"}], ",", 
             
             RowBox[{
              RowBox[{"lp", "\[LeftDoubleBracket]", 
               RowBox[{"2", ";;", ";;", "3"}], "\[RightDoubleBracket]"}], "-",
               "1"}], ",", 
             RowBox[{"lp", "\[LeftDoubleBracket]", 
              RowBox[{"3", ";;", ";;", "3"}], "\[RightDoubleBracket]"}]}], 
            "]"}], "[", "x", "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "value", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.675730935524379*^9, 3.675730941116864*^9}, {
   3.675730992236579*^9, 3.675731038316185*^9}, {3.675731205026107*^9, 
   3.675731235170282*^9}, 3.675736879292694*^9, 3.6757380716233397`*^9, {
   3.675738133045312*^9, 3.675738138317852*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scoeffs", "=", 
  RowBox[{"sparseCoefficientsk", "[", 
   RowBox[{"3", ",", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", "2", ",", "2"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.675736896081634*^9, 3.6757369023974953`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["36", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "3", ",", "3", ",", "2", ",", "3", ",", "3", ",", "2"}], 
                    "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["36", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "3", ",", "3", ",", "2", ",", "3", ",", "3", ",", "2"}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.1111111111111111`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.6366197753212547`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "3", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "5.823903902538174`*^-10", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "2", ",", 
                    "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2.035643020467659`*^-9"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "3.2086154531929534`*^-9", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<36>, {3, 3, 2, 3, 3, 2}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6757369071555767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"sparseReconstructk", "[", 
      RowBox[{"3", ",", "scoeffs", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", "2"}], "]"}], "-", 
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "Timing"}]], "Input",
 CellChangeTimes->{{3.675736916602292*^9, 3.67573698338822*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.902036`", ",", 
   Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXlczOv7/8cg2Y4QOhRh7HEsg45tSjTCh+yRmKxZUuKQfTpCh5BscaRB
diXLyWRpynJkq2hBJUVZKtkZNen37tv7uub16/E45595eLrdc81z7rne9/t+
X/d9Ws/wGjtbKpFIOteUSKoLr4dcTl8KsFkyiF5fnfz9Y17RIt38boP2tXM6
ryCu9hjV4vYIV8WZN0/LZU7XmUvadD2+TzJcJ7ts3uuS5z0jr5FvuqL7YF3i
rQ4XZE6PjDwneUu0d2/F5m637ntmpht5x907tui6Kxz3zngV7Zlp5GbmCZbD
huqqSSr+yzHyi48bzz0yQTH9YmKgzOmFke+SzLMS2l/zCP3VKTjPyINO9f5L
6L+F1cJjnpmvjNwjsfiCEM+Kh/16BcveGrn1H3VXCvE/3lA7Ltqz0Minjf5Y
8Xl793syMjP6nZFfOh9Q4WdH8bGn5eXvmecEdp1Y4ZP+TF4bKw+fuQOe6VWt
ePfPHfBMXDJqhslD8My8Rs6FePDMXJU6uwV4Zu4iLymMNXpm7j/CcwN4Zp68
8FNz8Mxc3TVxA3hmPixsW0Gs0TNzSYOUX8GzMc7No6+DZ+Y/q/d6CJ7Zz4+E
73fAM/HkasNH3wHP5M/G8o6/FjwTVzcLc7wHnulVYvt1fDF4Zi6bPisbPDM3
jTf/6GX0zFzrZp0InpkHtk0PB8/Mbabs/n7Y6Jm5XZrkKHhmHidTPwDPzD8M
nvnBy+iZ+Xj9iWzwzNxR41EMntnPvfCZ98Az8YCtx1y14Jk8WXSMXHEOPBNX
f5r5AD0TlzzKD/4InpmPnNE8CTwzT94T0hfGM/MPZjV6Qt5gLjsgXQWemaeG
GQzgmfnN75JV4Jl5SL86PSFvMHeZH9YXxjPzrNhmSeCZeTfZ/31e8sx+ujre
R8/EX3dzWHUOPJOP1suPlh8Dz8TVs/W37oNn4pKAtJbVqxk9M1f9dfI5eGZu
O6aNNXhm7nzNuzV4Zp51PHsbeGY+tSwmHzwzP7Pp8jbwzNzCWd8aPDOPUmut
wTPzojVez8Ez85Y9fqn4vOSZ+YV5EffBM3HLT0vaHAfP9Lkb99v0LBQ8E5d0
UldPBs/M9U0a1gPPzIdJ5r0Fz0buvsEMPDPv2PxKY/DMfMhf68LAs/F9c9uk
gGfmvrcHh4Fn5iGWYebgmbnku19D8Mxc5V7rLXhmftnia13wTFzdrFdGEngm
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
0autU3COkDd8bo6E9YrA9H07ZE45CmVeq46/gedp/7H+Rq/ac539N+B6shi/
JtR+dBHcR18W4ze4zb3wHcZzN4o/KWjLXvB8WIzf1/fLLbwONhXjV9UaaL8d
1+3F+A+qcgfhfKNHcPUAmVOe4pcgk1xcfzsqxqufI58QAZ5/zU+alRn9UuEX
/+p4CXje9kuflGjPlwq5d+tXHpCfpbYH7INlL4W8MS3jNuSNZe7SKM/MF8J8
Y39aPbjvKNjs0dIp+IVCmX/j+HbwfPU/1t+6i/FrY9Z02QWe6VVTdm76BrgO
WojxG6TytATwHEjx/+ZxbgzkDYkYv3bjgcu4/rZUjF9V83nuZfD8Roz/lt3R
RFwX2u74yNwp+JViT6LVGpxvVPe2XS9zeqXQN1U1mgyel9P6d+hszxfgueh6
DVVmdL4wnhe0T4DxrCqanxjtma+Q7rLIwnWh1CYPBwTL8hUa+/0rOsC60DBF
39OemRXrnOtd14Ln5v+x/rZNjF/r1tmiB3iWivFrBi7TL4PnI5ynRy67/QU8
F1D867q0xnqDaWL8vkcMHYrB8yMxflXYgn3H8fmIGP8gi6avcDy/K9Ec8sx8
o4iNK8jD8ewuq2XmFPxGoR9pIVWA57T/ea6VOb1RxB90qIHPr4eL8cpVjte2
gudYze+umdGvFVKTRn8awHPPu2F3oj2FvJg7eMxsyM/HPte0DZa9VihXry6x
As++/7H+ViTGr21SfS6uv6nE+DVlT4/0getgqhi/YczjYSXgmV7lzwd1GgOe
r4rx27YJ6pEGnruL8ati5nuPBc/hYvy7NrZ8g55HnPXqFiwrVCScsjDH5326
J2kHPDMLFPofBX80A8+9pAPqOgUXKOIj1s3JBs8nuhxeIXMqEDyvG2sFecNS
jFfqdHw4Pr8OWrtoYmb0W8FztQEOkDdqnEi9Ge35VqG0TvrmBJ7T/2P9bbgY
v9Zsg3wLeI4V49dYtf4hg+eqPcX4DZHak1fB8zGKv9zjZgJ4plet16XwVPC8
TYxftWZhVnfwLBXj7576v/eYN07OHHQl2vOdwmP3/C84nq22hncKlr1T6C8t
iEjCdaHoOiGemUVCfn79PBk8m+R4mzgFFynk6mE75eB5Ze3HS2VORQrpvl8/
7AbPxWK8mtabLAdA3dSMqUfGZEYXKpTD39XxA8/y/1h/OyHGr+0ytuc68Gwp
xq9xO9t4JNx3B4nxG7z/MQsFzzUo/u2SzrUhP/uK8WsLzi3F+256Vf32bUUj
8KwS4x/86bAXriebWNQflhn9XhF0MV31GdaLqJ5O//5XwyrwXDz/qSxY9l5h
H9x36znwPEOsS5SrgtwWQt54fO1oNafgYoV0mfNTrBMY8bqut8ypWPDcOGYs
1AnoxHiVpZ12TgbPQf+x/lZDjF97ZNU/5uDZV4xfExr/fBvcp7wT4zesKN+J
z6HcKf7n407Nh/GcJsbvG2fjHwueh4vxq6xedXsD60U3xfWu5EV2g79CfVd7
kR/tufUqcmvx323Ie7a9Yr2O+okT/z6qtPhBCbSn13bOuzuUAjcVPcz2bZv5
GTitE6YduxbxHvrnurv94dEfBU71Z/T3mln7ZlTs76Z2xCPtR9+8X7RIR3VU
xNUnVjW/C/XMxCXh6oNaqGdm/mHn3W5Qz8zcx/pdOdSNc/+7w118oZ6Zuc3+
ZTKoZ2b+YlO8L9Qzc//n1DN/Qt0483cbm3aFembm2lrKGKhnZj7/wfC7UM9M
vHuPVycrvJFP+j2pD/m8uAs+ib+ao0u8Cj65/Rrnaq/BJ3HJVIXtY/DJPLvm
yVLY/85clbInDXwy3/yu9AD4ZJ52cCHu32Hu3EUeCj6Zz7hxIxV8Mv/SW1cC
+9+ZPz4Q/Bh8Mpf/3uI1+DS2jzDF/ZXE98/fHnIV6u0pP6msM/bfA8/ENQ5P
rC6CZ+J2Iaddcf8OcYlV6/RU8Mz8aPsOVjBumV+J2FYP6vCZFxaf2wyemf+T
/7UE9pUQVz8qiNsMnrn9XJ+J9aAOn/mOzDeWMG6Zz5MXp4Jn5peCZ+D+HeJx
J2ofRc/EZ/p4NLgIninfS2wine6DZ+KhSScHnAHP3D7imUsJeGae/tUdxzPz
GkufdQHPzK3nXu4EnplLDn/wB8/MQ0a5fgTPzLW6Z/7gmbnL0GqdwTNz/69d
bMAz81kHHXA8Mz/W2bkEPBO3+/B4AO5/J/5nUOaoM+CZrp/Jo+qWPQDPxAdY
ZwQfAc/EJecjVpjA/krm3yeMeQmemQ9armwOnpm31oy0BM/MZxqa7wbPxNVN
x8Vng2fmIWHvdoFn7ich65sleGb+S/0aLcAz99N3ielL8Mxcf3uWCeyvJB5l
2zsb9+8Qd8nYFov7gmk+orI/+zQRPBPfu+VKgzDwTFwyo35+HfBs5I/Oo2fm
sxZubguemQdui+0CnpnLQ+J3gmfmR33WPAbPzINlfjvBM/OARVE24Jm53bQ9
MvDM/IbDCPRMXL1g6u064Jm4df/nEYngmXjNY6n/CwPPNL+Lm/xs/l24PtL8
jva/k39qP27oniDcd0ztaR89fS/U3m5B25CKffrEqX3VffTUXi3Z1eeh8HmJ
c/sq++upvUQz7pC74I04t6+y757bH8nosFLwT5zbV9mPz/F8OzTPU/geiXP7
Kvv0uf+ORRcrno8Q5/ZV9u9z+99WWVX0T5zbV9nXz+2zDg9dJcRJnNtX2e/P
7Qe/fTZD8EDc+Hn//3MA+PN+sr2aLHgmzu2rnA/A4+f0L39UfL/EuX2VcwOo
vfPIX/tWjDfiPN6qnCdA7dt0+Pq0YrwRp/Z0zgCNW7r/sNu3/+otGLfEj646
ZBMO45N43OyJyU1hHBJXO975PR/GG3HJvX7te8K4Yl42b/JQGD/czy+Z8/6C
ccLtU8O9MW8wV160+gu+d+Z9ei53hO+XuWfyjF7wPfL72i7S5cH3xX6O2Uc0
he+FePKW9AA8Z4D4UjfJMjxPgJ+jho8YfBs8E89MyV2LnolLDG0CzMEz88iJ
9/GcAebZQ+fgeTvMl9U+2hU8Mx/eeQSeM2Dsv8ePJ+CZ+YnoOriPlbnP2z3d
wDPzy319WoNn5g0SZuE5A8TVNX3mm4Nn5gdXNcVzBog7FZdcRc90f5zTdeKM
BPBM/N+IWu9PgWd+7nf6sb0UPBNXu45YiefAEJfYZe8dDZ6Zb7c/Mh08cz9t
9vfzAs/cXlZr9ifwzNxlYH0v8My8z9r/qcAz8yZLxzuDZ+YHPHrgOTDE4z5+
tJGCZ+bN1A54zgDxF3OvNj8Nnmm9Ie63kAy8vya++tnAS1Hgmbhk1w2bLzB/
Zp6zpGsCeGZut2WcC3hmrkr7XQWemYdYRc4Bz8ynmJbh/SBz5/5/zwHPxn4u
qNEz85v1DruAZ+aLLBskgGfmW81kX2D+zPxL/AM8d47Xbw563YkCz/wc42S3
GLxPIX5nZycF3g8St6t+9k4heCaufrrANRE8c/8Z9827gmfmTab83RI8M18f
ZeoHnpkfPJ1fDuOZ33f+mWZ+4Jnbx7ec2RI8M7/jl473KdxPu3VLEsEzt2+z
J7kQPBNX9Zh2A+9TiG+9HtMd7wdpPUzIA22SwDPxF2Msl10Gz8TV/bYqnoNn
rmfxu90oGTwz35MmqQ2emRt+2L2A9Q3mrp8z9oBn5o08l1aH8cy8dY/Ge8Ez
859vPXNhfYP5+ZrNTMGzMR6ZZzJ4Zv7xj8nPwTPxuJxGTnieA/E9E4oUl8Ez
reclT7wgxfPliMcNrV7nPvgkLgkd4hUHPpmn7KjeFHwyX3Q4NAd8Mp/d5hvO
K5iv6T++Bfhkfr7mdFzHYB4hNX8OPpkn+482B5/Mz91rFg8+idvVmtDvPvjk
de62kuE4bon7jmqfmyD4XCPWw9F6nUOq/8DNmQod1Z/x+utxp/NXOzvoqF6K
1/3ax3t+XmCj8BHrY5i/nTuy3YQeim5iPQfz+ACT1TvtdfRcn3i5WN9Iz6F5
n9PSprfqnmrDz02N66IzdLUy5Pycj7mry9aBHQbq6LkUcbs2jUb9a+Kko+co
xL3zLv+qHDyR1/2JXy1a8mFjwWwd1dvxOmTx83qZsiE6qg/juscG69NHF7fg
eibjeuCVxa0Le3D9DfGf/U8MHnCtv+6YOP8g3kDyv/+rP6whPk/lfkyaF0c6
yPn5JfdzLSpA+a63jp63cZz3p8x4WW+Yjp4PEc+2cJ0VazuGn2cQ/3L3Rs2G
CTN1VN/G64HrA7/UHJwUS/VYvJ/sx9hTK/x6cv0Q8ZJa1svrjZPrfMXrPdcZ
iXV96eJzSuKfPhZ4N5zTVScXn6sRV1y9sLKgkVIXLD4HIh5ysIXL7GnD+LkL
7yPsFr1r8YKpOqoP4/1tZqf8zzTrxfVMXN90e1BM4cNOOnq+S/y+WP9GzyOJ
/zR8b/TWwlFHz8+IZ/c9m3B8zwB+3kN8WKbzgHjHMTqql6L1lgvrr+fVMTTR
0XNN4gPFui96Dke86aqWha9zrPm5EfGpT07tmRJgq6Pnc7TOEPiisn6JnicR
H6ScEtWpjpzrjOk+zlFcZzhWZX3g3o/K9YGWVdYBaorrAPeq3O9nfK+8399U
5b6+unhf71Dl/v3d3sr792lV7rvTJ1Xed1+tcn/9dHnl/XXzKvfRZQ0q76N9
q9wvv2tVeb+cXuW+uPRZ5X2xvMr97xzx/peet9H971tpZT1SUJX733Tx/neF
mD/pfm353UWLa2cpdB/F/El8SKsbs94J+ZPqNYlfvibv/VzIn1RfSLx6vwmW
7kL+pHo44l7Dy+v4C/mT6l34Prr1hdHLhTxJ9RnEy2JS/m4m5EmqJyCe8+ra
241CnqTn38RXF8ct+6WWk46e1xK/O6PbxgFCnqTni8R3a0M/j50yTxcv5km6
n6qxovjQFyFPUh0q8VGPx8wKEPIk1U1y+5vaafOEPEl1fsRTH69bVk/Ik1Rf
QrysWn5UvpAPqR6CeEbNwPljhXxIz++Jr3rYe51p/WE6et5MfM58u23nhXy4
QsyHxLV9zzavLuTD9WI+5Pugv8f7WfdOilWI+ZB4DUvTDleEfEj1iMTvh3rN
jR8r11F9BvHjZ7PfpM7uqqN6AuIrza60+iTkPXr+TVx6feONcULeo+e1xL0T
tmz3EvJeBzHv0fy/ZpS6JF3Iey/FvEd8U7NtGbOFvEf1CsR/zPg7JEPIb/R8
nfjSs47RoUJ+o+fBxIsDDq9PFPLbPTG/0Xy4oOSr34nSJjp6Hk/8pllxy2a5
1vz8mLj5ocfFx4U8Rs+Pab7nIRv042VtOT8/putys/w9wzcJ12V6HkxcJT4v
pnkO8dU+gdMrns/S82aa/5wcv6aPv9APzc+Jn7J6O7TivG56fkx89NQpWeuF
9gVi3STPN76G3u69f4zCRdyPQddTW23IykQhfqoH5eu16mKNsW1GcP0izx9a
HbOK2SnTHRD3b/Dzu2W59c4IfmgfBfETMQfzago+qa6U+MqlKxesNXNQXBXr
CPk6LndcNWduM0Vzse6NuMWQd28+Ct9Xhrg/hK5f3l/PNb0nfL9Z4j4HPs/D
7dOqXcJ4oH0FxKX7+h58I4wfqmclnr9z2mLnst5cf0nc0nBp0AKBU70gcQvv
sNqpwvik+jbi5Ufc3E8K47mvuF+FroOnbg2KnSGMf9o3QrzU/pfFrsLvhfY5
EK8edHTlD+H3RXX5xDuuTLzRRpiHUN0tX2fX1/DtOKcZ14kSb/JqsddMwTPV
NXIdevbaiDrC/Ifq8Ij/jCy+t0rID1Q3xs9rvo207PS/pFituN+GrtfjMkJL
DLdn6qzEfSPEH53ya3pFyFe0T4N4jWMvosqE+R7tKyDe/Kfld0chH1IdPHFp
nsPEt0L+pHpi4t5Lx85qskumo/pX4pYGh6PWwrilek3uv2Wj0w2F/Ez1hcR/
Lu5XNEfI51QPR3xOxwYuQUL+p/ot4obXjXZ/EK4XS8TfKV1/PyhWmFdcX2if
D9fTPa0/3V64HtG+FOL+wZ08y4V5Pu2jIG69e1PudOF6R3X/xKvP9MgeKlwf
qU6duH0fx9Rs4XpK9b7EG52z3CQVfu9Un0o8KCvxn7nCdZnqKYmXbQurt1e4
jlP9Hz+X8d69w26hDderER9wKubTE2GeQPVVxC0urn5eINyX1RDzDl1/24h1
0a/FvMT13foHA7/sG6MYJuYluq6F/Kg5wUyYBw4X8w5xD7G+N0nMV8QTwlOi
2grfO9Ur876H1zLvusI42STmK74+7jl3wFfIV3IxX/G6aPP5ZwqEeWywmHf4
uinWtV4S8xjxwc4NRm4Wfl9UD811YftuJ00R8hjV73J9uukTzeeSJrrbYh6j
65TLDKuWd4Q8liLmMeK+t0s9DlXM28U8RtxkQ+/wXCGPLaB5PK2zuVfWf4aJ
+Y34krO+b48LeYzqs4l7v2kYtU3gVE9MfI46pcVSIb9R/StxQ7PGGblCfvtF
zG90fVzqqDxdcV+zRMxvxE0tun+fK+S3HmJ+I65caLUxX8hvx8T8RnxjlFvb
b8J8o4GYd4ibiHWVm8S8R3zXmj4/Lwieqb6cuG7os54BwvdC9dDE+03asf2H
MM+h+l3ipR53228R8h7Vm/L628tJt6b3S4rdKuY9Xheqp7FvIMy7aL8c8c6h
czLjhbxXTcx7xE3PFuzLEvLecjHv8Xkq1qud+gl577uY94ibtByadkXIexfE
vEM8R1ZZ3+gl5kPiY2uP1WiE6zLV0xNX3r9u5SL8Lqj+m9f9foY//E3Ih1Sv
TLzUPXJ7NyEfUn0t8Z9v+iv/EvIh1YMSXz615vdHQj6k/YE0D7FpUOePYULe
o/1sxIdtKDt/R8h7w8W8R3zAkKi1o4S8R/uFiNdsZBld/FTO+1uI/9nz4aEH
J9soJtP+SpGvE+sPaf8A8bbVXl2wEfIh1bsTD8tx2rxVyIdUn028dPGEySZC
PqR6YuJrhzjXvCncB1H9K69T/XNj0g0hH1K9JvHrv9/98peQDy3FfMjnP4n1
gTSvonma3r7Q/gXUbRK371ewMQ7qNonLnbNcNkHdJnHpu77Sa1C3yfWBh56u
bQv7y4grX+iy7D2N5/4Rr7qfl/upr3u0GOoziRvWOxZfgfpMjvNel80BUJ9J
3HbchCysz+R5sjbM9CZ44HODzn2q8ww8EJfbGUymQZ0wcalGtXUbeCCuiT/c
rwTOx+P9Oi2Ofsd9Gdy+yn5b4gZF9I7N8Hk5nunbPb2h7pe49uGqlc/g8xJX
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

     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[CompressedData["
1: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
I/Ls2D/YBuO/Ay3T4QI=
            "]]}],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{690, 1004, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
         914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 1010, 1217, 696, 
         1119, 917, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123,
          921, 701, 1124, 922, 702, 1322, 1005, 923, 1006}], 
        Line3DBox[{704, 1011, 1218, 703, 488, 705, 1125, 924, 706, 1126, 925, 
         707, 1127, 926, 708, 1128, 927, 709, 1129, 1012, 1219, 710, 1013, 
         1220, 711, 1130, 928, 712, 1131, 929, 713, 1132, 930, 714, 1133, 931,
          715, 1134, 932, 716, 1135, 933, 717}], 
        Line3DBox[{719, 1014, 1221, 718, 1015, 1222, 720, 504, 721, 1136, 934,
          722, 1137, 935, 723, 1138, 936, 724, 1139, 1016, 1223, 725, 1017, 
         1224, 726, 1018, 1225, 727, 1140, 937, 728, 1141, 938, 729, 1142, 
         939, 730, 1143, 940, 731, 1144, 941, 732}], 
        Line3DBox[{734, 1019, 1226, 733, 1020, 1227, 735, 1021, 1228, 736, 
         520, 737, 1145, 942, 738, 1146, 943, 739, 1147, 1022, 1229, 740, 
         1023, 1230, 741, 1024, 1231, 742, 1025, 1232, 743, 1148, 944, 744, 
         1149, 945, 745, 1150, 946, 746, 1151, 947, 747}], 
        Line3DBox[{749, 1026, 1233, 748, 1027, 1234, 750, 1028, 1235, 751, 
         1029, 1236, 752, 536, 753, 1152, 948, 754, 1153, 1030, 1237, 755, 
         1031, 1238, 756, 1032, 1239, 757, 1033, 1240, 758, 1034, 1241, 759, 
         1154, 949, 760, 1155, 950, 761, 1156, 951, 762}], 
        Line3DBox[{764, 1035, 1242, 763, 1036, 1243, 765, 1037, 1244, 766, 
         1038, 1245, 767, 1039, 1246, 768, 552, 769, 1157, 1040, 1247, 770, 
         1041, 1248, 771, 1042, 1249, 772, 1043, 1250, 773, 1044, 1251, 774, 
         1045, 1252, 775, 1158, 952, 776, 1159, 953, 777}], 
        Line3DBox[{781, 1160, 954, 779, 1161, 955, 783, 1162, 956, 785, 1163, 
         957, 787, 1164, 958, 789, 1165, 959, 791, 1166, 569, 793, 1167, 960, 
         795, 1168, 961, 797, 1169, 962, 799, 1170, 963, 801, 1171, 964, 803, 
         1172, 965, 805, 1174, 967, 807}], 
        Line3DBox[{806, 966, 1173, 804, 1265, 1057, 802, 1264, 1056, 800, 
         1263, 1055, 798, 1262, 1054, 796, 1261, 1053, 794, 1260, 1052, 792, 
         1259, 568, 790, 1258, 1051, 788, 1257, 1050, 786, 1256, 1049, 784, 
         1255, 1048, 782, 1254, 1047, 778, 1253, 1046, 780}], 
        Line3DBox[{809, 1058, 1266, 808, 1175, 968, 810, 1176, 969, 811, 1177,
          970, 812, 1178, 971, 813, 1179, 972, 814, 1180, 1059, 1267, 815, 
         585, 816, 1181, 973, 817, 1182, 974, 818, 1183, 975, 819, 1184, 976, 
         820, 1185, 977, 821, 1186, 978, 822}], 
        Line3DBox[{824, 1060, 1268, 823, 1061, 1269, 825, 1187, 979, 826, 
         1188, 980, 827, 1189, 981, 828, 1190, 982, 829, 1191, 1062, 1270, 
         830, 1063, 1271, 831, 601, 832, 1192, 983, 833, 1193, 984, 834, 1194,
          985, 835, 1195, 986, 836, 1196, 987, 837}], 
        Line3DBox[{839, 1064, 1272, 838, 1065, 1273, 840, 1066, 1274, 841, 
         1197, 988, 842, 1198, 989, 843, 1199, 990, 844, 1200, 1067, 1275, 
         845, 1068, 1276, 846, 1069, 1277, 847, 617, 848, 1201, 991, 849, 
         1202, 992, 850, 1203, 993, 851, 1204, 994, 852}], 
        Line3DBox[{854, 1070, 1278, 853, 1071, 1279, 855, 1072, 1280, 856, 
         1073, 1281, 857, 1205, 995, 858, 1206, 996, 859, 1207, 1074, 1282, 
         860, 1075, 1283, 861, 1076, 1284, 862, 1077, 1285, 863, 633, 864, 
         1208, 997, 865, 1209, 998, 866, 1210, 999, 867}], 
        Line3DBox[{869, 1078, 1286, 868, 1079, 1287, 870, 1080, 1288, 871, 
         1081, 1289, 872, 1082, 1290, 873, 1211, 1000, 874, 1212, 1083, 1291, 
         875, 1084, 1292, 876, 1085, 1293, 877, 1086, 1294, 878, 1087, 1295, 
         879, 649, 880, 1213, 1001, 881, 1214, 1002, 882}], 
        Line3DBox[{884, 1088, 1296, 883, 1089, 1297, 885, 1090, 1298, 886, 
         1091, 1299, 887, 1092, 1300, 888, 1093, 1301, 889, 1215, 1094, 1302, 
         890, 1095, 1303, 891, 1096, 1304, 892, 1097, 1305, 893, 1098, 1306, 
         894, 1099, 1307, 895, 665, 896, 1216, 1003, 897}], 
        Line3DBox[{911, 1009, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 
         1319, 1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 904, 
         1315, 1314, 1105, 903, 1313, 1104, 902, 1312, 1103, 901, 1311, 1102, 
         900, 1310, 1101, 899, 1309, 1100, 898, 1112, 1308, 1007, 1008}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{251, 474, 1113, 252, 488, 280, 1222, 503, 295, 1227, 518, 
         310, 1234, 533, 325, 1243, 548, 340, 1254, 563, 1161, 355, 578, 1175,
          370, 1269, 593, 385, 1273, 608, 400, 1279, 623, 415, 1287, 638, 430,
          1297, 653, 445, 1309, 668, 460}], 
        Line3DBox[{253, 475, 1114, 254, 489, 1125, 281, 504, 296, 1228, 519, 
         311, 1235, 534, 326, 1244, 549, 341, 1255, 564, 1162, 356, 579, 1176,
          371, 594, 1187, 386, 1274, 609, 401, 1280, 624, 416, 1288, 639, 431,
          1298, 654, 446, 1310, 669, 461}], 
        Line3DBox[{255, 476, 1115, 256, 490, 1126, 282, 505, 1136, 297, 520, 
         312, 1236, 535, 327, 1245, 550, 342, 1256, 565, 1163, 357, 580, 1177,
          372, 595, 1188, 387, 610, 1197, 402, 1281, 625, 417, 1289, 640, 432,
          1299, 655, 447, 1311, 670, 462}], 
        Line3DBox[{257, 477, 1116, 258, 491, 1127, 283, 506, 1137, 298, 521, 
         1145, 313, 536, 328, 1246, 551, 343, 1257, 566, 1164, 358, 581, 1178,
          373, 596, 1189, 388, 611, 1198, 403, 626, 1205, 418, 1290, 641, 433,
          1300, 656, 448, 1312, 671, 463}], 
        Line3DBox[{259, 478, 1117, 260, 492, 1128, 284, 507, 1138, 299, 522, 
         1146, 314, 537, 1152, 329, 552, 344, 1258, 567, 1165, 359, 582, 1179,
          374, 597, 1190, 389, 612, 1199, 404, 627, 1206, 419, 642, 1211, 434,
          1301, 657, 449, 1313, 672, 464}], 
        Line3DBox[{261, 479, 1118, 263, 493, 1129, 285, 508, 1139, 300, 523, 
         1147, 315, 538, 1153, 330, 553, 1157, 345, 568, 1166, 360, 583, 1180,
          375, 598, 1191, 390, 613, 1200, 405, 628, 1207, 420, 643, 1212, 435,
          658, 1215, 450, 1314, 673, 465}], 
        Line3DBox[{265, 481, 1119, 266, 1220, 495, 287, 1224, 510, 302, 1230, 
         525, 317, 1238, 540, 332, 1248, 555, 347, 1260, 570, 1167, 362, 585, 
         377, 1271, 600, 392, 1276, 615, 407, 1283, 630, 422, 1292, 645, 437, 
         1303, 660, 452, 1316, 675, 467}], 
        Line3DBox[{267, 482, 1120, 268, 496, 1130, 288, 1225, 511, 303, 1231, 
         526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 1168, 363, 586, 
         1181, 378, 601, 393, 1277, 616, 408, 1284, 631, 423, 1293, 646, 438, 
         1304, 661, 453, 1317, 676, 468}], 
        Line3DBox[{269, 483, 1121, 270, 497, 1131, 289, 512, 1140, 304, 1232, 
         527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 1169, 364, 587, 
         1182, 379, 602, 1192, 394, 617, 409, 1285, 632, 424, 1294, 647, 439, 
         1305, 662, 454, 1318, 677, 469}], 
        Line3DBox[{271, 484, 1122, 272, 498, 1132, 290, 513, 1141, 305, 528, 
         1148, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 1170, 365, 588,
          1183, 380, 603, 1193, 395, 618, 1201, 410, 633, 425, 1295, 648, 440,
          1306, 663, 455, 1319, 678, 470}], 
        Line3DBox[{273, 485, 1123, 274, 499, 1133, 291, 514, 1142, 306, 529, 
         1149, 321, 544, 1154, 336, 1252, 559, 351, 1264, 574, 1171, 366, 589,
          1184, 381, 604, 1194, 396, 619, 1202, 411, 634, 1208, 426, 649, 441,
          1307, 664, 456, 1320, 679, 471}], 
        Line3DBox[{275, 486, 1124, 276, 500, 1134, 292, 515, 1143, 307, 530, 
         1150, 322, 545, 1155, 337, 560, 1158, 352, 1265, 575, 1172, 367, 590,
          1185, 382, 605, 1195, 397, 620, 1203, 412, 635, 1209, 427, 650, 
         1213, 442, 665, 457, 1321, 680, 472}], 
        Line3DBox[{277, 682, 1322, 683, 278, 501, 1135, 293, 516, 1144, 308, 
         531, 1151, 323, 546, 1156, 338, 561, 1159, 353, 576, 1173, 1174, 368,
          591, 1186, 383, 606, 1196, 398, 621, 1204, 413, 636, 1210, 428, 651,
          1214, 443, 666, 1216, 458, 685, 686, 687}], 
        Line3DBox[{459, 667, 684, 1308, 444, 652, 1296, 429, 637, 1286, 414, 
         622, 1278, 399, 607, 1272, 384, 592, 1268, 369, 577, 1266, 354, 1160,
          562, 1253, 339, 547, 1242, 324, 532, 1233, 309, 517, 1226, 294, 502,
          1221, 279, 487, 1218, 250, 473, 681, 688}], 
        Line3DBox[{466, 674, 1315, 451, 659, 1302, 436, 644, 1291, 421, 629, 
         1282, 406, 614, 1275, 391, 599, 1270, 376, 584, 1267, 361, 569, 1259,
          346, 554, 1247, 331, 539, 1237, 316, 524, 1229, 301, 509, 1223, 286,
          494, 1219, 264, 480, 1217, 262}]}, {}, {}}},
     VertexNormals->CompressedData["
1:eJx0/HVUVs/3/w+DKLaCipISgq2UhcAcFAMBQVBBUUBplO5ukO7uBiUNEAXn
UsC4UMFWFFFRMZDu/s3Mdb2+6/Nm3Tf/nLVmzdpnz+Psa5+9n5wZYQNrTeN5
LCwsWxewsLCh6/di88Uhqx/TvsAdM4LbSmHQLSX7h669FD3rRN+SEHuKr/Cs
wd9ZCyiu9Uvs92wvNe103rd8dT5lIBXhYuiWDp48W7fi5ngv9fFxW/9ui+u0
lBn2caGhPHAuyTaStbuXCtxVmNo+kkk7n6FSrTZdCHo/Zk8rTPVSD40zKtLL
Y6mtV1w9RkExGN5nNZg700vxl3DQy47o0N7v7bGc9i4HC+fHHJ9G911Fhyoj
HaWUzj7ZkZDbt4Ddh9jUwYFe6kH1GnrGER3q4Nl+Mr9NNZ7M/1LmUZFRHku7
0qRYP+RVDO62KxH73za85kX+ULvPWUsYyxcCrqc04k/l3Uurkf8UtX540MIh
D6zaph2N/U+/Ff61YnU+bXHdtKLyRDpYrSK7HK9Xyd+gb16IPQ2ULv3aNXsJ
8n6ZIHyEcuSvIZ6U9Zo7NY+HSmC4yN/LmGeS8asAP8RZYKGb+9cFedCv7R4N
j+9IWtGbijifbjTm65nVhraVV0SxnW/npORuI85ytKW/1Opiwbf49EX4vuV9
eZx7EOdDlyBn/0ACcJPfTjhzdP5I/o44X4wqLAidjgcbAy9P4XVtdv6zMxdx
nl1gbSjkHQ+2vswewBzUTNTpVYd1aCcfr7ea9s4EnSMNhNs5uonOX8R5/Gt6
6DynYqAsoV+AOfsw5lNviir9p70zgMgoY75LSVJ5PuJcJS1N7PdaKxL7v34S
fyirrpAyi+kEMB3A8Oeop9oNzDnG4/gq7D/3mSnif7pYOV8N4vw46E4nXu/O
gxxkva+GRHujEef73MuEumbPwWP82YSP/W3nrf6Ic3fnxwe/3+XCBfSNNZgn
z1094IU4S+g/jvv2OB7eFfjRj8ePnVW36kOcZb9Vb/g9KwgZ117qU93k+F3E
mf25W4HHhDtwlFZkx/fl9P68Yx/i7DgdHcLabQ0YV7TeXwfXdiHOrBlDtRLT
ppDVI20Cr8tyyKm8AHHusasx+jHjClXXrSccioZ96d2HdGjP2bsRL33IuPZS
0Rftfrcjzi2KD2QShsKA1/GaCsxZatKf/vOQDtW3terEzKwh5CnpIfNtGPZp
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
oTOIzNEZbJj6AN8cfaCXn6ED/JujA+Qx+/0jc/p9dWZfv3BOXx/Ny+jf583p
399I/f/uu2X+//TXWsw+mn9OH53J7JfL5vTLPQmMvjh4Tl+8+zKj/22c0/92
M79HEp/zPZI1s//lYva/hcz+97jHuG8lyp9T6QNveNMNwLeXJTU4f3am8t79
ifLnQYn5XN/eeIOhDlcvnD/FzimJxaH8mbrfbmnfRDDgHfNQx/nzvf/B77OD
wZRUuwq4MBsJEu8bkPxpeYFF+uVDlD/TEsa7BGOB6alFJH/G0C4euoDy5AEp
qfIU72jgLld0CedJnSnnTW9QngyWOX4uSS8c/Ng0+wznyQcDLy1uozzZIKwg
15cUACwSF6fjPBm7/ccYzpNu9Z3f3AQcgcW8PJIn194+KvwT5clz/4Dhwf79
gOubQhrOk1y837zZNzZS6apv9ctRX/ay1Ur3S0ov9SUw6UUlypNfyiOlvo44
wL0vT68kefJP5O9IlCebImsDE3zt4d0DD27gPLmm7+tpCuXJuP64SEkfW8ii
HkzyJMezXEOXgMvUv07n/lwfV6izZCPJk1ShlZM2yoc3vxbc8p40hc2GGgU4
H8KT5smbUT703P7nNW+nOQxvTPmK8+E5LlGJUygfDvRkafP7WUCN0kxenA+n
43MbbqF8mNS3SmhkoRzkyUvbgfOhoHpXUj3KhxtZ1w119bmCg2INQhUoH84u
vNthifLh3mfKfOszYuH+z4IiOB9e/7i87zgLB7Ur5VSFoEI8LB6aJflwu238
96coH76XFVVb9yIZlr+2Ivlwnojyrdso7wmqFLuK/I6GIhyesjjv/b67NPXy
1Akq6efJugibYMiR50ry3g7/T0m7UN6zPKVy/qGHEfSUvPkR572rn8r+1KO8
F5p8TUWsIwL8+llegvNeklL97WGU97bo7Hx1Y/EZIKBRSfJew/tXe/NR3psd
ffZ1fb04XO8iYIzzXnFkKxd7egS1WjTf7KdcCFy4a7AZ5zffLm7e6cBEWl3a
z2dT8kHQ8UJxLs5vh9f8U9qD8tvexpILGYP6cLnZUBrOb4tYl87XR/nNNrPW
y189Hqz+vKQA57eNfCt2F6A85sFqNerniX5f3B+v4DxWvL3E/izKY/9fW1ce
TeX3vc1jgzSQMhWRBhGS8l6iQVTkQ+YhJUPGTJH5mgllrgyZy1Q+kXBeEsmQ
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
Ih+JWXVj63zfQOLgN07M+92iwmHrBe/1ex37I9/ttwe6CYvrUN+cfyfAj/jn
W7PtciPmY4CjhTjmb2sFrTV0Rr4xClVsbAnJYHvYDMZJ1a0CFathvg0PQhei
s9JAlqQIjn/FRI3jB5hvdJDEQm9gEihX9cX5/tW3skz/dw7mt4/YAZ9L+Yfr
2O/kNVEgO5sbP3fT1kcp8Huh8FtwF/SpuoM1Hc/x9/JDSq4J+fhtXXc3Pcpf
j2iZ96X5Wti9rHKEeXGJrDx2XlYExMlcwrxxHbDhB/LZE9jEZKOgeh4QAnH4
uc8FOL8g/en6iV/unxeCwZtvXzG/Xe6tz50/MP68pS6P5R66g2jD/Tj+v/rQ
QIb52KbBT9JofqWnPxRwvtwF2D/pwvMr90O190VhnNr8x9vWMZkCi98A62J6
v77IsIZxrs3o6H1m4wkm1y7H+hd/yWakH6FwhroWDhLexIY4mn6E2b+jFvnR
XehQDNaxjiC0dtD86P7qJRsZ5maz18SikF7yy8EbHz+buRM1kZfxeeaJhnUu
mue82fBy9tdGNyBrWILnORb3DjILwvUV4piahS3iQKDPd6zLsKPP01YxzNM2
Rnnm6MF1FvY17+hqciS4OOzF/9eP6+GR//px7af7cYXT/biu0/24FOh+XIp0
P65YBj8uwODHJUT345r/SvPjMmXw4/rT8v/7cVkx+HEdp/tutdN9t3Yy+G7N
2vzXd6uQ7rtlQvfdusjgu8XC4Lu1m+67xU333WJl8N16yOC79Vf3R2WYs/31
47Jg8OPaayPbhnSsK72WHW6oMSPO3KPgfbWhQ4a9DNZzf5uzYbaZH/Gsygbr
WS6sbepFvluRi9nGc0bhRNxWV6yb6xbxehIO63nphoqDU2AskSb7COflzuSL
dKYUBfV1VRlDCYS/MU1n6vx4uFEa1rNPKnKvbkIicZ6pCdcz0UQJ6V5JcfH+
qBoygUj8QdO9hp94yRcG6zZ1wTu/MyuOONA6iNefzlfigvFQRlmStjarRBCi
z/ixviyusFQE6Z5szQhBrowAQlH5CY7f7B9JGaQv67nFo19ba0uUKtP8nUbc
rR30YX0ij87vWvfWGHx8IIn3oXKr8jg6V7/+8unoOj8PUOm1Gp+rl+vlciFd
nvbV/na3AHeQunoAPzfK44BcKKwDn/wrwUMNrsB3YhrHWU3X5eVf9qqYCnQH
6+i6PAcxk73CsA7a/te6LPx9AeuJd7gOyvndbkhPN6Ok0k31twNqr2m64KCW
euyz5P4oqPLZpAOYY6H5LB0OH1eDcVKSBd+ZMDU6g+mHKjhOx40jWijfpnXh
liIXHEC+uxjO97f0yKV/kK9jxGLJ7TWC4IrYLN4ngXQd3Hgn27PpPZfAUroO
zqzJVQ/lxaYlcKuHvAzqzH/gvHyXfY9HvpcjSnVlWfC+MOj2Aec1y6tdxQ/z
GtH76f898wqIaWHBOLNuNs4NxX/l+WhYxO5EcHepPl7/16dQb/R9ddtz+p1d
GgsOnqnD31dN68R35KujWVhXv8s8CCg3leJ9HlVe8dgCxp/262WQseZpIjzU
B+/npB/ytwNhnM1laYcEBTWJlevFafjsbOC6EsYZeMhr4fhGMWKG3EvTNxU9
meCEcZ6gzDsoanqApgVxHOcF/zP2qJ6PtT+ucNIOB0dJOVxP9WcS+UhnRC2S
CTYUpoLMHTSdkfLsUM4ZGI+uc6Wt+UN7ED1L86fK6TrpinRVv88U/XuqPIm4
GnsaP7fjme/IL9gXpLKGPHe7JRLs1CP4ucbtbuuRL9acybJSytwZUDhjidfP
n/1d4gTX7z3j16hw2hY4qx/C/ahYVfPZOFxnB9ftJWMafapnfvnhdVKX33Pz
hp9Pz1l8t8bXnaiXfon78ke6riGcQddgMTM75gHx9sOP0XfXZT2AVccurN9J
p/P2Wxl4+6vlmYg6iHu57F7tJ6oDiU9j1ljn5S115Y49XEc9tXBaRs4GbK56
jeM8oag3gHC7Xmh213U/E2A5swPnxUXnqw8z8NVtqE9zi+D6m9NnuuPEk4BV
IS/NhyFtSwLyu7AKfum9WzYN/Cg4hOtJ5cz3t4TPHe9n43EYsAccTRZ4P0yW
b92DdHOL7q9d/OpOEwXpNB1o+nH7m8gPoTDVtZk6aUl8Vk7G3+8qOq/bnoHX
/WHbiF0qjMfejmvJ/jk34DOYjeOR5m2Qhfuf9I+6+5azgQpm4ifx/p9fNcl/
AemtjuuV8zdSQdvLI3gftuu56MH3jny6of16eP154HGfFeOMK59dH/I/9Ext
v/h45h9i9eF53B/fLF1ug+L8uaqNidnKjeA0y8dxliw7j3xHSf8XqpxHf7gS
7NdpvqOH6XxpHQa+tDNPX0k4jP8ec8zlbvMIgrtVDvepTx+tZJHfwuEdq6w+
UwII3pmrNB/OzKynKP5y74TcKDVv4mS6Jo5/as+WJchvoXDjbl5/wpfQWaWE
9Y8hosm1R2FeNz84iZw11SeClXtxXvZhkh+QH0W4v+nIzJweOMt6Aed1KefV
E+T7QTgKpmYIeYJvzfo4L1lr4cMIf0Jfb9Rf708FKsI0/BE/I+WO3mvmQPEy
PqY4cFReAsfzh86L02PgLd8p1Cr3Rf4SKbNGf6xiQebVdJyvYZ+SC/JpzHJn
sZBdjAPR0jY4X57+i1hX+3TDtv7Di1FAeAVNV3vhJmebBMzX+MNM1pnfIUBq
thfHcy+haK4A4oOWUEl3Tp0z6NOexvHHXr/CDfsIOaErPy+wIYDYxqqA61DL
6u4Hz2+UJQFmQc0GfES9yxOMwylNh92Rvj5+dzRHxB9/MLatD/d31hC5i8iv
dfMlS/PmnjjwrGYI6+vbE1Z+QT4GHVeapI6XJ4E9P8po54eA5mOov6yUERnc
TKaBjN4inNc2Oo+Xk4HH61BVlIh8LO+EJG06K5sOGol6XJ+69z6yyBfiTVLg
5qjFNNAFgvE6Mrn3u5Av64s2savjy1OA9OY8/Fxb1zILpKOPTluzZmp9IsjY
yI7PA0cLVkrC8wPlJHfbmK1DOIhLM8N4PvLlyyV0jvXPz2A9rnIW7C9rw3X4
60ugwTB/i6TzS9sZ+KVnCa1lSF///s8/i2dCzUFRecB/9PURDPO3Lvo+uc3A
n3ys29yN9slW7qwj/E0+oNA9DdchlmvvAvKxWe7DourKe4zwUuXC/bFPWkQB
+dhMeYyMZM5RAUem2H905YzztzkD2vvoycAnnLO+sTwKPveXeqzlpoYMYLFe
GD/38YuGcuQXETKquMueTAZDJ27h+rPMv/1mA+N5dfLXkH8rBYQ+rML9hbOn
oUQI+cWt/qltP+ABDo7P43i0sslnCDcs5jhcWyVcQc3uWBzPRfr8jTn7v/M3
Czof7wSdj5dF5+N1D2jEpcA4vZm5zYJnPICKThHGPbG3K74g3bTO+aL9yuy6
YDZ2EcfpXa64EvlRswPHHvYwB1Aua4LfI5XJO8WoL4zuEvu9K8UNGHkN4b6g
NzCC/L0pLlSlsrZ6TzBEofl7L+SV3MyB8a/7aaunNaFGVL6UwPc14XOiU+he
abjaQ6r0VTBxQO/cjf/VNZsxzN/i6fy3CQb+G7uhSjHyU1J3eh4/OZRIhK3f
jvMKqeXRRX7mEqnBmxOykgnTgtW4vwwojim6wLz8g7YYzsLP+9RM4PVJjjwh
dN886TF3W14kjCjJFcL3TZch/UHk6/Xu4OyWr1b2BJFMxf30vffrWvR9TSZS
X01c8QGXFWZxvuM8DtoZMN9c285GnkEvsGnxEZ6f+PK5eqK5QZ2ggXvTrD6I
EWzCc4PBdKVdSF/c2doaX7pgT0i2KOF7fQd9/ubPMH+ro/PTmhj4aZFHL5yq
hnU49YJzgC1dFGSMxeA+rty6BPnGk30SX2MjF72IqXiab7wUb8zLk7AOpP6/
LazMLgTTuTD83F3jjyLQPOHidwMDo9Zj4MTeADxPsN2jcP0KxIHQrtzmX8Pn
QG+0P87LhK4/TWSYL3F71HDww/o8lavxL6oJBPrq6/FcpUU3fzvyP7wx0/jn
p040+JaxD88ljGwiitH/v/gdrUEkCEaCsy4NeG5z/9Zz5DdImlw5vZSkhALJ
dJrfoLzrgwo0X/quUv2lSzQMWG7+OPe/uuAVDHO5VjoP7TEDD22Z7WWRp7Bu
4pO1BTvLL4E8tzw8d1KMiOdD/1di2E/nR7YoFSwrLsPr23pteWWK5k4DVkMe
QyGA+3k/jkdy6SFWNHeS1HWpPzcTDnSMNbCu+doWVelUWLeJudnRf69Fgn/F
/XG+phoCKXwQP+WIUwKvfvsC9YteuD7FdJ3v9KP//m77f62pW0c=
      "]],
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    ImageSize->{202.31118847132174`, 155.9664838632067},
    ImageSizeRaw->Automatic,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"},
    PlotRange->{{0, 1}, {0, 1}, {-0.003775069382574647, 0.001666024340013339}},
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]},
    Ticks->{Automatic, Automatic, Automatic},
    ViewPoint->{1.5928078489440176`, -2.3669685507161615`, 
     1.8194567970311808`},
    ViewVertical->{0., 0., 1.}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.67573692028159*^9, {3.675736969744088*^9, 3.675736988140452*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sparseReconstructk", "[", 
       RowBox[{"3", ",", "scoeffs2", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", "2"}], "]"}], "-", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"Pi", " ", "x"}], " ", "+", "y"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "Timing"}]], "Input",
 CellChangeTimes->{{3.6757371413340273`*^9, 3.675737199061182*^9}, {
  3.675737285192561*^9, 3.6757372879284286`*^9}, {3.675737364428688*^9, 
  3.675737368649502*^9}, {3.675737428531815*^9, 3.675737428661355*^9}, {
  3.675737479139574*^9, 3.675737484166519*^9}, {3.675738030851445*^9, 
  3.675738033211857*^9}, {3.675738153279448*^9, 3.675738157492977*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.757747`", ",", 
   Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHlcT9v3/9+aJQmZkgalotCsqE5zvZtUipQhRZIiCmVIEZklrjFkzjWF
JKRT5iFkSsmQoYRUhngr6nt/P2e99r09Hp/7z/vR827nvc6z0z7nrL3W1g6b
6T9FSiQSDZIViaT/+dwTdOTsCqM4O/rcJjXwmtrzaD5qiN22AeJTHHHRU9/B
3erHckdrK9p0xZcYd7qf7yDx5XXPq5qdjbnNeNapc6XrxPzdq/qndcUPGFdx
3zH9oSG3asjVkpjKMsYbty2ftmAo57olrCYvpvJf4/fkto1z5TuI/t9/VYyH
HXrwoO8YbmLu3TW64teMR5+eUp/nyF+M3NlHnPGW8YSYDnd2D+P69os+GFNZ
w3j8xoUKrvZc4v3hZhm67xnvXdJL6aMl/2RZx6K8mI+Mq+5SMPFw5i2Gl3tV
5n1i3Eqrq0viOG5D/cGKtrYGcOeqjGfnLs3k6WfyGro7of8g5xh4pk9RwJqf
1zRC4BncXzlGqdgdntn4t8tejLSHZ3B376XB2y3hGbx2m1cnCxN4Bq8bXvLp
uD08g2emJet7BcMzuFf1rSk9PeCZfW/p1cZXxvAMXiU/omWcOTyDl36Wkc9w
hmfwsB5RLwZ4wTPx5KP9P702DIFnjLeIH3NdNhaeyZ9oXHJE5pgZ8Aw+dPPQ
D5uD8DO47+O4GWOYZ3D7Xh7dv9rBM3jk/O0NP03gGTznZMr9J7rwDF4kMpuV
Zg3P4Fufe2h2nwDP4CVTDCRB3vDMvnfs0rEbLOEZPJkzU8+ygmcWf4nswqHM
Mxt/umP5MQ94Jm7/qLnPoUXj4Zl4kVPighsq7HomT0W3m74parHrmbjI10ez
snkM/j24/RDXPemu8AxeHlhir20Lz+DpSgoVfw+EZ/CiR/3MlTrBM/gNq9q6
6abwDP7uyYUTNaHwDH50qMoaY194Zsd/+yyshw08g1utLb+0ygaewR9M/b4w
lHkG7yKtmK3lCc/EFU4OH7I4hXnG+FffX925yTyTD5HzriXLyqLgGVyrt9Tn
j8wz+MJE22cHnOEZvFYpIih/BDyD248b0GqhAc/gotZZo3hFnjyDN1Z0nrxK
H57Bj08aN/9MGDyDN+seNLjmB8/gkR8dpR3t4Rl8623jjms4eAbfJdt77Rvm
GXzDZbsvDmzeAPdUin23gc3PxItszsRZLWPzBp23KNLP7lNZJDyDr9lUG1k7
Gp7BF/at/fHMCZ7Bs/r4jG0bDs/gRbldljxRwM/gpRVXVuzTgmd2nIfDRz5X
gWdwPd/odZsnwzN4hLvhG4dR8Mzi7GDxwNoRnsFrb3f97e0Az+z4nc8cO8s8
gxvWzVDTY57B97psVPZnnonbN/uuvn+NeabzE8XXv37uzjyDr3oSYFk2Cp7B
nQNcj55h1zN4Y/eP1Xet4RlcZDBcu6EFv1fwrJB+Fh36wzO4/ZrkhD5qHHkG
/2vQj13FEfAM3ttcd3pQADyzeBT79RzvDM/gd2u72wc4wTN4bMrm+UpO8Ezc
PvBQSYqrGJ6JJ685KVfRbQI8Y/yA605TBjDPdB6imCE9D2RPgWfwojbPvnb+
8Ayurttp0XIXeAZXMfzw0tMGnsFDm+4N9urGk2fwdLVzVt0M4Zl976vzYg9j
/Az+RHWpkdw0eAbPGynar808g++//qlpsRiewSfLpBvZuMMzeHKnrXFZdvBM
3L5b/YdSS1d4xviHiaOLfZln4kVb5krshjPPFK8oOXynJD0cnsFnJ67fddAP
nsElyy1b+jnAMzvO0rfT7E3hGVxk3GCd/ncheQavsn3o12YAz+BWb9ZZRVoi
bvATv/uMPcs8g0fOvrk3PQiewR81HuHus3kDPH/Sl+6H2fMz+IDi1YU/XeEZ
vK3Hk4ed2LzBzuuxpP8X9lwHPiyuwEyLeaa4RPtk4szmh8EzePkTn1ODvOEZ
fKvmsc5WzDN48uo7JbeGwjO4KP71hC9v4Bnc9+8PJxYyz+BZw0YuKbOHZ3Db
6+caVkzH+YCvCt3/t9xYeAbvKXvv7ygXeAZ3HlX5QZXNG8RD16VNHbKDzc8Y
v3LNgUPX3eEZXGrv7zgl9rwBHjjhbcupGfBM3y/65j1X/fVEeAbPHOXcoOEB
z+DlNvVHazl4BhetdHh+0wiewavC1kc8ZfMGeLp28/4VxvAMLvkQErzFGZ7B
J2wyH3o9Gp7Btzcmr6tjnsHrdi0b8N4VP4Or2RevVHGGZ3CfKLk2deYZvD7c
z8yMeQZ3T+5xtCe7D4JfUslcwjHP9D0i9Z1Jl/WC4RncJsFj9k83eAav1dm2
/v0IeAb3XXTNyWoQPIPHGowev3AAPIPn+H4JXDUMnsFV3/Ww9nCDZ/AeJiG3
d8TAM/iEq2vqO4TAM3joDyXLa244f/DrGzoaccwzfSYPeuE/cC7zjPELlQ2r
dzPP4P3Lr54JCoZn8Cuftx76HQPPdDzREi2/cc2B8Az+SKPh+AVneAa3ios+
qDgMnsGzEjZ6/9aFZzZ+Hx8hYwzP4OUdWuT07OAZXEHplkmCBzyDR+4feiB0
BjyDr3J8J9rPPINHvf09awS7DxIvsnvmN+ob84zxh+4nLVNknsFfZFq3Stzg
Gbx10N6WwWPhGfy7soujCvNM/060vKn4c3fmGdx3R/Lt2XbwDJ5eb6a9zRie
wZMLtFZqqsAzuNaO3GYDE3gGN3ALOBxpD8/gRltHV18eCc/ga97mzZg5E57B
nyUN/mTDPIMX9ZJk+njBM/Fk9ed6l03d4BnjvxxO/J7jAM/gjiOOfrjG8kjg
mya/0VvJPINnxu+58CIKnun/i74nfp11ZhQ8g0fezp4UbA3P4PZ1CxvdO8Iz
eFb2+DWb+uC9CDxhaaDfRDN4BjcPmr+zxhmewWNn7398nXkGz5e+5TKHXc/g
bRrSjwZOhGfiyeEKcbND2X2QxePy9WZPO3gGV3SRmHYRwzO4ER++qJQ9P4Mv
95g8/cJo/Az+dfZxdfdpfPU5uRI98V6OPkVxX3oGXnRDXo94utulHjG3o/nw
TdzGmMp6Nv70hXJtI0ccl3hWr24BWZqxOD79O5HxZvu8CG0cH3z+7mbrowE4
PvjW/OWtxx3wM+IXBaRrPrHD99HxkjMfaYnmu2I8eOLmjI22zhjPjmMvpfFR
DT/je0VF8SVvpvFPS7eYDBRncPSZrB6zs03szc93iMvLi2kAr5ohst3deRTG
0/8XKZTP1JpujfHgun4h32544zqnf5cQnPSutSAa4+n/a01+nvlqrD+Oj/iL
ZgRkdbbm6Wccf6CT0pHlLH548NKfY9nJB+PxvRrVMknK7PkTxwm+N3SBOADx
4HtrV56byvnwSvNnKnUQ5SA/eXRPwYY303w5H/NOcf84xPdK6vv/PtVsxROn
8RLvbgFbZHX5zUdeTBSJbmC8w+ajhXGnvcBpvEP3TQUj5zvxM7uO1ROJSjFe
ObPqQdM2U3Aab1z0XeWqoirf/c4ldZHoEca3XV7+MMp0MEecxkvJ3Lo7bpM5
98+g7iJROcb7OunJ/pC8sSNO44Oqxni7OnTjQpw3dxSJnmG8p+G1bmWbRvBt
//+/l+DvJ/3J59N4Oo7XSJ0pSkrGGE/8/Y4/eekHz81b2tpe4Tj5ngdvDDO1
4InT+IALESbr7e35/RemfW9re4PxOddj1a/ma3HEkWfulOmyaWZ54dxtuz63
tVVj/M/xDgvnmdlyxGn8b7nuI58om3Hu8x7WtbW9w/grWWcudXTsDk7jN/GV
d7td1+XVAhVq29rYukN9v9GBa1bZgtP4fL2Xt+ZNc+PrTG3ftLWx9YjkqLsF
bqFthcRpfOTd5vDHfYbwhSqzX7S1sXWKoJ+DuIOvx3DEaXx24orrsmkjObpu
6b7hvl8uy/OZJ65b4pINo37NLdfHdYj8geOW2XyJI6434kY51hPdvvTB9UZc
dv+FrsHiIbiucHwtfTvdz9/t6HpAXnrW9cw7Zv1wPRCv3fInf06/d+JeR/f4
dh3oiN87cV+7lNlWMlL4PRJvtRSbbHw6DL8v4lptJ3POLtLE74V48w/HtBe7
XPF7Qfzluu+tlQfAPzwMfN6rqKM/PNN92EDP59fPCOaZuESzfuPgAh14Jp5i
aHQ+K90Bnol3Sx/p/shTC56Jy5U8TKvb2B+eiee2dT1/ap2IJ8/Ek5uuqSor
vLcjz8S/1PzJn5Nn4u6JU+12vnKCZ+Iq6xsCJYu6wzPy252GPC2cYAPPGP8k
1WBGdG94Jl6hcKnf2lrmmXhkycbinxP04Jl4531N9ypf+MEzPdco9AyR2jfL
C56JN05NiJxipg7PyG9t+Wx5d6o9PBNXKT/zrHyQLjwTV1f5Fl54oRM8E/8y
7Kjf55Ie8Ezc9/B+o+f3tTjyTPzrsT/5c/JM3P7F+m8di1zgGfEvb5TExqnB
M+K/c8JY4T0Hz8iHuy1u1Z6rCs/E+1Sskft6kM0zxOM1TJ/J7zWEZ+LZOsbu
yhd94ZmeE2UcKn/YH2HXM/HGs/53Ddf0hWfiUnveFvpd5eCZeGcFHaVpb/Xh
mfiVxR/PD3v+pZA8E5fPamnKMuoHz8T3P53Va0CNMTwT/zLgT/6cPBO32b05
UC7SDZ6JRx6Kc88ZqAXPxFPa2lqjDzrAM873U0e1Zd6d4Jl4xfWi+T1TmGfi
8XbWeqZ3mWfiCrPMW8InM8/03J36o4NObIYrPBOXnPUeuDVeD56JSx0+8i79
MPNMXCl21pOvXQzgmfjbhmfiHm5SPHlGPia0ZvWsBarwTDzLUTzKZJ4NPBP/
sulP/pw8Ezd/eVW6ztodnomH7s5Xjo7QhWfixdsDx6SfdYJn5M83PBk78fN9
O/KM7z1wz8M2zAWeiUeWDjh5MEQTnonn3/jhdNuWzc/0HpM6ttZ6fG8XeCYu
eRi90r6XETwTT2kLfq77gc0bxGXNVU/MmWkMz8S/ud0xcruoCc/EzXtfC+7k
1xueifsM9V66eZ8TPBNvLPuTPyfPxHO6deBvnHWFZ+LZfMhbLw1TeEY+PnNw
961n3OGZ+Br332nVT7Q58kz8/ovMeadqHOAZ3+sePLKokwI8Ezfwnnli5TTm
md4LU6+HGfXpyzwTl0jvTc1V0oJn4lJRZ7cU2lnBM3GF3gs6nPLuD8/EG8Mr
Dp6s6gbPxBcafw1JHawMz1i35JZ4uhx2hWcc5/if/Dl5Jm4wYeWoWG0feCZu
fyzvcrW4MzwTXxL2Y4xuAps3iNeeWjTlb8c+mDeIX/guWrG8yh2eice2btlo
wRnBM/HqK8kXroSzeYPes1NXz/d0dLeHZ+KShuX5cxexeYO4lEd3x6gKS3gm
LhdaMf5nKnveIP75ds7YuLru8Ew8+VKKklpsbSF5Ju7tYf56YLIXPOM4Nn/y
5+SZeLb/1Uum8swz8fTgTPfRU9ThmfilL2fKujWxeYN41h7ny1aTJYXkmXhQ
9M0XlYbseYN49NZJTcp2WvBM/I1RWapeIXveoLyFwpjpC1Wv2sIz8V+H5LVV
CwfAM3GpPfd/B343h2fiMlY7nVf01YFn4pKukTcuePSHZ+Ilyf1i4svYcx3x
mjchgdLmvvBMvHH8n/w5eSau9SL4+qRm5pm41fqWdaNes/sg8UvZbwZd0XaB
Z+S946cGrPqQDc/w8D5tr/8BNj8TDx1heNMhmnkm/kq55GOTNPNMeSCFSmkn
vVc28Ez8127bvtVvteGZuFRWvLzhYfZejHXCKv91vk/Z8wZxyc2/bs/vMRSe
iS+s1TmyXpHNz8Rrxk8qnb7FD56JN6r+yZ+TZ+Kl0aFvLw73hWfixuEhna/6
aMMz8fCqJ7fubWCekffONDm4P+k2PBNXEjdevifLrmfiASYLmpyGsPcU4rbB
xd5R6ux9kPJqMqeqfzp5WsMzcUlb36l/ZbPnOuLSd1O8vSOGwDPx1rSJKzsv
HQTPxFtO1zyW8rOAZ+LuBXOPlxf1h2fiEeN9VHmjUfBMvHHqn/w5eSaerjEr
acwW5pm48UADw4Ao9ryBeHwmPmhd5wrPyHt3GDXpvPUnPG8Qz6x8fuXLUnY9
E3fenRwpvZ55Jm55ycl6zApveKY8pYzO2qGJasbwTFwy0bjv1qDu8Exc+tHg
4tMLteGZeDN369cz4wHwTLzFr2dOX4Vh8Ew8wMv2YM+52vBMXC9vh3R6cSA8
E/+8+k/+nDwT33reMPfdl5HwTNwgTbz216wh8Ez8UZ9Rj837ieGZuNaRklxT
+Z543iD+e2aWkmmFIzwTT7C7v+Btak94Jn7sjIXtQXt2PSNft65AY8Epc3gm
rpBV/VW5sAtHnol/HzrcNTBJjiPPxD/sNl047hvLbxCX+Jl/XnFjBDwTH2e0
+ZZU3RB4Jl7bOvtDYSrzTPzz2T/5c/JMvM54uIr7oVHwjPz5+VODm57W2ZFn
4o+fGsh7TGfPG8Tjdzj/3iHP8lHE+bKMquNjxPBM3CoxO2xP81DkOekzdK38
C95nDHwGr3Zoy485wkkcVtaJprLnih3991fPrDzIXTroOUG9zhXX7TMhD60l
6dXoutQIPofvfTD5QswOrnVe8vmPnixfdF7I0x7Veh22LK8T8odzWs/9Gixe
wvkrl1048ssa+aIJQr6rtl3+UEqIv/zmi3H7lRzg01mIv6q1u9LHmYq4bpcK
8Uv9jKnuuNkCPq9Q/n9monbz0K7wqSjEb1wybOihs+w5eZUQv9aGUa3mfRXh
M2nd7HMZusXc1iWKl2QiWL6CPiVuUyMv3ugPnza5bmOf5V3kivcq5QR/Y/m3
520JJWdjLnBGyZmvt3v2g89Fnn9zG3XPcTK7Jj1tUDCFT40tladmVOZxHpKS
Uzm91OCz8LWSnkdGLpe9t7FNy88IPg8Kea3qdvm3BCF+X8NhTvfUWF7IXYg/
1m5pbYpyF/g0FuJvvmXx4XY+83lfiH/z7vTSXx3Y9TlLiL951vmIOc/Yfa2b
EP+vJA9F77kDMQ/kCvGHyWXFmkux5+GmicfqdMW3OIUXK5xMbnvA7zVZ14MZ
ujc5yaQJcV1SmWf6TLnvcWTwCOY5wm9enxmV1zhVicq1g/3Ye4fljy4PK/Ou
corf3oandxgIz3I7s9eIM65wk5P35W4/0RGeyxwdXM/GXOZCZXWcvPke8Kwh
5LW+tsu/NQrxl8hligeXOsNzkRC/1qHXLlbr+sBzuhB/y81tQSO8h8NzqBD/
Gp30c8+1tODZWIh/253QtLqbzLNIiD9S80DRSjl2X7svxP+i2LYwqZI9p53t
/W19Zd59zsB/qLjKi+WFdk8vis7Qvc81Htr9teAHe35IK1wjFmeUcimhFmrl
mizPSZ8qN1odizey+9rxGx5yMyrvcj1Uc/af6NoXnpNmvOEr8+5wQa0PLrzr
+BTvHT6qCxPFGSWcVtPilUH5Mphvb1O+rl3+LVeI/0rxI+eZh9h7dKYQf/LL
sOzPk9nzcKoQ/2+5wPurODt4jhbiV5D/dfx4gho8Zwvxb7Ve9VkhkOWFEoT4
Y7c22g60M4BnsRB/Y8FW5dPrmOe4lA2HdcVlnMLD3MfxR9j1HPJo/PLKvMf/
PBc5R3ZK6gXPTvqDwjN0H3Mp6XMWtw5m+QrD+d85ccYjrrNvT93InSwvRJ8B
xhXKkzJ/Yt2nRXP9z7yYh9zvkbWmeklKuK+9mR1SFlP5gLPbluIlu0kXntP+
R/4tVojfvnLt+PQglhcKEuKPXXzef4C2DjzbC/G3nR02efF7e3g2EOIXTd05
e/+17vCsIsRf0S2z95JM5lkixB8fy/91Tpu9R1cJ8dc6hxU4ZLJ5Y+iHIZdj
Kp9yqYt850R6svxbL9uW3brip5zk9MMOZr4sX9G2/vrCyrwKTqp7hz0d5Vn+
7d3rjWMzdCu4zlrzhk+1HwjP9yxCLcUZ5VxRQ+wVm+/fkeekT7VsHfmGGd3g
eXelpCEv5gm3Xey116KrGTw7CXmtz+3yb0ZC/AU9zcTxI8XwrCrEHymdLlq4
UQ+efwnxc138q0Z/cITnt0L8ooVBnuXvWvDeUSLEn/ujxtY2hs0buUL8qdMm
cTu92PWcKcS/POSnhtoZ5vmjf8mzvJiXnMzoFQ/tbzjB88MDW8/FVL7gJNzF
eYrvDOD5gmTyZl3xCy5Fee3Gsh3set7naRJXmfec6+jedeLnSUPgefWu3yMz
dJ9z5WMWnN5e1QXPaXGfbxqJM55xQaEjX3eaKQvP9Lk51exl4QU7eKbP9vm3
WiH+fLPvqV2esnxyqRB/9vh5RcvemcBzvhD/ovIa3dQb7L0jS4i/0WqNZh8V
FTwPrxDif2w06HuwjTM8xwrxx+bJzJadrAHPQUL8CV2ypk0wY/m3h0K8Mn6/
Gxy7OMOzm/yOaZV5/9xn7g3qNfdCP+bZuEN5XswrTtpl8A/NtSPg2Th4qmuG
7itOKbu/vMFY9vy2f+md3JjKKu775akitaEa8Nz7mJmOOKOKs8u6slzdjF3P
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
Y26IUM8BnvR7zbThI3ha1we/9ae+kdahwW/469cP1cW6KfjGR3GBV82xzgc+
cslAxXqOp3UpxD9v5ISHXTx4WkchnjPnW9LllNHI+xP33bS3urY6gqd6O+Tl
vJTGRN124Kk+jHjz+oOXu/r0QD0T8nu1H8MUGwah/ob4b0Nzvf05g/mDwvMH
6ie5P/WHMsJ6Ko5z6s2YDTmWWL8k3jq10bplqDVP620Yr7r0xhs9MU/rQ8Tr
Z1svT9nmj/UM4nY7v7f2eRfOU30b5bsMgvQ8+h5X4qkei7i00rLykDPaqB8i
/u2Eu87X6Rp8gnC/R75OqOsrE9YpiSd8v5m1wcaYNxfW1dBHlTJjxbDl7nyG
sA6EPF5nve/Hqjyw7kJ818q8nP7HxvFUH0Z5JGWVtYYyLd1Qz0T8Kz9Zbsx1
FZ7Wd4kXC/VvtB5JPOnkX9uH+bnztH6GuuDlPcr0pO2w3kO8Rsvb96TYn6d6
Kcq3tM4bv3H9+M48rWsSfyHUfdE6HHGt7/esM/eqY90I+Rzt60f0bGx5Wp+j
PENm5J/6JVpPQj7EL/fvzaHmqDOm97hH/J88w8F2+YFyIT+g0S4PoCDss3e7
3fu+lbDPXlq79/o64b3eqd37e4Pw/j6h3Xv34zN/3rsL2r1fPxber9X+x3t0
Qrv35QeL/7wvl7V7L7YT3ovN273/Vj/48/5L6230/jtcqEdKb/f+myO8/yYK
8ye9r93zi/457bE5/1mYP4kr9Sr40DLWgqd6TeIrrBpzy7OVeKovJP4j8fGc
QTL6PNXDoS5Af87nzh9MUO+C9+4tF6PHP7dEfQbxZXPumjRedkA9AfFrce4G
Hbo78LT+TbzPj9N/hcZ78LRei/FJnVbPUhmD9UXiEqmweJ9RUXyxME/S+1TH
kjGRigvMeapDJW4ZWnizv6YqT3WTxOvTFrTqT+7PU50f8Renp9tUaFuivgTv
odnzu4hknFAPgb7GRLW9IzZZ8rR+T7ztRJ+JgwPceVpvJr6sePTSZ27+XKIw
HxLfp2m0RpIWzi8V5kN6f+lh+abCq1Sb54T5kPibI5JZC/sP4KkekfiDa9Xf
7w2wQH0G8ZXPlNz6HR7AUz0BcW2Pk4kmT115Wv8mPungbZuE+2Ks1xJPMpFc
PvshmNcX5j16/q+YOnBzg70R/0aY9/D+suWoyZ1OQ1CvQPzX5ILesye48rS+
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

     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1mXngTVX3xu89e59QCiHzTIY0GKIUMqUyhaIXjYQyJ2k0ZMicprdoLg2S
KCIUDSopKiGaNEikwZTQ4P08v+f8/ljW57ude+65Z++91rPWrnLNkC6Dk1wu
dz//BPzL+GL4rflcrh78H7gLfAZ8GdwZrgpfBLeCq8AXwi3hY+EG8CnwiXAT
uAFcHD4HbggfBzeE68K14S7wRXBl+AK4BVwUPguuBxeDz4brw7XgzvCFcCG4
PlwHLgjXg2vD2/UdcBH8j1hhuBj+Bz0ffDz+y7x/6z/YV3DEH8XKcp9W+HMY
242VgBP8Dux4uDj+d/yP2HbsF/4uiY/4nXm/t7+xn/Wb8Tn8Lr0L8F+sDPdv
iW/CWGm4BXw2fDE8GR4D3w2vgVfBk+A34dfgGfD78Ep4IrwSXgLfBa+Cl8IT
4DfgV+Hp8HvwG/Bk+C14GdwPfhx+EJ4Gvwu/Dl8HPwnPgm+BX4bnwv3hJ+CH
4C8wrZW/sFHAUvxLjI2GX4MXwBfCY+Fb4JN4yVfDZ2kdYffAkxnvDE+Bx8KX
wTPhSfAd8BJ4PtwCvhUeBl8JPwTfDY+Fl2udwg8wcefpd/I9Y/DLGF/I+FXw
LHgmfDU8G74HvhleCD8P/6rngwvgt2EF4BR/EdfcAA+A28HD4YFwe/hGeBA8
AL4PngYPhO+Hp8OD4AfgGfBUeBH8IjwbfhteAXeAR8CD4XvhFfCibI70zl+A
p8CvwPPgjvBN8JDs3Q6Dr4c7wSPhoXBX+Hb4RrgLfBs8HL4EvgMeAfeGp8Hj
4T7wdHiC3n/0GriTd9iK8YFwH8ZbwgPg3nBbeCjcH24ND4Kvhc+Hh8D98p6H
/vDVcBt4MNwXnpWtveXwcPgRxRr4RvhR+AHtP7guXEPrC64DV9MehU+Bq8N/
YzXgCnmvJ62r/8BHsGpwuXzu/xZnLVwVeC9WBj4B/w12DBzwea6pDVeFv1cc
gY/D79GehAvjv1NMgQvhv8ZSbWX8Aaw8XAK/DysLF8Xfyj2fgh+G74TnwU9n
+0h7ajZ8A/wwfB88Dn4RngPvx8rBJ+JvY/xp+BF4JvwB/Cb8F1YdLo+/nfE5
8KPwH1gF+CT8IayKYgz+MFZV8Qx/DddPhcfBCvTPwY/BI+EF8HPaF9FzMJ81
MDL6vb8I3xQ9H/PgPXAzuDJ+L9YcroL/DTsXroj/HWsKV8IfiI5r1fH7sQvg
avh90Xu7Kv5X7By4Av4XrAlcHn8Q6w6fjP8L66t1gN+G1YGL4q+MnqcHeLbL
o+f4fviq6Hn9L9w7OgfMUhyKzgEPwrdE54+X4F7Rc3wf3CM6N9wDb4LLcc0x
+J7ReeJexnfDZydZTIuOiTMZPw0bzfv8CP93dJyti/8nOoaeij8SHY/q4Hdg
DeBS+O3Y6XBJPS9WHz5Jz4WdDJ+g34fVhIvoWbAa8PH6TdhpcAm9D6wufKIS
Got2KHyG3gd2KlwcfxQbAp+O/xY7BS6G/zd6fZym/49eW8/wWzbD5RkvgP8J
awiXxh+Kjsu18D9jjeFy+D+jY3pN/OHoWFxb94uO+zXwG7FScIrfhTWCy+pd
YtXg4/CfYxXggvid2JlwGfxWrBJ8rOYKqw4Xxm/BKsKF8DdpbnkFz/Ibhkbv
h2f5LTdE76Xng3/TJVzTPu/PdYM75v2dl8IdlB/gTvD5eedraY8L8n7GXnDX
vN9fb7hn3vNzFdw972fsDnfKW7coXl2W9/z0gXvl/eyXw5fkPT/XwpfD/2KN
4NPwv/CsReFXEq+RfvCVec95X/iKvOd5LvxE3nP7PPw4PAx+AX4y73V0JdwN
/l3PClfKW7cobpRWzOS7NijP4n/i78pwKfxB7HT45CzOSGvVwv+JnQHXzHs9
XgFfmvfcXgy3hUvCHeE2ikXR+uwh7t8nWlfNhvtGa6ZH4X7R2usxuH+0xnoc
vj46Rj8BXxutqx6BB0bH4qfgwdExeg48IDoHPAmPiI77L8CDomPu0/CN0Tlj
LjwsOpc8Bx/H3hnP+DmMnQTfB58Pp/hmfORMrisBd4BbwwXg8+DG8FGsMXy6
cg7jzeFGymvcZwR/14/Wqy2kixg/QfeGm2kN8N2j4A/xRRhvCzdXnM+u0do+
Hm4DN9XaC877H+idMD4Dnsj49fC98NS8dZ101xTlOPxP2A7sN+xn7Puctb60
6xHlHq7fpDiWd+7+VPfXnMGfwGvgGcHj85XDsc3wOuXE7L4/YA8y/jH+fcVo
eB38ruIyvB5+L+/rfsue4WDGSuN/YHuxX7EFXP8t/iX8/pz1925dyzNUVM7F
v6AYCZfkw78Ga3ONP8b45/B6xodHa4hDwffV/XdiB3J+L79ktid7P39m31Uk
+z6x7nsou+Yz7THuvwX/sdYNvA3+XPEle+YteX/PYWxXznv5/9/3nuy7dZ+P
lTP1Dvj/NxPv9/3w+sR78M/g6w9l87c3e0ffaf9H69d9wTpAemCevl/7EC6Y
93s9mM3379lvUw2zMLGen6u5TRwHtL9XJV4Pig1z4K/gjdoz8Jd6ZuUG+Gt4
k/YkvBX+RHEW/gbeDP+DnQmfir+L51sLd45+nn3ZXP+m2ISvmPd72pv9rvcS
P/8fwc+8P5uL66K1+wHGv8v2kfbTHv5erd8XfI9d2fz+ku3ZoO/N9mOUVsn2
rHLQtsRx7B8++23i+KZ7fqN8CP/F+NeJY+Df8I7EezyvvJnlCOXo26Lr23+1
xvBNGU8YKwy3hs/VO8nioXL3X1kMUf76G26fc+4bG12LSnvsyX6j8s+BbO8r
Jx7M4oPy4P7s/srRPybOHblMv3QF2/G9E6LrbWmno1l8lpbYnDgXHAnWVtfA
PRSvgj8rbaBiWblPeWx74jk9ylgIzqHSGzE4b0pjlA6+j7RcbcXunPXejGjd
JP1UmPGeOesc/a265jq+99jg3CpdVDY4t0ofVg7Od9Kf87O4tFY6NzgnSotu
SryWDis2BOdTadHywTlXGvVhrtkIf8hniwbnLOmKEsG5Wxrm9ODnUb11lvRi
zjr2kehaSDo2DdYM0l3StmPgmxXPg3O6NFLj4BpWmqd5cF2sOvjE4FwszdMs
+LPSS8cEawbpwOewbok1sLTw3Yzfxf2/gs/NWav/kLhfsQDemrhPohw3NTjG
XspnpwTH3kvgyfBHcFd4ceIehbTuq4l7HdK3SxL3NKSHX09cmyhfL09cT0lX
TwuO7d24z4rEdZB09RuJ6yPp7aWJ62tp8unBuaM71y9K3A+RZl6ZOF5JA5wf
3AORVlwYnc+k+dsyPilnnXlBcN9A+vmy4Lq+Hrwsce2mWqBD8LuS9r40uG8g
rTs4uPZvDncM7jlIk3eDH8xZ93YP7htIM3cKzpvKn5PgD+EujD/F31/AG/LW
BRp/RzVD4vj2FtwLHg/fkXdfTe98NTw6uBZWXh0V3NtpF117qwZvD1/O/02A
R3F9T3gcfDt8BTwRHg33gO+Eb8t7jajuGJn32tIauxW+NLGWuCnv+ukxzR08
Lrgv1IHvmhDca+okzRzcw2kFTwyuPS+Gbw7ut7SBV0X3LKSFRgb3W1rDdwT3
oC6Cb9R6gs+DRwT3iFrC44P7Vx3h4cF9nhbw7cG9rAvhW7Xm4LaKpcG9rAvg
IcG9EfVIpKHmw8/wW/oH69smXLMhcT9QOv/TLIYrl32WuCcpXbcxce9R+n8d
fGrONc5HifsP0o0lg3saK/HFgnsdr+MLYdfBy/Clgvshq/AFg/ser+GLB/c9
3pB+C+6lrJCeDO6lLNc6StzTkP58N3FPQ/p2N9wOXgTvStxTfVl6IXHPULXq
F4l7qqrHv0zcU1WdvjZxz0Qa+OfEvdlX4C2J+6jSt6sT9xCkq3cm7rUuhN9J
3D+R9l6TuH8ijf1B4j6J9HOl1FpKc1cmi42K2XWCe01rFGuxZ+FGXNMnuM/Q
WOs5uN/YEF4a3feRBu4VvCYbwFcE9xjPhPsG1y9nwYOCexTNovW41sZi5nRg
cH3XlPHXo/sp0ur9guugs+EBwevkXOXB4J7em4q7wT0Z9WbeTtwnUR1RLbjP
thpfJbhH9w6+RnCf7V18heB+4Fv4mtjN8Pva05l2kl6qFNwnfBt/KHHP/FU4
H1wDKofuTZxPldOPYD3gpfz/vsT98MXw4cS99yVw5dRaU/u0bnBPby2+Ymr9
rb28Orquk156O7p+k4ZcGd2L/FkxOLqukG55M7ovuZvxZ6J7hZvgidG9fq3n
ydE9Cq3hSdF9Ca3hu6LPBrQXno7uOX6m9RxdK0rHvhddH0q7rs/qFmmGFdE9
sp1aL9FxarPeTXDP80ft++ge6C6tw+iaSvpkbXQNJj32YXR9JT12fXAfVfd8
K1r7Sg9/HF1fSQt9FF2nSeOtia6xpROuymKL1sO06F6E9v66TLdJy70TrVOl
OR+O7nuqz/NEdD/3E/ip6J7sBq336H7xx1pr0T3cT+FZ0f1Tzd090X0zrZN7
o/tmWm8PRfdhVdPNju6lqh58LLofvR5+NLpPvQ6+O7pvprV9Z/Q5itbbuOiz
Ga2f8dFnNlpjt0efr2jv3xp9ZiP9MD26h6OYdkf0uYviz5zo/vJGeGp0H0bx
bUz0eYbW6ujoMx7FrlHRZz+KP72xxbzbn/DXBPfDd2hfRvclv4JbBvfSt+Bb
B/fPv8B3Du6pbsP3CO6p/oDvEtwj/RbfMDhX6v3XD86Vej8tguvfz/H1gnOl
3lWD4LyseTkzOJ9qXroG91S/w1+i/QB/j784ixXSANKNqgtfTKw/VVuoJq2Q
umZW7lbtqdqrTuoa7/ucayv1VXS9Ptc+uO/9Db4N9l/4S/wZwblbmrNV8JnC
VvxFwX1jvat2wf3zr/GNtA9zXm/nBWsV5f8mwf1e7ccXorWI7rM8unesuXg+
WkPo/bwYrS30DDoL0O8rz/OPDe4FKT6MCdbb0i0vRZ8l6BnmRmsUzd28TLto
7m7Qnsk55gwN1jzK3e9H14SqwRdEn0PoPbwW3UPX3l8UfaaiuTg3+JxCcalp
cH9DseKc4LMMrcnF0ecumq+ewX317fhXo3vuWjPLonvrWnsvR/dHtK6GBZ/L
KM4siT6f0GdfiT7j0RqbGd2jVsyfEt3/lB6olbrmlwa+L7o3rtxRInXvXrqo
eOrzPGmqY1OfXUmrFE59VqfcFFP34pUfj099tqe8Viz1GZ40UrnU/RdpxRNT
nwVKU1VJXXtLpxVNfZ4n3VUk9dmhtO4Jqc8IlUND6t6ocm7J1JpVuu7B6PMe
5fHaqfsX0uo1U9fzqiNqpO4FqHY4OXX9r5qiKvxk4ro+n7rnKE1eMPW5oPJ4
mvrsTfm9euo+grR0gdTniNIJhVKf4Sl3H5P6LFBa4v7oswbl39Kpe0nShKVS
a2tpxQ3RfUbV+GVS95ikJ8um7kNJl34W3c9V7f9pdP9Otfn/ANwZ2Bs=
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[CompressedData["
1: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
I/Ls2D/YBuO/Ay3T4QI=
            "]]}],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{690, 1004, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
         914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 1010, 1217, 696, 
         1119, 917, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123,
          921, 701, 1124, 922, 702, 1322, 1005, 923, 1006}], 
        Line3DBox[{704, 1011, 1218, 703, 488, 705, 1125, 924, 706, 1126, 925, 
         707, 1127, 926, 708, 1128, 927, 709, 1129, 1012, 1219, 710, 1013, 
         1220, 711, 1130, 928, 712, 1131, 929, 713, 1132, 930, 714, 1133, 931,
          715, 1134, 932, 716, 1135, 933, 717}], 
        Line3DBox[{719, 1014, 1221, 718, 1015, 1222, 720, 504, 721, 1136, 934,
          722, 1137, 935, 723, 1138, 936, 724, 1139, 1016, 1223, 725, 1017, 
         1224, 726, 1018, 1225, 727, 1140, 937, 728, 1141, 938, 729, 1142, 
         939, 730, 1143, 940, 731, 1144, 941, 732}], 
        Line3DBox[{734, 1019, 1226, 733, 1020, 1227, 735, 1021, 1228, 736, 
         520, 737, 1145, 942, 738, 1146, 943, 739, 1147, 1022, 1229, 740, 
         1023, 1230, 741, 1024, 1231, 742, 1025, 1232, 743, 1148, 944, 744, 
         1149, 945, 745, 1150, 946, 746, 1151, 947, 747}], 
        Line3DBox[{749, 1026, 1233, 748, 1027, 1234, 750, 1028, 1235, 751, 
         1029, 1236, 752, 536, 753, 1152, 948, 754, 1153, 1030, 1237, 755, 
         1031, 1238, 756, 1032, 1239, 757, 1033, 1240, 758, 1034, 1241, 759, 
         1154, 949, 760, 1155, 950, 761, 1156, 951, 762}], 
        Line3DBox[{764, 1035, 1242, 763, 1036, 1243, 765, 1037, 1244, 766, 
         1038, 1245, 767, 1039, 1246, 768, 552, 769, 1157, 1040, 1247, 770, 
         1041, 1248, 771, 1042, 1249, 772, 1043, 1250, 773, 1044, 1251, 774, 
         1045, 1252, 775, 1158, 952, 776, 1159, 953, 777}], 
        Line3DBox[{781, 1160, 954, 779, 1161, 955, 783, 1162, 956, 785, 1163, 
         957, 787, 1164, 958, 789, 1165, 959, 791, 1166, 569, 793, 1167, 960, 
         795, 1168, 961, 797, 1169, 962, 799, 1170, 963, 801, 1171, 964, 803, 
         1172, 965, 805, 1174, 967, 807}], 
        Line3DBox[{806, 966, 1173, 804, 1265, 1057, 802, 1264, 1056, 800, 
         1263, 1055, 798, 1262, 1054, 796, 1261, 1053, 794, 1260, 1052, 792, 
         1259, 568, 790, 1258, 1051, 788, 1257, 1050, 786, 1256, 1049, 784, 
         1255, 1048, 782, 1254, 1047, 778, 1253, 1046, 780}], 
        Line3DBox[{809, 1058, 1266, 808, 1175, 968, 810, 1176, 969, 811, 1177,
          970, 812, 1178, 971, 813, 1179, 972, 814, 1180, 1059, 1267, 815, 
         585, 816, 1181, 973, 817, 1182, 974, 818, 1183, 975, 819, 1184, 976, 
         820, 1185, 977, 821, 1186, 978, 822}], 
        Line3DBox[{824, 1060, 1268, 823, 1061, 1269, 825, 1187, 979, 826, 
         1188, 980, 827, 1189, 981, 828, 1190, 982, 829, 1191, 1062, 1270, 
         830, 1063, 1271, 831, 601, 832, 1192, 983, 833, 1193, 984, 834, 1194,
          985, 835, 1195, 986, 836, 1196, 987, 837}], 
        Line3DBox[{839, 1064, 1272, 838, 1065, 1273, 840, 1066, 1274, 841, 
         1197, 988, 842, 1198, 989, 843, 1199, 990, 844, 1200, 1067, 1275, 
         845, 1068, 1276, 846, 1069, 1277, 847, 617, 848, 1201, 991, 849, 
         1202, 992, 850, 1203, 993, 851, 1204, 994, 852}], 
        Line3DBox[{854, 1070, 1278, 853, 1071, 1279, 855, 1072, 1280, 856, 
         1073, 1281, 857, 1205, 995, 858, 1206, 996, 859, 1207, 1074, 1282, 
         860, 1075, 1283, 861, 1076, 1284, 862, 1077, 1285, 863, 633, 864, 
         1208, 997, 865, 1209, 998, 866, 1210, 999, 867}], 
        Line3DBox[{869, 1078, 1286, 868, 1079, 1287, 870, 1080, 1288, 871, 
         1081, 1289, 872, 1082, 1290, 873, 1211, 1000, 874, 1212, 1083, 1291, 
         875, 1084, 1292, 876, 1085, 1293, 877, 1086, 1294, 878, 1087, 1295, 
         879, 649, 880, 1213, 1001, 881, 1214, 1002, 882}], 
        Line3DBox[{884, 1088, 1296, 883, 1089, 1297, 885, 1090, 1298, 886, 
         1091, 1299, 887, 1092, 1300, 888, 1093, 1301, 889, 1215, 1094, 1302, 
         890, 1095, 1303, 891, 1096, 1304, 892, 1097, 1305, 893, 1098, 1306, 
         894, 1099, 1307, 895, 665, 896, 1216, 1003, 897}], 
        Line3DBox[{911, 1009, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 
         1319, 1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 904, 
         1315, 1314, 1105, 903, 1313, 1104, 902, 1312, 1103, 901, 1311, 1102, 
         900, 1310, 1101, 899, 1309, 1100, 898, 1112, 1308, 1007, 1008}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{251, 474, 1113, 252, 488, 280, 1222, 503, 295, 1227, 518, 
         310, 1234, 533, 325, 1243, 548, 340, 1254, 563, 1161, 355, 578, 1175,
          370, 1269, 593, 385, 1273, 608, 400, 1279, 623, 415, 1287, 638, 430,
          1297, 653, 445, 1309, 668, 460}], 
        Line3DBox[{253, 475, 1114, 254, 489, 1125, 281, 504, 296, 1228, 519, 
         311, 1235, 534, 326, 1244, 549, 341, 1255, 564, 1162, 356, 579, 1176,
          371, 594, 1187, 386, 1274, 609, 401, 1280, 624, 416, 1288, 639, 431,
          1298, 654, 446, 1310, 669, 461}], 
        Line3DBox[{255, 476, 1115, 256, 490, 1126, 282, 505, 1136, 297, 520, 
         312, 1236, 535, 327, 1245, 550, 342, 1256, 565, 1163, 357, 580, 1177,
          372, 595, 1188, 387, 610, 1197, 402, 1281, 625, 417, 1289, 640, 432,
          1299, 655, 447, 1311, 670, 462}], 
        Line3DBox[{257, 477, 1116, 258, 491, 1127, 283, 506, 1137, 298, 521, 
         1145, 313, 536, 328, 1246, 551, 343, 1257, 566, 1164, 358, 581, 1178,
          373, 596, 1189, 388, 611, 1198, 403, 626, 1205, 418, 1290, 641, 433,
          1300, 656, 448, 1312, 671, 463}], 
        Line3DBox[{259, 478, 1117, 260, 492, 1128, 284, 507, 1138, 299, 522, 
         1146, 314, 537, 1152, 329, 552, 344, 1258, 567, 1165, 359, 582, 1179,
          374, 597, 1190, 389, 612, 1199, 404, 627, 1206, 419, 642, 1211, 434,
          1301, 657, 449, 1313, 672, 464}], 
        Line3DBox[{261, 479, 1118, 263, 493, 1129, 285, 508, 1139, 300, 523, 
         1147, 315, 538, 1153, 330, 553, 1157, 345, 568, 1166, 360, 583, 1180,
          375, 598, 1191, 390, 613, 1200, 405, 628, 1207, 420, 643, 1212, 435,
          658, 1215, 450, 1314, 673, 465}], 
        Line3DBox[{265, 481, 1119, 266, 1220, 495, 287, 1224, 510, 302, 1230, 
         525, 317, 1238, 540, 332, 1248, 555, 347, 1260, 570, 1167, 362, 585, 
         377, 1271, 600, 392, 1276, 615, 407, 1283, 630, 422, 1292, 645, 437, 
         1303, 660, 452, 1316, 675, 467}], 
        Line3DBox[{267, 482, 1120, 268, 496, 1130, 288, 1225, 511, 303, 1231, 
         526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 1168, 363, 586, 
         1181, 378, 601, 393, 1277, 616, 408, 1284, 631, 423, 1293, 646, 438, 
         1304, 661, 453, 1317, 676, 468}], 
        Line3DBox[{269, 483, 1121, 270, 497, 1131, 289, 512, 1140, 304, 1232, 
         527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 1169, 364, 587, 
         1182, 379, 602, 1192, 394, 617, 409, 1285, 632, 424, 1294, 647, 439, 
         1305, 662, 454, 1318, 677, 469}], 
        Line3DBox[{271, 484, 1122, 272, 498, 1132, 290, 513, 1141, 305, 528, 
         1148, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 1170, 365, 588,
          1183, 380, 603, 1193, 395, 618, 1201, 410, 633, 425, 1295, 648, 440,
          1306, 663, 455, 1319, 678, 470}], 
        Line3DBox[{273, 485, 1123, 274, 499, 1133, 291, 514, 1142, 306, 529, 
         1149, 321, 544, 1154, 336, 1252, 559, 351, 1264, 574, 1171, 366, 589,
          1184, 381, 604, 1194, 396, 619, 1202, 411, 634, 1208, 426, 649, 441,
          1307, 664, 456, 1320, 679, 471}], 
        Line3DBox[{275, 486, 1124, 276, 500, 1134, 292, 515, 1143, 307, 530, 
         1150, 322, 545, 1155, 337, 560, 1158, 352, 1265, 575, 1172, 367, 590,
          1185, 382, 605, 1195, 397, 620, 1203, 412, 635, 1209, 427, 650, 
         1213, 442, 665, 457, 1321, 680, 472}], 
        Line3DBox[{277, 682, 1322, 683, 278, 501, 1135, 293, 516, 1144, 308, 
         531, 1151, 323, 546, 1156, 338, 561, 1159, 353, 576, 1173, 1174, 368,
          591, 1186, 383, 606, 1196, 398, 621, 1204, 413, 636, 1210, 428, 651,
          1214, 443, 666, 1216, 458, 685, 686, 687}], 
        Line3DBox[{459, 667, 684, 1308, 444, 652, 1296, 429, 637, 1286, 414, 
         622, 1278, 399, 607, 1272, 384, 592, 1268, 369, 577, 1266, 354, 1160,
          562, 1253, 339, 547, 1242, 324, 532, 1233, 309, 517, 1226, 294, 502,
          1221, 279, 487, 1218, 250, 473, 681, 688}], 
        Line3DBox[{466, 674, 1315, 451, 659, 1302, 436, 644, 1291, 421, 629, 
         1282, 406, 614, 1275, 391, 599, 1270, 376, 584, 1267, 361, 569, 1259,
          346, 554, 1247, 331, 539, 1237, 316, 524, 1229, 301, 509, 1223, 286,
          494, 1219, 264, 480, 1217, 262}]}, {}, {}}},
     VertexNormals->CompressedData["
1:eJxcfHc41+/3fyppKKFQkRKZLZLdITtk7z0ys3e2kJE9sonsvSvjLptKpJRI
lJTVC0VC9buf319/fK73X67rcZ3rPM/zcZ/Xuc953PfTSTNHtevbt23bxkW+
bdsO/HfH2JmOIL1uNBuxvESdoItSgykvHQ0mgbbik4s/3waCY9j+5lvGzkg/
P4un8C8JjMip5g4k34fPlPRxgq/8kOsLJlbOXyR4fWLRlOtZDaomLz6/VuaL
Hswf0tiYJ4HW/en1bVm5SITmXsKChzNi+c15L3OTBPzHfkj4MSTA628ecSlX
jRClYx+p/g8Jdn4KUnt3VwKxt+oN62vYIB4WmfJV/Fxqj1FJ16MV8OqJpP5F
X3NU/OShUvMKCQYo/L6zRejAsHOVm6+NC9yU+uL+FdtntTHOtmomop4DZtdP
GNsDWTRPgS/2/+b0ic6YziwwoPBiYPP2gK0dyYy2WyRY0Mn9MW5VA4I3U1/q
v/OD2Zval4YXSCCbpt+tk5aPCudYDaxUfYEvIeHpM/y+HDS3EzeErNC2sHiz
be3OsPH53vgn/NwuuHVuzqEH/la2F6rL20L3he2bQe4k2PBWmxG/3o2cR6m0
YylMgU1xiSE7iASpruXkztIeYHfkfcKDei2Q9BbZmsB+2MzW/cnM82G5VoC8
108T5TPVSh/fIEHn7JaJ90o18rAbYdD8o4O0bD5dJP+GeW78lEGtn45+bJ1R
m3myGyq//pSQ/02CPH3GcPJ9cXDYYJQkM6UI0Sri/b8xD1vT7sJPI5XRiiKb
2D5vYzQW28yxiZ/LsPZzz7WVGtgVqn3p5JA1OuhwpXsAr2Oj7VuuC/MGIE+m
drg30QSc/tx0Wsf2jZRsZVMqyUi9SrPSWOEiQjo0PkLY/+9oM9GQsXuga/HJ
0KjqAqz5T//agdfd/WyGF+d8DTzutLG9u0MdJl6aH/iC/TvG1yoP19xHNUZO
zvSDV+AR366PSphn7fYHwpUkF2Ry7tGV9I8aiKzf8+MX/NyXhzeuHwjpgd71
vwOfBbXRciHP9Rg3ErAcaqgOp+5Gd6kGzEqkZCFC9jq7eigJWqdvmu6WcwSV
lVKKCj9TaH7O9m0e+xGSorwfKpoHEGO56sB9DobL1cWfY56rPr9jyuWuRoc6
Oeo2jLhhcSnnwH0SCTIyEt75Bichve4Hs4MsOtCZcGu3Ln7fR4aLEj0tEeBd
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
/2w=
      "]],
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"},
    PlotRange->{{0, 1}, {0, 1}, {-0.004095858127640073, 0.003837314833746941}},
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]},
    Ticks->{Automatic, Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.675737185866994*^9, 3.675737383457238*^9, 3.675737443041645*^9, 
   3.675737492306829*^9, 3.675737783167835*^9, 3.675737954328631*^9, 
   3.67573804241218*^9, {3.675738148616529*^9, 3.675738161637068*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sparsek2Error2D", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{".042", "^", "2"}], " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"sparseReconstructk", "[", 
              RowBox[{"2", ",", "#", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", "n"}], "]"}], "-", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"Pi", " ", "x"}], "+", "y"}], "]"}]}], ")"}], "^", 
           "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1", ",", ".042"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "0", ",", "1", ",", ".042"}], "}"}]}], "]"}]}], 
       "]"}], "&"}], "@", 
     RowBox[{"sparseCoefficientsk", "[", 
      RowBox[{"2", ",", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"Pi", " ", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "+", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "]"}], "&"}], ",", "n", ",", "2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675737008205017*^9, 3.6757370262199183`*^9}, {
  3.675737063134367*^9, 3.675737063249812*^9}, {3.675737116281015*^9, 
  3.6757371168400393`*^9}, {3.675737162597643*^9, 3.675737163854501*^9}, {
  3.67573816949354*^9, 3.675738193840581*^9}, {3.6757383578149567`*^9, 
  3.6757383598764544`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.06660758395055517`", ",", "0.018214893497095996`", ",", 
   "0.00540757443185294`", ",", "0.0012436284570335164`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.675737030955698*^9, {3.675737114022427*^9, 3.675737120728466*^9}, {
   3.6757381656923723`*^9, 3.675738192595777*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sparsek3Error2D", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{".042", "^", "2"}], " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"sparseReconstructk", "[", 
              RowBox[{"3", ",", "#", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", "n"}], "]"}], "-", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"Pi", " ", "x"}], "+", "y"}], "]"}]}], ")"}], "^", 
           "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1", ",", ".042"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "0", ",", "1", ",", ".042"}], "}"}]}], "]"}]}], 
       "]"}], "&"}], "@", 
     RowBox[{"sparseCoefficientsk", "[", 
      RowBox[{"3", ",", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"Pi", " ", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "+", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "]"}], "&"}], ",", "n", ",", "2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675738380394446*^9, 3.675738387450347*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.00897327796812337`", ",", "0.0012552924859851307`", ",", 
   "0.00018084199258708566`", ",", "0.0000185443752287155`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.675738463910245*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"sparsek4Error2D", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{".042", "^", "2"}], " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"sparseReconstructk", "[", 
              RowBox[{"4", ",", "#", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", "n"}], "]"}], "-", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"Pi", " ", "x"}], "+", "y"}], "]"}]}], ")"}], "^", 
           "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1", ",", ".042"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "0", ",", "1", ",", ".042"}], "}"}]}], "]"}]}], 
       "]"}], "&"}], "@", 
     RowBox[{"sparseCoefficientsk", "[", 
      RowBox[{"4", ",", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"Pi", " ", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "+", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "]"}], "&"}], ",", "n", ",", "2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6757384153430357`*^9, 3.6757384592491913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sparsek2Error2D", ",", "sparsek3Error2D"}], "}"}], "//", 
   "Log2"}], "]"}]], "Input",
 CellChangeTimes->{{3.675738399606168*^9, 3.6757384133386*^9}, {
  3.675738482340119*^9, 3.675738487702756*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., -3.908169737629209}, {2., -5.778737630140675}, {
      3., -7.530802666550452}, {4., -9.651228750365314}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., -6.800149181962242}, {2., -9.637760730114167}, {
      3., -12.432982660519857`}, {4., -15.718658811050851`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 4.}, {-15.718658811050851`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.675738469221607*^9, 3.6757384880091543`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "k2Error2D", ",", "sparsek2Error2D", ",", "k3Error2D", ",", 
     "sparsek3Error2D"}], "}"}], "//", "Log2"}], "]"}]], "Input",
 CellChangeTimes->{{3.675738199596418*^9, 3.6757382338025103`*^9}, {
  3.675738369409243*^9, 3.675738370448522*^9}, {3.6757384734308167`*^9, 
  3.6757384766901712`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., -3.952047999839442}, {2., -5.902225031634669}, {
      3., -7.8532055677870485`}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., -3.908169737629209}, {2., -5.778737630140675}, {
      3., -7.530802666550452}, {4., -9.651228750365314}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., -6.800221462090325}, {2., -9.637658068748353}, {
      3., -12.432396828905564`}}]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., -6.800149181962242}, {2., -9.637760730114167}, {
      3., -12.432982660519857`}, {4., -15.718658811050851`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 4.}, {-15.718658811050851`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.675738202300006*^9, 3.675738234183817*^9}, 
   3.6757383709612703`*^9, 3.6757384771528177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sparseCoefficientsk", "[", 
  RowBox[{"4", ",", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"Pi", " ", 
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      "+", 
      RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "]"}], "&"}], ",", "3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{3.675738508803131*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["320", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4"}], 
                    "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["320", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4"}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.078125`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.535697068542932`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "0.08592395652792549`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "3", ",", "1", ",", 
                    "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "0.020451786527949087`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "4", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.0009480364752897791`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<320>, {4, 4, 4, 4, 4, 4}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.67573856728618*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullCoefficientsk", "[", 
  RowBox[{"4", ",", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"Pi", " ", 
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      "+", 
      RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6757385186101513`*^9, 3.675738519039179*^9}, {
  3.6757386072328672`*^9, 3.6757386080652313`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1010", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4"}], 
                    "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1010", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4"}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.24658203125`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.535697068542932`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "0.08592395652792549`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "3", ",", "1", ",", 
                    "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "0.020451786527949087`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "4", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.0009480364752897791`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<1010>, {4, 4, 4, 4, 4, 4}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.675738567827681*^9, 3.675738830763472*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 651},
WindowMargins->{{28, Automatic}, {36, Automatic}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 25, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 847, 24, 52, "Input",
 InitializationCell->True],
Cell[1408, 46, 372, 10, 28, "Input"],
Cell[1783, 58, 12494, 395, 844, "Input",
 InitializationCell->True],
Cell[14280, 455, 343, 9, 28, "Input",
 InitializationCell->True],
Cell[14626, 466, 925, 27, 52, "Input",
 InitializationCell->True],
Cell[15554, 495, 1409, 37, 63, "Input"],
Cell[16966, 534, 6076, 177, 227, "Input"],
Cell[CellGroupData[{
Cell[23067, 715, 112, 1, 44, "Subsection"],
Cell[23182, 718, 9517, 229, 814, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32736, 952, 104, 1, 44, "Subsection"],
Cell[32843, 955, 8925, 206, 863, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41805, 1166, 112, 1, 44, "Subsection"],
Cell[41920, 1169, 416, 11, 46, "Input"],
Cell[42339, 1182, 2440, 62, 148, "Input"],
Cell[44782, 1246, 1462, 44, 63, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46281, 1295, 104, 1, 44, "Subsection"],
Cell[46388, 1298, 3324, 78, 233, "Input"],
Cell[CellGroupData[{
Cell[49737, 1380, 360, 10, 28, "Input"],
Cell[50100, 1392, 9682, 203, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59819, 1600, 556, 16, 46, "Input"],
Cell[60378, 1618, 76663, 1254, 173, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137078, 2877, 916, 22, 46, "Input"],
Cell[137997, 2901, 83565, 1366, 145, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221599, 4272, 1698, 44, 97, "Input"],
Cell[223300, 4318, 322, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223659, 4330, 1449, 40, 97, "Input"],
Cell[225111, 4372, 228, 6, 28, "Output"]
}, Open  ]],
Cell[225354, 4381, 1453, 40, 97, "Input"],
Cell[CellGroupData[{
Cell[226832, 4425, 282, 7, 28, "Input"],
Cell[227117, 4434, 1728, 39, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228882, 4478, 382, 9, 28, "Input"],
Cell[229267, 4489, 2210, 48, 266, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231514, 4542, 418, 11, 28, "Input"],
Cell[231935, 4555, 9702, 204, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241674, 4764, 534, 14, 28, "Input"],
Cell[242211, 4780, 9733, 204, 61, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

