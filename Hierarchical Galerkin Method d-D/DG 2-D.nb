(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    327908,       6225]
NotebookOptionsPosition[    325623,       6147]
NotebookOutlinePosition[    325981,       6163]
CellTagsIndexPosition[    325938,       6160]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"switch", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">", "0"}], ",", "x", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ceil", "[", 
   RowBox[{"x_", ",", "l_Integer"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[GreaterEqual]", "1"}], ",", 
    SuperscriptBox["2", 
     RowBox[{"l", "-", "1"}]], ",", 
    RowBox[{"1", "+", 
     RowBox[{"Floor", "[", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"l", "-", "1"}]], "x"}], "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.675530697996972*^9, 3.675530709604784*^9}, {
  3.675530784757474*^9, 3.6755307854699507`*^9}, {3.675557179959766*^9, 
  3.675557180440319*^9}, {3.675598722564789*^9, 3.675598722754263*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"legendre", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"LegendreP", "[", 
    RowBox[{
     RowBox[{"n", "-", "1"}], ",", 
     RowBox[{
      RowBox[{"2", " ", "x"}], "-", "1"}]}], "]"}], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}], "+", 
     "1"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"1", ",", "1", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      FractionBox["1", 
       SqrtBox["2"]], ",", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"2", ",", "1", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       SqrtBox[
        FractionBox["3", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "x"}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"2", ",", "1", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"2", ",", "2", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       SqrtBox[
        FractionBox["1", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"3", " ", "x"}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"2", ",", "2", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"3", ",", "1", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SqrtBox[
        FractionBox["1", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"24", " ", "x"}], "+", 
         RowBox[{"30", " ", 
          SuperscriptBox["x", "2"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"3", ",", "1", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"3", ",", "2", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        FractionBox["3", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"16", " ", "x"}], "+", 
         RowBox[{"15", " ", 
          SuperscriptBox["x", "2"]}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"3", ",", "2", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"3", ",", "3", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SqrtBox[
        FractionBox["5", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"15", " ", "x"}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox["x", "2"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"3", ",", "3", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"4", ",", "1", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", " ", 
      RowBox[{
       SqrtBox[
        FractionBox["15", "34"]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"4", "x"}], "-", 
         RowBox[{"30", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"28", " ", 
          SuperscriptBox["x", "3"]}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"4", ",", "1", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"4", ",", "2", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", " ", 
      RowBox[{
       SqrtBox[
        FractionBox["1", "42"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"105", "x"}], "-", 
         RowBox[{"300", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"210", " ", 
          SuperscriptBox["x", "3"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"4", ",", "2", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"4", ",", "3", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        FractionBox["35", "34"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"48", "x"}], "-", 
         RowBox[{"105", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"64", " ", 
          SuperscriptBox["x", "3"]}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"4", ",", "3", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"4", ",", "4", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", " ", 
      RowBox[{
       FractionBox["1", "2"], 
       SqrtBox[
        FractionBox["5", "42"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "16"}], "+", 
         RowBox[{"105", "x"}], "-", 
         RowBox[{"192", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"105", " ", 
          SuperscriptBox["x", "3"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"4", ",", "4", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"5", ",", "1", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       SqrtBox[
        FractionBox["1", "186"]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"30", "x"}], "+", 
         RowBox[{"210", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"840", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"630", 
          SuperscriptBox["x", "4"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"5", ",", "1", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"5", ",", "2", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "2"], 
       SqrtBox[
        FractionBox["1", "38"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "-", 
         RowBox[{"144", "x"}], "+", 
         RowBox[{"1155", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"2240", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"1260", 
          SuperscriptBox["x", "4"]}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"5", ",", "2", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"5", ",", "3", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       SqrtBox[
        FractionBox["35", "14694"]], " ", 
       RowBox[{"(", 
        RowBox[{"22", "-", 
         RowBox[{"735", "x"}], "+", 
         RowBox[{"3504", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"5460", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"2700", 
          SuperscriptBox["x", "4"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"5", ",", "3", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"5", ",", "4", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "8"], 
       SqrtBox[
        FractionBox["21", "38"]], " ", 
       RowBox[{"(", 
        RowBox[{"35", "-", 
         RowBox[{"512", "x"}], "+", 
         RowBox[{"1890", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"2560", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"1155", 
          SuperscriptBox["x", "4"]}]}], ")"}]}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"5", ",", "4", ",", 
        RowBox[{"-", "x"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"5", ",", "5", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       FractionBox["1", "2"], 
       SqrtBox[
        FractionBox["7", "158"]], " ", 
       RowBox[{"(", 
        RowBox[{"32", "-", 
         RowBox[{"315", "x"}], "+", 
         RowBox[{"960", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"1155", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"480", 
          SuperscriptBox["x", "4"]}]}], ")"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"h", "[", 
        RowBox[{"5", ",", "5", ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.675447334184072*^9, 3.675447464213695*^9}, {
  3.675447544245944*^9, 3.675447615694927*^9}, {3.6754476549568033`*^9, 
  3.675447686386791*^9}, {3.675447716966317*^9, 3.6754477235600357`*^9}, {
  3.675448007387443*^9, 3.675448016070777*^9}, {3.675528282866611*^9, 
  3.675528320546008*^9}, {3.67552914761718*^9, 3.675529155105283*^9}, {
  3.675529368119573*^9, 3.675529374163878*^9}, {3.675529643493765*^9, 
  3.6755296881587057`*^9}, {3.675541707759493*^9, 3.675541762689043*^9}, {
  3.675549367860647*^9, 3.675549463685646*^9}, {3.675550177804304*^9, 
  3.675550301656516*^9}, {3.6755503385854197`*^9, 3.675550625933754*^9}, {
  3.675550703098613*^9, 3.675550841347681*^9}, {3.675550884121045*^9, 
  3.675550895381874*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fk", "[", 
   RowBox[{"k_", ",", "fnumber_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"k", ",", "fnumber", ",", "#"}], "]"}], "&"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.675551380531869*^9, 3.675551421155471*^9}, {
  3.6755516845361967`*^9, 3.675551688590851*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vk", "[", 
   RowBox[{"k_", ",", "fnumber_", ",", "level_", ",", "place_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"level", "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"legendre", "[", 
      RowBox[{"fnumber", ",", "#1"}], "]"}], "&"}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"level", "/", "2"}]], " ", 
      RowBox[{
       RowBox[{"fk", "[", 
        RowBox[{"k", ",", "fnumber"}], "]"}], "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["2", "level"], " ", "#1"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "place"}], "-", "1"}], ")"}]}], "]"}]}], "&"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.675551428128154*^9, 3.6755514522251177`*^9}, {
  3.675551689944075*^9, 3.6755516941769648`*^9}, {3.675555714578012*^9, 
  3.675555719849732*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vk", "[", 
   RowBox[{"k_", ",", "fnumber_List", ",", "level_List", ",", "place_List"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"vk", "[", 
      RowBox[{"k", ",", 
       RowBox[{
       "fnumber", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "place", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      "]"}], "[", 
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}], 
    RowBox[{
     RowBox[{"vk", "[", 
      RowBox[{"k", ",", 
       RowBox[{
       "fnumber", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "place", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "]"}], "[", 
     RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "]"}]}], "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Tensor", " ", "Product", " ", "Construction"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6755574008683023`*^9, 3.6755574772125063`*^9}, {
   3.675596297284898*^9, 3.6755963117338247`*^9}, {3.675597944503475*^9, 
   3.6755979562005568`*^9}, 3.675604234073991*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"innerProduct", "[", 
    RowBox[{
    "f_", ",", "g_", ",", "level_List", ",", "place_List", ",", 
     "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Epsilon]", "2"], " ", 
      SuperscriptBox["2", 
       RowBox[{"-", 
        RowBox[{"switch", "[", 
         RowBox[{
          RowBox[{
          "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "-", "1"}], "]"}]}]], 
      SuperscriptBox["2", 
       RowBox[{"-", 
        RowBox[{"switch", "[", 
         RowBox[{
          RowBox[{
          "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "-", "1"}], "]"}]}]]}], ")"}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "place", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "-", "1"}], ")"}], " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "place", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          ")"}], " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Epsilon]", " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "place", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "-", "1"}], ")"}], " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "place", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          ")"}], " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}], ",", 
        RowBox[{"\[Epsilon]", " ", 
         SuperscriptBox["2", 
          RowBox[{"-", 
           RowBox[{"switch", "[", 
            RowBox[{
             RowBox[{
             "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "-", "1"}], "]"}]}]]}]}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"innerProduct", "[", 
   RowBox[{"f_", ",", "g_", ",", "level_List", ",", "place_List"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}], " ", 
     RowBox[{"g", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "place", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-",
          "1"}], ")"}], " ", 
       SuperscriptBox["2", 
        RowBox[{"-", 
         RowBox[{"switch", "[", 
          RowBox[{
           RowBox[{
           "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "-", "1"}], "]"}]}]]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "place", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ")"}], " ", 
       SuperscriptBox["2", 
        RowBox[{"-", 
         RowBox[{"switch", "[", 
          RowBox[{
           RowBox[{
           "level", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "-", "1"}], "]"}]}]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "place", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-",
          "1"}], ")"}], " ", 
       SuperscriptBox["2", 
        RowBox[{"-", 
         RowBox[{"switch", "[", 
          RowBox[{
           RowBox[{
           "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "-", "1"}], "]"}]}]]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "place", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ")"}], " ", 
       SuperscriptBox["2", 
        RowBox[{"-", 
         RowBox[{"switch", "[", 
          RowBox[{
           RowBox[{
           "level", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "-", "1"}], "]"}]}]]}]}], "}"}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.67555751405438*^9, 3.6755576031180077`*^9}, {
   3.675557651394096*^9, 3.675557691767502*^9}, {3.675595807015128*^9, 
   3.675595863687018*^9}, {3.6755979021319017`*^9, 3.675597904575652*^9}, {
   3.675598149255072*^9, 3.675598249439992*^9}, {3.6755983007145233`*^9, 
   3.675598312965866*^9}, {3.675598414743586*^9, 3.675598457517686*^9}, 
   3.675604682498172*^9, {3.675604892236114*^9, 3.675604892597993*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"innerProduct", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"Vk", "[", 
     RowBox[{"3", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", ".01"}], "]"}], "//", 
  "Timing"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"innerProduct", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"Vk", "[", 
     RowBox[{"3", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "//", "Timing"}]}], "Input",
 CellChangeTimes->{{3.675595870239449*^9, 3.6755959252366743`*^9}, {
  3.675598065710462*^9, 3.6755980786306257`*^9}, {3.6755981117275267`*^9, 
  3.675598112909259*^9}, {3.675598253100733*^9, 3.675598287727209*^9}, {
  3.675598343721588*^9, 3.675598348921406*^9}, {3.675604662319902*^9, 
  3.675604674703302*^9}, {3.675604877921023*^9, 3.6756049049909286`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.556448`", ",", "0.00007461382038133991`"}], "}"}]], "Output",
 CellChangeTimes->{{3.675595917078611*^9, 3.67559592552772*^9}, {
   3.675598060369316*^9, 3.675598081674013*^9}, {3.675598165145344*^9, 
   3.675598169352556*^9}, {3.675598204883827*^9, 3.6755983495587482`*^9}, 
   3.67560404692745*^9, 3.675604238073657*^9, {3.67560466502103*^9, 
   3.675604684372159*^9}, {3.6756048827465477`*^9, 3.675604909976541*^9}, 
   3.675699460352602*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.144856`", ",", "6.918367445769846`*^-10"}], "}"}]], "Output",
 CellChangeTimes->{{3.675595917078611*^9, 3.67559592552772*^9}, {
   3.675598060369316*^9, 3.675598081674013*^9}, {3.675598165145344*^9, 
   3.675598169352556*^9}, {3.675598204883827*^9, 3.6755983495587482`*^9}, 
   3.67560404692745*^9, 3.675604238073657*^9, {3.67560466502103*^9, 
   3.675604684372159*^9}, {3.6756048827465477`*^9, 3.675604909976541*^9}, 
   3.675699460507492*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hierIterate", "[", 
    RowBox[{"k_", ",", "n_List", ",", "lp_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fnumber", ",", "level", ",", "place", ",", "hashMap", ",", "count"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hashMap", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"k", " ", 
            SuperscriptBox["2", 
             RowBox[{
             "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}]}],
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"count", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "n", "]"}], "\[Equal]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"level", "=", "0"}], ",", 
           RowBox[{"level", "\[LessEqual]", 
            RowBox[{
            "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"place", "=", "1"}], ",", 
             RowBox[{"place", "\[LessEqual]", 
              SuperscriptBox["2", 
               RowBox[{"switch", "[", 
                RowBox[{"level", "-", "1"}], "]"}]]}], ",", 
             RowBox[{"place", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"fnumber", "=", "1"}], ",", 
               RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
               RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"hashMap", "\[LeftDoubleBracket]", 
                  RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"lp", ",", 
                   RowBox[{"{", 
                    RowBox[{"fnumber", ",", 
                    RowBox[{"level", "+", "1"}], ",", "place"}], "}"}]}], 
                  "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"Partition", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "hashMap", "]"}], ",", 
            RowBox[{"3", " ", 
             RowBox[{"Length", "[", "n", "]"}]}]}], "]"}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"level", "=", "0"}], ",", 
           RowBox[{"level", "\[LessEqual]", 
            RowBox[{
            "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"place", "=", "1"}], ",", 
             RowBox[{"place", "\[LessEqual]", 
              SuperscriptBox["2", 
               RowBox[{"switch", "[", 
                RowBox[{"level", "-", "1"}], "]"}]]}], ",", 
             RowBox[{"place", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"fnumber", "=", "1"}], ",", 
               RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
               RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"hashMap", "\[LeftDoubleBracket]", 
                  RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
                 RowBox[{"hierIterate", "[", 
                  RowBox[{"k", ",", 
                   RowBox[{"n", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"Join", "[", 
                    RowBox[{"lp", ",", 
                    RowBox[{"{", 
                    RowBox[{"fnumber", ",", 
                    RowBox[{"level", "+", "1"}], ",", "place"}], "}"}]}], 
                    "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"Partition", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "hashMap", "]"}], ",", 
            RowBox[{"3", " ", 
             RowBox[{"Length", "[", "n", "]"}]}]}], "]"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hierIterate", "[", 
    RowBox[{"k_", ",", "n_List"}], "]"}], ":=", 
   RowBox[{"hierIterate", "[", 
    RowBox[{"k", ",", "n", ",", 
     RowBox[{"{", "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hierLevFuncIterate", "[", 
    RowBox[{"k_", ",", "n_List", ",", "l_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"count", ",", "level", ",", "fnumber", ",", "hashMap"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "n", "]"}], "\[Equal]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"hashMap", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"k", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "+", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"level", "=", "0"}], ",", 
          RowBox[{"level", "\[LessEqual]", 
           RowBox[{
           "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"fnumber", "=", "1"}], ",", 
            RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
            RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"hashMap", "\[LeftDoubleBracket]", 
               RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Join", "[", 
               RowBox[{"l", ",", 
                RowBox[{"{", 
                 RowBox[{"fnumber", ",", 
                  RowBox[{"level", "+", "1"}]}], "}"}]}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", "hashMap", "]"}], ";"}], "\[IndentingNewLine]",
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"hashMap", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"k", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "+", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"level", "=", "0"}], ",", 
          RowBox[{"level", "\[LessEqual]", 
           RowBox[{
           "n", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"fnumber", "=", "1"}], ",", 
            RowBox[{"fnumber", "\[LessEqual]", "k"}], ",", 
            RowBox[{"fnumber", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"hashMap", "\[LeftDoubleBracket]", 
               RowBox[{"count", "++"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"hierLevFuncIterate", "[", 
               RowBox[{"k", ",", 
                RowBox[{"n", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"Join", "[", 
                 RowBox[{"l", ",", 
                  RowBox[{"{", 
                   RowBox[{"fnumber", ",", 
                    RowBox[{"level", "+", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "hashMap", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hierLevFuncIterate", "[", 
   RowBox[{"k_", ",", "n_List"}], "]"}], ":=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"hierLevFuncIterate", "[", 
      RowBox[{"k", ",", "n", ",", 
       RowBox[{"{", "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"2", " ", 
     RowBox[{"Length", "[", "n", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6755963454668493`*^9, 3.675596349361437*^9}, {
   3.675596435030635*^9, 3.6755965372829933`*^9}, {3.675596570077107*^9, 
   3.675596601346223*^9}, {3.675596709773736*^9, 3.675596765698435*^9}, {
   3.67559680310684*^9, 3.675596949178554*^9}, {3.67559698907086*^9, 
   3.675596998515541*^9}, {3.675597063444777*^9, 3.675597063693513*^9}, {
   3.675597113600189*^9, 3.675597113855936*^9}, 3.6755973082648993`*^9, 
   3.675597354395906*^9, {3.675600547518127*^9, 3.6756009595883827`*^9}, {
   3.675601010639557*^9, 3.67560101844876*^9}, {3.6756010528958883`*^9, 
   3.675601070303954*^9}, {3.67560116211063*^9, 3.675601231424816*^9}, {
   3.6756013090034513`*^9, 3.675601310985058*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pointIndex", "[", 
   RowBox[{"x_", ",", "l_Integer"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "\[LessEqual]", "1"}], ",", "1", ",", 
        RowBox[{"ceil", "[", 
         RowBox[{"x", ",", "k"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "l"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointIndex", "[", 
   RowBox[{"x_List", ",", "l_List"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"pointIndex", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"l", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "l", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spointIndex", "[", 
   RowBox[{"x_List", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"pointIndex", "[", 
     RowBox[{
      RowBox[{"x", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      ",", "n"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.675699981315504*^9, 3.6756999840303307`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getCoefficientsk", "[", 
    RowBox[{
    "k_", ",", "f_", ",", "fnumber_List", ",", "level_List", ",", 
     "place_List"}], "]"}], ":=", 
   RowBox[{"innerProduct", "[", 
    RowBox[{"f", ",", 
     RowBox[{"Vk", "[", 
      RowBox[{"k", ",", "fnumber", ",", "level", ",", "place"}], "]"}], ",", 
     "level", ",", "place"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fullCoefficientsk", "[", 
    RowBox[{"k_", ",", "f_", ",", "n_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"iters", ",", "i", ",", "hash", ",", "count", ",", "coeff"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"iters", "=", 
       RowBox[{"hierIterate", "[", 
        RowBox[{"k", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hash", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "iters", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "iters", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"coeff", "=", 
          RowBox[{"getCoefficientsk", "[", 
           RowBox[{"k", ",", "f", ",", 
            RowBox[{
             RowBox[{
             "iters", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"1", ";;", ";;", "3"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "iters", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "\[LeftDoubleBracket]", 
              RowBox[{"2", ";;", ";;", "3"}], "\[RightDoubleBracket]"}], "-", 
             "1"}], ",", 
            RowBox[{
             RowBox[{
             "iters", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"3", ";;", ";;", "3"}], "\[RightDoubleBracket]"}]}], 
           "]"}]}], ";", 
         RowBox[{
          RowBox[{
          "hash", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{
           "iters", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "\[Rule]", "coeff"}]}], ";"}]}], "]"}], ";", 
      RowBox[{"Return", "[", 
       RowBox[{"SparseArray", "[", 
        RowBox[{"Chop", "[", "hash", "]"}], "]"}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Seems", " ", "to", " ", "be", " ", "working"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"reconstructk", "[", 
    RowBox[{"k_", ",", "coeffs_", ",", "x_List", ",", "n_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "place", ",", "value", ",", "d", ",", "indices", ",", "iters",
        ",", "lp", ",", "arraySpot"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"value", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"d", "=", 
       RowBox[{"Length", "[", "x", "]"}]}], ";", "  ", 
      RowBox[{"(*", "dimension", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"indices", "=", 
       RowBox[{"pointIndex", "[", 
        RowBox[{"x", ",", "n"}], "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "Corresponding", " ", "place", " ", "of", " ", "a", " ", "given", " ", 
        "multidim", " ", "point"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"iters", "=", 
       RowBox[{"hierLevFuncIterate", "[", 
        RowBox[{"k", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "iters", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"lp", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"iters", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", 
                 RowBox[{
                  RowBox[{"2", "a"}], "-", "1"}]}], "\[RightDoubleBracket]"}],
                ",", 
               RowBox[{"iters", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", 
                 RowBox[{"2", "a"}]}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"indices", "\[LeftDoubleBracket]", 
                RowBox[{"a", ",", 
                 RowBox[{"iters", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", 
                   RowBox[{"2", "a"}]}], "\[RightDoubleBracket]"}]}], 
                "\[RightDoubleBracket]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "1", ",", "d"}], "}"}]}], "]"}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
             RowBox[{
             "iters", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             ",", "\"\< and \>\"", ",", 
             RowBox[{"indices", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", 
               RowBox[{"iters", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], 
              "\[RightDoubleBracket]"}], ",", "\"\<,\>\"", ",", 
             RowBox[{"indices", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", 
               RowBox[{"iters", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}]}], 
              "\[RightDoubleBracket]"}]}], "]"}], ";"}], "*)"}], 
         RowBox[{"value", "+=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
              "coeffs", "\[LeftDoubleBracket]", "##", 
               "\[RightDoubleBracket]"}], "&"}], "@@", 
             RowBox[{"Sequence", "[", "lp", "]"}]}], ")"}], 
           RowBox[{
            RowBox[{"Vk", "[", 
             RowBox[{"k", ",", 
              RowBox[{"lp", "\[LeftDoubleBracket]", 
               RowBox[{"1", ";;", ";;", "3"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{"lp", "\[LeftDoubleBracket]", 
                RowBox[{"2", ";;", ";;", "3"}], "\[RightDoubleBracket]"}], 
               "-", "1"}], ",", 
              RowBox[{"lp", "\[LeftDoubleBracket]", 
               RowBox[{"3", ";;", ";;", "3"}], "\[RightDoubleBracket]"}]}], 
             "]"}], "[", "x", "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "value", "]"}], ";"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reconstructk", "[", 
   RowBox[{"k_", ",", "coeffs_", ",", "n_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "i", ",", "place", ",", "d", ",", "indices", ",", "iters", ",", "keys"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"value", "=", "0"}], ";", "  ", "\[IndentingNewLine]", 
     RowBox[{"keys", "=", 
      RowBox[{"Keys", "[", 
       RowBox[{"ArrayRules", "[", "coeffs", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{
         RowBox[{"Length", "[", "keys", "]"}], "-", "1"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"value", "+=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "coeffs", "\[LeftDoubleBracket]", "##", 
              "\[RightDoubleBracket]"}], "&"}], "@@", 
            RowBox[{"Sequence", "[", 
             RowBox[{
             "keys", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "]"}]}], ")"}], 
          RowBox[{
           RowBox[{"Vk", "[", 
            RowBox[{"k", ",", 
             RowBox[{
              RowBox[{
              "keys", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"1", ";;", ";;", "3"}], "\[RightDoubleBracket]"}], ",", 
             
             RowBox[{
              RowBox[{
               RowBox[{
               "keys", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                "\[LeftDoubleBracket]", 
               RowBox[{"2", ";;", ";;", "3"}], "\[RightDoubleBracket]"}], "-",
               "1"}], ",", 
             RowBox[{
              RowBox[{
              "keys", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"3", ";;", ";;", "3"}], "\[RightDoubleBracket]"}]}], 
            "]"}], "[", 
           RowBox[{"Slot", "[", "1", "]"}], "]"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"value", "&"}], "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.675597360522213*^9, 3.6755973940359087`*^9}, {
   3.675597432372115*^9, 3.675597437915703*^9}, {3.675597472944252*^9, 
   3.675597489740184*^9}, {3.675597531424239*^9, 3.675597551359826*^9}, {
   3.6755975814451723`*^9, 3.675597589829194*^9}, {3.675598647392295*^9, 
   3.675598686706406*^9}, {3.675598731369802*^9, 3.6755987482706823`*^9}, {
   3.675598783771076*^9, 3.67559883059925*^9}, {3.675598870500681*^9, 
   3.6755989146616573`*^9}, {3.675599448030251*^9, 3.6755994497147923`*^9}, {
   3.6755994924921417`*^9, 3.6755995787658787`*^9}, {3.675599645193185*^9, 
   3.6755997192686567`*^9}, {3.6755997615548*^9, 3.67559995086664*^9}, {
   3.6756001879164257`*^9, 3.675600235028776*^9}, {3.6756002676617002`*^9, 
   3.675600297792323*^9}, {3.675600340117649*^9, 3.675600342589993*^9}, {
   3.675601392759037*^9, 3.675601462346682*^9}, {3.675603109469727*^9, 
   3.675603143704265*^9}, {3.6756031917452374`*^9, 3.675603352261416*^9}, {
   3.675603382715767*^9, 3.675603402416751*^9}, {3.675603525915292*^9, 
   3.675603528587769*^9}, {3.675604002514846*^9, 3.6756040042446337`*^9}, {
   3.6756040797483587`*^9, 3.675604083594962*^9}, {3.675604136721023*^9, 
   3.6756041373759937`*^9}, {3.675604176232501*^9, 3.675604224950152*^9}, {
   3.6756962634794283`*^9, 3.675696272556808*^9}, {3.675696346115384*^9, 
   3.6756963481769238`*^9}, {3.6756963817777653`*^9, 
   3.6756964239347677`*^9}, {3.675697714112986*^9, 3.675697725128151*^9}, {
   3.675697970247283*^9, 3.675698068057447*^9}, 3.675698112171318*^9, {
   3.6756983990984297`*^9, 3.67569847612304*^9}, 3.675698538465384*^9, {
   3.6756986001934147`*^9, 3.675698642885778*^9}, {3.6756986849613028`*^9, 
   3.675698686288095*^9}, 3.675699147601448*^9, {3.675699178715358*^9, 
   3.675699192645464*^9}, {3.6756992618858633`*^9, 3.675699269241186*^9}, {
   3.675699320328209*^9, 3.675699324236122*^9}, {3.675699403328292*^9, 
   3.675699405075326*^9}, 3.675699509215411*^9, {3.675699552038303*^9, 
   3.675699555961108*^9}, {3.675699652749856*^9, 3.675699739262806*^9}, {
   3.675699927489901*^9, 3.675699934375901*^9}, 3.6756999994890842`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pointIndex", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{".6", ",", ".6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675699610877632*^9, 3.675699619942688*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675699620311305*^9, 3.675700001325234*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reconstructk", "[", 
  RowBox[{"3", ",", "coeffs", ",", 
   RowBox[{"{", 
    RowBox[{".5", ",", ".7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675698489343231*^9, 3.6756984941891727`*^9}, {
  3.6756985558691072`*^9, 3.675698572358251*^9}, {3.675698743520422*^9, 
  3.675698769445025*^9}, {3.675699560271262*^9, 3.6756995894140673`*^9}}],

Cell[BoxData["1.0013205780003938`"], "Output",
 CellChangeTimes->{
  3.675698494536973*^9, {3.675698549789019*^9, 3.675698572684608*^9}, {
   3.675698606552229*^9, 3.675698646435589*^9}, 3.675698689439275*^9, {
   3.675698746664612*^9, 3.675698769834358*^9}, 3.675699195532043*^9, 
   3.675699271535462*^9, 3.67569932656112*^9, 3.675699429850355*^9, 
   3.6756995102803288`*^9, {3.675699561925749*^9, 3.675699590310987*^9}, 
   3.675699691552207*^9, 3.675699743308302*^9, {3.6756999302767057`*^9, 
   3.6756999368572397`*^9}, {3.675699991930607*^9, 3.6757000020881987`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"reconstructk", "[", 
        RowBox[{"3", ",", "#", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "-", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", " ", "x"}], "]"}]}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "&"}], "@", 
  "coeffs"}]], "Input",
 CellChangeTimes->{{3.675600131676858*^9, 3.675600201544836*^9}, {
   3.675603535138887*^9, 3.675603536287499*^9}, {3.6756041681976757`*^9, 
   3.675604168693325*^9}, {3.675604205976856*^9, 3.6756042136670237`*^9}, {
   3.67560425826753*^9, 3.675604310089673*^9}, {3.675604534632861*^9, 
   3.675604538994021*^9}, {3.67560469090342*^9, 3.6756047005031*^9}, 
   3.6756047347044497`*^9, {3.675604801673717*^9, 3.675604824160297*^9}, {
   3.675604942006144*^9, 3.6756049817908983`*^9}, {3.675605025148664*^9, 
   3.67560502971701*^9}, {3.675605070231193*^9, 3.6756050777680063`*^9}, {
   3.675613730421074*^9, 3.6756137313942738`*^9}, {3.6756137670033092`*^9, 
   3.67561376927851*^9}, {3.675613829494145*^9, 3.6756138351632547`*^9}, 
   3.675613871889348*^9, {3.67561419438583*^9, 3.675614198505883*^9}, {
   3.675696229738418*^9, 3.675696230786777*^9}, {3.675697698122162*^9, 
   3.675697701108489*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHlczNv/x6dBuEKyR4QoJLkGcTElmsq+75mskYjcimvJmmtN2UlDZE9I
xjplSWQJlVQooSjZa2jS79O3z/s9r1+Px/XPPDwdZ97znDPvz/mcz/ucVlPn
j5ghlUgkHapJJFWE14PjTl5cb+3Tl17dD7yZV//jPM0cm7572rqckxOX7Bqz
4OnAifJTec/LLFxu6PnD2tndJK4ai8sNul70StTzz9PODrftp3l42/K8hcsT
PY89azXFu5t8g83t+14ZqcCn/Jl93VbutGvquxivDD3XeR7803mAxkBS/idL
z6M2lJ0JHy2fEv1wk4XLaz1P2PzVRmh/zSO0qUvwGz232nvhvdB/M7O5EV4Z
7/R8nHrMVCGexY97dQ22eK/nw35tHinE/2xtzdgYr3w9N6kxr6fwebv1ShuU
EfNRzwfPL3wi+NlWGPG8rOwTc/mC4xITwSf9nbyezD7pc6tA75leJa/OjkkA
z8yNFs7KBM/Mpz++GA+emeeNbtsWPDMPGrxCB56ZvwnruAo8M6/a0KgBeGb+
fczH1eCZub2lzy/wzNzW/lBr8MxcO2BIAnjW807rXoBn5j3HpCWAZ+LyDbfl
Nwv0nsnfzn+NDx8Cz8Qlmg57boNn5tLTtc0M9J6Zyz78+gyemRuvbdgUPDNv
Uvi4mUbvmfnSwkN7wTPzaPc1KYf0npn7Bx3YD56Z1zgf20Sj98x83PyQxuCZ
edqnD5/BM/OqXRY0N9B7Jh6Q+PztbfBM/P1kj0OHwDN5qrnDRBIJnokH/BVn
lwieiUsirz8thvHM3C5ySRJ4Zj5O/rMXeGZu7NBBDp6ZvxlbfSl4Zp7g7fEd
PDMf1ctwMXhmPqzPgf7gmXkNpw4O4Jn5/eJpD8Azc6t6nYtgPDOv9qvRPfBM
vPjDNqso8Ew+Xs21yToKnolL2nw1vA+emf+O1EphPDOXNJC/BM/M/QONMG8w
93jXrwt4Zh40+e5m8Mz8jaxqFnhmnhw0fQt4Zp6WEWsFnpkb9+zRHDwzP9zg
RBZ4Zl4ncK8UxjPxgPG5ox+AZ+J2Z5onRoBn+tzNTH0ebALPxCULfa7jeGZu
V7+fLXhmLptopgXPzJOWGtuCZ+ax/cNdwTPzBKtRu8Ez87nX3a6CZz3/qdkD
nplHGSx0Bs/MPzs+twXPzE/90b8IPDMfs6SnDXhmvnTvgUTwTPyH8djaW8Az
fb46V09ZHwbPxAMebrDC8Uxccsr6eBXwzHyU6aAn4Jl5DfO348Ezc1W6yh08
M39Tw2oheGa+dPe2QvDMPPnp7oXgmblVhu9U8Mzce2zCJPDM3N5sUBJ4Zv7Q
sTeOZ/bzR7fz6Jm4++1J846AZ/ocPiOGzsoBz8Qlo26Nwnkd853FHpshPzPf
5LZiF3hmHhvfzxg8Mzd2fpAG8w3mWVuXzAfPzBO6NHSF+Ya+fcR2T/DM/PNl
55cw32B+bHDXBuCZed5ex53gmfmwD302Q35mnv51A87riI8NnjrrDXimeM+n
brGPAM/EJckrCuPBM/PX2nUmMJ6ZB91OywXPzKMCPzcHz8yVHVt0hPHM3OLE
3q3gmbn3mC/pMJ6ZN7fWBIFn5lmJdTvCeGYu6arF/Mz8lHXPPPDMfHl4vfow
npkf3yC9A56JG83e/QTHM8V129eoy3bwTDxg4h2Pm+CZuKTfpKju4Jl5/5Dv
ReCZ+bjpdXqDZ+bGoRnTwDPzYabe/4Jn5nYrB8eCZ33/Hgc3gGfmtgX3ZoBn
5ubHcvuAZ+axVRoWg2fm66cc6gGe2c+g831ugmfi07v1vxUCnun9R3dMsDsN
nokHfNl7E+9TiEu2t3r7E/IG8013ntwCz8xjJ+33As/Mx4VWWw2emVtk/ZoE
nplbn2v/Czwzd57413jwzDyv2ZIt4Jm58WkDP/DMfJD5sxvgmfnUFp9/Qd5g
nji3N45n4k0/z+gdCZ7pffZUU0SdA8/EA/71T7oLnolLTvWd/hU8M88c+M89
8MxcuSR1IHhmrk4cMxI8M7dfdHIBeGYuK3hcDJ6Zm/d4sAA8M09Y8GQoeGYe
dK3RAPCsj7+j90PwzDx5Xcp38Mx+juXl4fyZ+INLWV1x/kz91fNZZ34QPBMP
UDRwvQeeiUt8536rB3mD+aTFN9+CZ+ZZj5Z1Bs/MvbeM6QSemUtMPmJ+Zh7Q
cvAL8Mxc9ffkbeCZeZqbWSfwzFybMADndcwLqsx6C56ZrwpPqwd5g/3EmsnR
M/HQHV86HQTPnNc3TizUgGfiAf7RP3H+TFzyOn0jrm8wt0vPxvHMPGnawkbg
mbnH9Am5MN9g3lxivwU86/vPja4L8w3mAXPnbgXPzG2Nzd/CfIN5k9tOjcAz
8+RXKXfBM3P7q+0zYDyzn7k2BvfBM3Gj31ePx4Jn+vcOQ+Kb1oX1OuKSluNf
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
tt7H8ZwB4n8ZHd2G9920HhY7UnfhHnjm/WGXSp4eA89ct1Jv/Z6qkDeYh9Sr
9Qo8M8/83gvvU5gXrn6G5/sxD3ywEs9zYD6vXu578Mx8XNdsPG+HuU2tFs3A
M3NJjfj24Jn5u8urXoJn4gFn31vjfTfz/INn0DPxS/PfGB0Hz7SeN6z27DF4
Hhdx+5vG9okwbokHXJobGws+iUtMD1yuDz6ZB7nvS4d5KfP3gUZ4vWN+aWFY
S5hn8vt6tv6N5+pw+2w3v2cwb2R+srW7CfhkfueKSSz4ZJ564AWuvxGP+pG/
Du/7iPfPm/IjQfC5TKyHo/W61S6TdLsy5BqqP+P1vS/a/dEdHDVUL8XrgW6H
rZrMtZYvFOtjmDdakmw1uovcRqzn4PXA/GpPV4c4aOi5PvEysb6RnkPzPqf7
fZJanGjNz025//kn15Q8l/FzPv26aJu+Iyz7aOi5lH7d0lJx39BFQ89ReF35
85x2g/qN4XV/4nb9Fp1b/WGGhurteF2ug1FqvkV/DdWHcd3jrIKka4XNuJ6J
2xsltHPL78L1N8R/jw5Otrr2lyaC5h8irxtbUX9YVXyeyv2MmDwwyVHGzy+5
n4vPLio/dtPQ8zb9+qGvR/Xazhp6PkT8wJ7QK2q74fw8g/igFTdfShKmaai+
jda77KvUkH1WPLpO9Vi8nyxoyeuglX9y/RDxXyGL9n4eIdP4i9d7rjMS6/pS
xeeUxL+WjE38NKOTRiY+V+P2x9d0+26i0ASLz4GIqy2cvg53c+bnLsTHXVqj
W+A5SUP1Yby/LcukRUzjrlzPxPVNdZd4ZD5ur6Hnu8Tvi/Vv9DyS+O+5wkdo
4qSh52fEX264tvTwzt78vIf44VNhmjin4Rqql6L1lvMje6U8KGmooeeavD9J
rPui53DEdyYtG5+ZZc7PjYgnPOn32Gq9nYaez9E6w6aPFfVL9DyJ+NX3Dcsa
/yHjOmO6j4sfWbHOEFFpfSBxR8X6QItK6wDVxHWAxEr3++maivv9wEr39VXE
+3rHSvfvH19V3L+7VbrvTn1Vcd99tdL99fNPFffXppXuo0uPVtxH+1e6X/6Y
W3G/nFrpvrhkaMV9sazS/e+75xX3v/S8je5/48R6pKBK97+9xPvfxWL+pPu1
Hu6P44qE/PlFzJ/EbyUlbsgU8ifVaxK/3Knv23ee1lxfSLzK/es3FEL+pHo4
4vPdAkyDhPxJ9S7EY8cO3zZayJNUn0G8tNSx9Q8hT1I9AfEsv8MvQoQ8Sc+/
iff2fO1XpbqLhp7XEr8XOWHIACFP0vNFvj+12flp5ITZmjgxT9L91JqT1s9L
hTxJdah8n5V7cPEbIU9S3STxqupn5sFCnqQ6P+LJYfuVVYQ8SfUlxEvrnu3y
U8iHVA9BPP2Vv7unkA/p+T3xkiSThDZCPqTnzcTX1TQxihLy4WIxHxJ/9CT7
64870zSrxXzI90f7+qRP6PXoulzMh8SranM9EoR8SPWIxO879bkTKeRDqs8g
fvSIySm1kPeonoB4rxnfl/0U8h49/ya+qsNhm/5C3qPntVyf3nnSdm8h71mK
eY/m/9V6b1+cJeS9HDHvEQ+0HDhcKeQ9qlcg/nPryNQMIb/R83XiiwrPZe8V
8hs9DyZuOOrEjvtCfksU8xvNhz+cs5s3Rchv9DyeeH+b9Ud/CXmMnh8TH2W6
1dFDyGP0/Jjme/ecXs1+UVPGz4/putw+4vfNNcJ1mZ4HE48SnxfTPIfrUx7f
jkgUfqf0vJnmP5E9L94NEPqh+Tnx6d0zh5XPi+j5MXGPWtmjVwrtP4h1kzx/
CP9HabN3uHycuB+DrqfrF1u9uSPET/WgfL3efuJKy9YDuX6R5w9TAm+eDrHQ
7Bf3b9B1zXz9kJeegh/aR0HcakObXm8Fn1RXSnzJRp+1fsaO8qtiHSFfx7e3
Kwmf2VhuKta9EW9i3mTYCeH7Shf3h9D169DqPbo7wvebKe5z4PM8Fj/1DxHG
A+0rIC4dO7tmvjB+qJ6V+Nucegb9S7tx/SXx5leHzZ0gcKoX5Oc+SbsH3hXG
J9W3ES/rfGVOlDCee4j7Veg66HvtofcMYfzTvhHiGb65nwYJvxfa50DcMXj+
u9/C74vq8olbTR+1rfrMThqquyU+6eIhlyMzGnOdKPEd2/tPdhM8U10j16HP
+v6kSPi9Ux0e8d9Z0nsbhfxAdWP8HMq3Y7/1Ix9dV4v7beh6nfazasPPQv4x
E/eNEDeRnB1fPn+jfRrEq5ZtvyUMWQ3tKyBuej/23GQhH1IdPHFp/+2LdEL+
pHpi4t5Kl+f5wjik+lfizU/n5Za2Gsj1mtz/OLm0jpCfqb6Q+O+WuwI3C/mc
6uGIzxy27dsXIf9T/Rbxpd+b9PspXC98xN8pXX9nvLq3YIRwfaF9PsRnlry/
7yJcj2hfCtd/5X1tUyTM82kfBXHzv1J0XsL1jur+iVep2fZG+3QZ16kTdzjW
vfl54XpK9b7Eg3+bGv4h/N6pPpV40IlO7r7CdZnqKYmX+s2O9Beu41T/x+v2
QYm9xwr3TVSvRlyXPebDHWGeQPVVxNP+Kg1PF+YVVcW8Q9ff62JddK6Yl7i+
O3zVPu2e4XJnMS/xfoXpdpdKhbzkKuYd4h5ife8jMV8RT3DdtVknfO9Ur8z9
WG4y+CCMk0AxX/E6Yc3WJ5yEfCUT8xWvE7Zatey5kK+CxbxDvL9Y13pRzGPE
b6Q16LBW+H1RPTSvK77ve+ymkMeofpfr0/t/O3flV0PNHTGP0XUq893GYQlC
Hnsq5jHi/j2KW4eVz9vFPMbXNXV329dCHvMU8w6vvy2oqP8ME/MbcR9H7bFg
IY9RfTZxb7tO61YJnOqJic9M6H94qpDfqP6VuO7K3IT3Qn6rI+Y3uj6ust4W
4CPkNx8xvxHPKxv872ghv3UR8xvx6pHfj34U8luEmN+Ir7uevSNVmG/UFfMO
cUOxrjJQzHvEt1/z+7tY8Ez15cTlbSc6rhC+F6qHJt5r7MrRL4S8R/W7xEsW
nysNF/Ie1Zvyetq0v9bNt390fbOY9+i6P1dhM75MyHu0X473Iz6v3+6qkPcM
xLxHfP276p0lQt7zE/Men6fSKLTGSCHvFYt5j7ih9MeiF0LeOy/mHeJZ0yvq
G+eL+ZD4iG2zJgcJ45zq6YkrzLc3sRKu41T/Tdx+uvUtcyEfUr0y8ZJZ6lmz
hHxI9bXEf9vva1sq5EOqByVeLDn37LWQD2l/IM1DMl2PjB0s5D3az0bceUin
bklC3nMV8x7x3i0ufp8q5D3aL0S8Wi33pBzhvoD2txBftch408vjreXjaX+l
yFeI9Ye0f4D4tJBjv9sJ+ZDq3YmHbe9usFPIh1SfTbxkSv8p1YV8SPXExJfL
Fpu9F+6DqP6VuH9xn+jLQj6kek3iNxouXVC+TtVczId8/pNYH0jzKpqnaU8P
nvcT9uMQd2iWXeMy1G0Slw2y3jIR6pCJS/stt7wGdZvEVQYJki1Qt0lcMTI2
Z4CX/tw/4pX383I/tfu/+wLnvxHX/fnW/yzUZ3KcnhNNr0IdLH/eVV1PxkF9
JnHlmnsp0eCBPMWtnj7uC3ggLjP26tUH6leJS4+bm6MH4qpWXf8uAQ+8X6er
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13ncjWUaAODvO+dIliRLRpFBGEKTtawjW9nK3tgauylLZclkKWPf96US
GWtTqpnQrpCtLJUlJcy0aFcRJaHr/r3+uH/Pc1/P/Z7zvd/7Pssp2WNQm4Gp
rKysPSKHeDOdlVULfJvJyrpG/1pRWBSKPqtpbLr2sLyb/sPZWVkTXddYfoXI
K642XsXYJO1Z+QU1lUV1dQf4y+wmbRvWieWS/yLOyyuJimKwazewkupulTdT
d1b/RVZK25A1Z7/qF1Z7o/Zu1oddpuYl8WfWmv2VXS6/SuQXRdVXNzZVW1T+
B1Esk9z3TO2v8ouuu1HUcO1BXprfph3OHhSL5XnU5RZF9Ksam6w9Kf+f8ctF
TtGNrWd/NN5AfrvP+0X/SpYvvtt4NfkU7Tl5Dv3q6uqqO6r/Fqun/cF4Kf3S
l55JPJvirLaxWdqj8l764107w7Ut5B+KLmwUG88ayt8TrdiguA9WXf6+uIPd
x4azGvJKPrMfW8SWslbsXdGSDWTDWDV5GXWt2Rg2mdVke0ULNoANZVXl1dUN
Z2vYc6wb2yfasMFsJKsl3y/asiFsFKst3yOas/5sCKsi3yb+wrqzv7Oy8t2i
Gbs33h92Uzxv31uBdYr3IP4P8h38VtZT3l9dBXlZ3pFNZBPEanlF0ZctlC9R
11Ld5aw4a8nasZ/0c7HrtK1Ye3ZavwLrrp3NHmW3ufZP7O54x9hC1pSVZ3+L
Z8gWsSasHLsr5g+byeqxy9i1rHnMBTFGfoPowxbI54vn5blFCXaHvINrz+jn
ZMW0LVhbdko/ByuibcruYN/rp1ghbSPWgn2nn2FXa5uwVuyE/tv+nkba3mwg
qyjfKRqyXmwAu0FezbUPstXsWdY11gd2PWvHurBz+nlYaW1b1pn9pv+B2k7a
EWwsaxDzWd197Em2hnVkN7JBbGk8M9aefSx6sLFsGmsmPyjas2HsYVZXfrNr
H2bPsRdZH/aR6MpGx3vAGsVape5+tow9xe5iBUWBmIfGahibFvcl7tR/RN0k
dTcbPyQ6s5FsHLtVXlldLLpL2CrWgR0T98SaxOay1rGOiHvjs9k81ka+SzRh
fdl9rLL8HdGY9WGDWCV5Vd8xjK1ia1kXVpONZs+yDawXq8FGsbVsPevNtor6
7Me4p5jj4oBox4aqG62ujvy3eC9ZDVaPHdE/wnpqx7HprHnsCz6nDGvPurLz
+vlYWW2HWCPZhVgTWTltR3Y3u6hfhQ3VrmQr4jnJ06Iwayxvqe5b/ZKxxkZk
kvVyrvbf8mz9UuoqqPtQvwS7TpQwXlc+R9tCLNbfpW6/un8a/0pMYU+zF9j9
8q/FVPYMW8cekM8TR+XpWO/Zi8br+7xJ2pfYG2ygmjnxXsovXtpn1xv/mf3M
ysVeE3twKpnn12hrszrigLxArEWsi7ynurTrFohP5HlEbvZKrDXssPy83CVZ
61g9nYmxb/KNbECspWwR28H2stGsNhvH1sX9itfkDcVM9oZ8u7ph6s5EyMvG
ns72Gr9N3XztVraLjYh1mC1k27OTs8UodjtbwLax3WxkrMNsBtvItrGh7Bvx
GHuVbWFj5HXUjWfr429j97L54v/yXBHsZeN11U3QbmCvs/5qGrDp7HW2lQ2O
vYNNY6+xt9gQtkh8Jr9S5GWvGT/NvpeXiHtm21LJnlI+lazDsR4fkxcUlVhX
ea/4/7vulPhCXiSuj7NVrHvqVmoPsI/ZFDVXxVrOOrMeLJVO3sF4Fx+P903c
lUme0dhUMg9iPuTJkexbHVLJmSTOJmcunUGO6ecQl4lNrL1Ype6g/IjPnZpO
5taQVLJ3xB6S8nnreFFWS95Q3clY+9XNSSXvRbwfV6tryubF+UT+jrqHYi9n
y9k+9hGbxO5kT7J32SE2gc2KdVZ+Lt5l8YLxQuoqa7vx3jFHDCwUn8qviHtl
r6aSc1hTbb/Y98WpuH+xOvYM+VF101zXmi1j77EP2cQ447ClbC/7gI1nHdka
diieI5se5w+2gu1nh9nkOPewJ9jumJNsLPtJnJBfJ4rH36OmlViibo/8oLpx
6eT/N5dtYZtjTZA3FrPZJvlOdcNjT2Wz2JtsB3uQLY/3SF5AFGPvxPOP75YX
iu9lu9gadi5qRBm2n/2LnZTnF9eyt9kr6eRs/nkmObvGGXZJzLl4/qKwureM
PxHrnTwrvkezhX3CBmhnxPvC2slXitPxTsT/ge2OeZZOztdfZpI9MvbKxbGm
qrmgpqDYHHMvnZx9v8gk5/I4ny8V36rLxGeq2xrnB/Zr3IO4nu2LtSGdnLmP
Z5JzdJynz4ucrKa6+uqO6W+OtUN7InNp3RfFRbHYBzLJ2GztlnSyH3yfSfaR
2E/irB1n7pKZZD+cF2dw0UD/ft/xD99R3vgt7BH2PHuJ9WUb08m54KtM8tsp
fkOtEmfVXCNKq3s/1tZ08pvq6zhn6RcRtfTHsP+oe1ldv1jnRH82nc1nbeWb
0sn5/7tMcj9xX8vEj2ryxfeo22k82/iVsS+xJuy4/qfqHoh9ki1mneRPxWSM
vZSV1z0U7wl7SPs4W866yy/Ee5NKfqfF77XdPv8zNjj+R/In1HWWPytysQqs
KvsklZxZe6eSM3actc/JH1X3uf5VMdfVvR77LkvFfGc3sI/0H2PH5QXj/tjG
VDIHv8tOfmvFb64tmeS35G+X5mTMze2xBrEfYl0XRV27I9ZVltZezyqyw/rP
sdzxd7Jq7FP9/7IC2qqsNvs6nk28r3E+YbXYV/H8WX7tTewW9mWsmfH+a6vF
fs6+SSWbc77Ym1lj6ef6F9VdEfsXa8Q+SyX/57yp5BwQ54ERrjvORrDF8hXq
esjXigwrE8+DfRxzL/YQ7XL2DLtH/ng6maMxV5+O9yb2JzEy5nvsKcZ6yueK
I/Ls2D/YBuO/Ay3T4QI=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1004, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
       914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 1010, 1217, 696, 1119, 
       917, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
       701, 1124, 922, 702, 1322, 1005, 923, 1006}], 
      Line3DBox[{704, 1011, 1218, 703, 488, 705, 1125, 924, 706, 1126, 925, 
       707, 1127, 926, 708, 1128, 927, 709, 1129, 1012, 1219, 710, 1013, 1220,
        711, 1130, 928, 712, 1131, 929, 713, 1132, 930, 714, 1133, 931, 715, 
       1134, 932, 716, 1135, 933, 717}], 
      Line3DBox[{719, 1014, 1221, 718, 1015, 1222, 720, 504, 721, 1136, 934, 
       722, 1137, 935, 723, 1138, 936, 724, 1139, 1016, 1223, 725, 1017, 1224,
        726, 1018, 1225, 727, 1140, 937, 728, 1141, 938, 729, 1142, 939, 730, 
       1143, 940, 731, 1144, 941, 732}], 
      Line3DBox[{734, 1019, 1226, 733, 1020, 1227, 735, 1021, 1228, 736, 520, 
       737, 1145, 942, 738, 1146, 943, 739, 1147, 1022, 1229, 740, 1023, 1230,
        741, 1024, 1231, 742, 1025, 1232, 743, 1148, 944, 744, 1149, 945, 745,
        1150, 946, 746, 1151, 947, 747}], 
      Line3DBox[{749, 1026, 1233, 748, 1027, 1234, 750, 1028, 1235, 751, 1029,
        1236, 752, 536, 753, 1152, 948, 754, 1153, 1030, 1237, 755, 1031, 
       1238, 756, 1032, 1239, 757, 1033, 1240, 758, 1034, 1241, 759, 1154, 
       949, 760, 1155, 950, 761, 1156, 951, 762}], 
      Line3DBox[{764, 1035, 1242, 763, 1036, 1243, 765, 1037, 1244, 766, 1038,
        1245, 767, 1039, 1246, 768, 552, 769, 1157, 1040, 1247, 770, 1041, 
       1248, 771, 1042, 1249, 772, 1043, 1250, 773, 1044, 1251, 774, 1045, 
       1252, 775, 1158, 952, 776, 1159, 953, 777}], 
      Line3DBox[{781, 1160, 954, 779, 1161, 955, 783, 1162, 956, 785, 1163, 
       957, 787, 1164, 958, 789, 1165, 959, 791, 1166, 569, 793, 1167, 960, 
       795, 1168, 961, 797, 1169, 962, 799, 1170, 963, 801, 1171, 964, 803, 
       1172, 965, 805, 1174, 967, 807}], 
      Line3DBox[{806, 966, 1173, 804, 1265, 1057, 802, 1264, 1056, 800, 1263, 
       1055, 798, 1262, 1054, 796, 1261, 1053, 794, 1260, 1052, 792, 1259, 
       568, 790, 1258, 1051, 788, 1257, 1050, 786, 1256, 1049, 784, 1255, 
       1048, 782, 1254, 1047, 778, 1253, 1046, 780}], 
      Line3DBox[{809, 1058, 1266, 808, 1175, 968, 810, 1176, 969, 811, 1177, 
       970, 812, 1178, 971, 813, 1179, 972, 814, 1180, 1059, 1267, 815, 585, 
       816, 1181, 973, 817, 1182, 974, 818, 1183, 975, 819, 1184, 976, 820, 
       1185, 977, 821, 1186, 978, 822}], 
      Line3DBox[{824, 1060, 1268, 823, 1061, 1269, 825, 1187, 979, 826, 1188, 
       980, 827, 1189, 981, 828, 1190, 982, 829, 1191, 1062, 1270, 830, 1063, 
       1271, 831, 601, 832, 1192, 983, 833, 1193, 984, 834, 1194, 985, 835, 
       1195, 986, 836, 1196, 987, 837}], 
      Line3DBox[{839, 1064, 1272, 838, 1065, 1273, 840, 1066, 1274, 841, 1197,
        988, 842, 1198, 989, 843, 1199, 990, 844, 1200, 1067, 1275, 845, 1068,
        1276, 846, 1069, 1277, 847, 617, 848, 1201, 991, 849, 1202, 992, 850, 
       1203, 993, 851, 1204, 994, 852}], 
      Line3DBox[{854, 1070, 1278, 853, 1071, 1279, 855, 1072, 1280, 856, 1073,
        1281, 857, 1205, 995, 858, 1206, 996, 859, 1207, 1074, 1282, 860, 
       1075, 1283, 861, 1076, 1284, 862, 1077, 1285, 863, 633, 864, 1208, 997,
        865, 1209, 998, 866, 1210, 999, 867}], 
      Line3DBox[{869, 1078, 1286, 868, 1079, 1287, 870, 1080, 1288, 871, 1081,
        1289, 872, 1082, 1290, 873, 1211, 1000, 874, 1212, 1083, 1291, 875, 
       1084, 1292, 876, 1085, 1293, 877, 1086, 1294, 878, 1087, 1295, 879, 
       649, 880, 1213, 1001, 881, 1214, 1002, 882}], 
      Line3DBox[{884, 1088, 1296, 883, 1089, 1297, 885, 1090, 1298, 886, 1091,
        1299, 887, 1092, 1300, 888, 1093, 1301, 889, 1215, 1094, 1302, 890, 
       1095, 1303, 891, 1096, 1304, 892, 1097, 1305, 893, 1098, 1306, 894, 
       1099, 1307, 895, 665, 896, 1216, 1003, 897}], 
      Line3DBox[{911, 1009, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319, 
       1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 904, 1315, 
       1314, 1105, 903, 1313, 1104, 902, 1312, 1103, 901, 1311, 1102, 900, 
       1310, 1101, 899, 1309, 1100, 898, 1112, 1308, 1007, 1008}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1113, 252, 488, 280, 1222, 503, 295, 1227, 518, 
       310, 1234, 533, 325, 1243, 548, 340, 1254, 563, 1161, 355, 578, 1175, 
       370, 1269, 593, 385, 1273, 608, 400, 1279, 623, 415, 1287, 638, 430, 
       1297, 653, 445, 1309, 668, 460}], 
      Line3DBox[{253, 475, 1114, 254, 489, 1125, 281, 504, 296, 1228, 519, 
       311, 1235, 534, 326, 1244, 549, 341, 1255, 564, 1162, 356, 579, 1176, 
       371, 594, 1187, 386, 1274, 609, 401, 1280, 624, 416, 1288, 639, 431, 
       1298, 654, 446, 1310, 669, 461}], 
      Line3DBox[{255, 476, 1115, 256, 490, 1126, 282, 505, 1136, 297, 520, 
       312, 1236, 535, 327, 1245, 550, 342, 1256, 565, 1163, 357, 580, 1177, 
       372, 595, 1188, 387, 610, 1197, 402, 1281, 625, 417, 1289, 640, 432, 
       1299, 655, 447, 1311, 670, 462}], 
      Line3DBox[{257, 477, 1116, 258, 491, 1127, 283, 506, 1137, 298, 521, 
       1145, 313, 536, 328, 1246, 551, 343, 1257, 566, 1164, 358, 581, 1178, 
       373, 596, 1189, 388, 611, 1198, 403, 626, 1205, 418, 1290, 641, 433, 
       1300, 656, 448, 1312, 671, 463}], 
      Line3DBox[{259, 478, 1117, 260, 492, 1128, 284, 507, 1138, 299, 522, 
       1146, 314, 537, 1152, 329, 552, 344, 1258, 567, 1165, 359, 582, 1179, 
       374, 597, 1190, 389, 612, 1199, 404, 627, 1206, 419, 642, 1211, 434, 
       1301, 657, 449, 1313, 672, 464}], 
      Line3DBox[{261, 479, 1118, 263, 493, 1129, 285, 508, 1139, 300, 523, 
       1147, 315, 538, 1153, 330, 553, 1157, 345, 568, 1166, 360, 583, 1180, 
       375, 598, 1191, 390, 613, 1200, 405, 628, 1207, 420, 643, 1212, 435, 
       658, 1215, 450, 1314, 673, 465}], 
      Line3DBox[{265, 481, 1119, 266, 1220, 495, 287, 1224, 510, 302, 1230, 
       525, 317, 1238, 540, 332, 1248, 555, 347, 1260, 570, 1167, 362, 585, 
       377, 1271, 600, 392, 1276, 615, 407, 1283, 630, 422, 1292, 645, 437, 
       1303, 660, 452, 1316, 675, 467}], 
      Line3DBox[{267, 482, 1120, 268, 496, 1130, 288, 1225, 511, 303, 1231, 
       526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 1168, 363, 586, 
       1181, 378, 601, 393, 1277, 616, 408, 1284, 631, 423, 1293, 646, 438, 
       1304, 661, 453, 1317, 676, 468}], 
      Line3DBox[{269, 483, 1121, 270, 497, 1131, 289, 512, 1140, 304, 1232, 
       527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 1169, 364, 587, 
       1182, 379, 602, 1192, 394, 617, 409, 1285, 632, 424, 1294, 647, 439, 
       1305, 662, 454, 1318, 677, 469}], 
      Line3DBox[{271, 484, 1122, 272, 498, 1132, 290, 513, 1141, 305, 528, 
       1148, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 1170, 365, 588, 
       1183, 380, 603, 1193, 395, 618, 1201, 410, 633, 425, 1295, 648, 440, 
       1306, 663, 455, 1319, 678, 470}], 
      Line3DBox[{273, 485, 1123, 274, 499, 1133, 291, 514, 1142, 306, 529, 
       1149, 321, 544, 1154, 336, 1252, 559, 351, 1264, 574, 1171, 366, 589, 
       1184, 381, 604, 1194, 396, 619, 1202, 411, 634, 1208, 426, 649, 441, 
       1307, 664, 456, 1320, 679, 471}], 
      Line3DBox[{275, 486, 1124, 276, 500, 1134, 292, 515, 1143, 307, 530, 
       1150, 322, 545, 1155, 337, 560, 1158, 352, 1265, 575, 1172, 367, 590, 
       1185, 382, 605, 1195, 397, 620, 1203, 412, 635, 1209, 427, 650, 1213, 
       442, 665, 457, 1321, 680, 472}], 
      Line3DBox[{277, 682, 1322, 683, 278, 501, 1135, 293, 516, 1144, 308, 
       531, 1151, 323, 546, 1156, 338, 561, 1159, 353, 576, 1173, 1174, 368, 
       591, 1186, 383, 606, 1196, 398, 621, 1204, 413, 636, 1210, 428, 651, 
       1214, 443, 666, 1216, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1308, 444, 652, 1296, 429, 637, 1286, 414, 
       622, 1278, 399, 607, 1272, 384, 592, 1268, 369, 577, 1266, 354, 1160, 
       562, 1253, 339, 547, 1242, 324, 532, 1233, 309, 517, 1226, 294, 502, 
       1221, 279, 487, 1218, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1315, 451, 659, 1302, 436, 644, 1291, 421, 629, 
       1282, 406, 614, 1275, 391, 599, 1270, 376, 584, 1267, 361, 569, 1259, 
       346, 554, 1247, 331, 539, 1237, 316, 524, 1229, 301, 509, 1223, 286, 
       494, 1219, 264, 480, 1217, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
k1xXuqczC3NmGbb7je3ZsaaZcOZ95dz6C3G+wrUq8hF6LuK0WX/jdSnOnQPD
I5J2+cusPyieOwdmd3J94y9c3zjbITXLsAHq/cx90Hd+WmUL4vzY/dGNRusE
+MUhswZzLr/zsLELca62bmyeYVwDk+zMfFCD2sCDz4FRkD34s9M1ANAvPSTy
8zQiI5A+1HS5dgzal4FV6xKiz2q3lysx58sRF87pDTtB+aAJwvmzxign9s8s
g4LZzn8D4R8ZRbLe5IsPgmUR5ypyzsBBOC0lTrj98ACRmDPriPWr0A1pwODQ
gCjm1porJncTxcm74iQYP8UvQxOZWFJfsp5+34z9w/RxH7ELvrfg5BuK+Icb
uurluP7WJcraXq6bAA/fGQvB+qT7ev3tRDy38HZ5LHE1B0aF/qT+ZrCtaAjH
FYE7I7au+xQJEqx0iV1l7KQaf6lp01ulYqNn6W5Q+y2z/nY0tX58CPF8zXJ4
V3BhKSyu2pZG/PDuvY0jatoUJ78TPr8I3sipIPNrvUncQuf7krhXhDcKvH7K
jFvWWRppfEI8pUa33ZdwsQeh52yJPguTis9vRTyFX4c9s14VD/u4voWT+kCa
pwH2D76GL85rvr0FBVf1kOf0l+JOLT9/K7qZWWBMv+4NaCxTRvgU/A209kQ8
Z9VyHj2YrQJjufdKcfwmNT+qLPNTGqX9VC9mYWY2GOpQpbNMoXy5/pvn+5k7
9BNXFrGvHMoEnzQP+9HHhqkRmyfabt/T6GFSz0++tgkGm9azas/8RfNZdgPu
cT9qPKaspYphBNeK1Z64jK6rG3pyR/69w5T0222BIp8jwLEu1c0MNL5h7vtG
pbnvG9vmvm90srD11loTRvdKN3YqdNcHpwYbjKcQH94DxqZ192MpR/N3X/Q7
3cDY/cst8TP4voT4F2wvoigTgQvfQlIA31rBguDhYcp7NX/8V+N4Omjq3V7b
mAMY9vui1PB8qQ3TsdEe9NceWlm774eBl6nzk3PQdaP26jh7BjdQymKBx/1P
l8HmJ/IZH1JQfHI47spdiSx6xrLIN/4NQYD9Zyo3O+Ksop0zE3Aik74ld9fe
iiFrcOk5KAvA/CNPal1Y5kClK+rNqs7Th9OnpYveIflcmw9fpnndoMLaWpqu
MC7An/NXbRxH45Jz3x9Wef3v94ff3t2aOB0SQc2u0Gj6OmsCE38YZN1CHLz3
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
pbP4fP8P2acH8A==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{306.48760277772885`, 241.9864192769012},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {-0.003775155978605047, 0.001666027533567982}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.3787799108733458, -3.2499685271241625`, 0.8626878646539463},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.675699519375147*^9, 3.675700009781282*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"I", " ", "think", " ", "its", " ", "working", " ", "now"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.675605163835569*^9, 3.6756051691615057`*^9}, {
  3.675700019408016*^9, 3.67570002476779*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coeffs", "=", 
  RowBox[{"fullCoefficientsk", "[", 
   RowBox[{"3", ",", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6756892896631527`*^9, 3.67568928969866*^9}, {
  3.675690136854253*^9, 3.675690138341751*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["70", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "3", ",", "3", ",", "2", ",", "3", ",", "3", ",", "2"}], 
                    "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["70", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "3", ",", "3", ",", "2", ",", "3", ",", "3", ",", "2"}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.21604938271604937`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.6366197753212547`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "3", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "5.823903902538174`*^-10", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "2", ",", 
                    "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2.035643020467659`*^-9"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "3.2086154531929534`*^-9", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<70>, {3, 3, 2, 3, 3, 2}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.675689301716309*^9, 3.675690150133176*^9, 
  3.675699421595903*^9, 3.675699482890127*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"coeffs", "\[LeftDoubleBracket]", 
    RowBox[{"3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
    "\[RightDoubleBracket]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.675689849863028*^9, 3.675689861902364*^9}, {
  3.675689962629819*^9, 3.675689987516062*^9}, {3.675690135624954*^9, 
  3.6756902178748903`*^9}, {3.675690252979836*^9, 3.6756903279923773`*^9}, {
  3.675696011180057*^9, 3.675696015517054*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6366197753212547`", ",", "0", ",", 
   RowBox[{"-", "0.005856092181884723`"}], ",", "0.0058560921818847644`", ",",
    "0", ",", "0.015092252152855534`", ",", "0.0005097637841936578`", ",", 
   "0.0005097637841936439`", ",", 
   RowBox[{"-", "0.30727387467830936`"}], ",", "0", ",", 
   "0.00002164974957968857`", ",", 
   RowBox[{"-", "0.000021649749579605304`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.67568985819307*^9, 3.675689862348205*^9}, {
   3.6756899682679157`*^9, 3.675689987773259*^9}, 3.6756901533757057`*^9, 
   3.675690218487548*^9, {3.675690272442696*^9, 3.675690337504404*^9}, 
   3.675696016989983*^9, 3.6756994238005247`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.6366197753212547`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "-", 
     RowBox[{"0.3072738740770674`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "+", 
     RowBox[{"0.01509225405001055`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "-", 
     RowBox[{"0.005856092181884723`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "+", 
     RowBox[{"0.005856092181884723`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "+", 
     RowBox[{"0.0005097638184467165`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "+", 
     RowBox[{"0.0005097638184467165`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "-", 
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675690340453648*^9, 3.67569054095509*^9}, {
   3.675690609974015*^9, 3.675690621382051*^9}, {3.675690704930112*^9, 
   3.6756907195087233`*^9}, {3.6756939493073597`*^9, 3.675694043375433*^9}, 
   3.67569409031047*^9, {3.675694131489985*^9, 3.67569434608237*^9}, {
   3.675694390677947*^9, 3.67569445634578*^9}, {3.675694492513171*^9, 
   3.675694518029294*^9}, {3.675695402286912*^9, 3.675695405137206*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
szdOv8/k4jO5+Oydx+8zufjszcvvM7n4rBw+k4vPel34rOOEzzov+EwuPnv5
+H0mF5/JxWdy8ZlcfCYXn8nFZ/omPoOrz8hbfWYdjfgMrj7zePGZXHwmF5/J
xWdy8dkbp99ncvGZXHz2zuP3mVx89ubl95lcfFYOn8nFZ70ufNZxwmedF3wm
F5+9fPw+k4vP5OIzufhMLj6Ti8/k4jN9E5/B1Wfkqj6z/kt8Blefebz4TC4+
k4vP5OIzufjsjdPvM7n4TC4+e+fx+0wuPnvz8vtMLj4rx7/JxWe9LnzWccJn
nRd8JhefvXz8PpOLz+TiM7n4TC4+k4vP5OIzfROfwdVn5Kc+s25RfAZXn3m8
+EwuPpOLz+TiM7n47I3T7zO5+EwuPnvn8ftMLj578/L7TC4+K8frQS4+63Xh
s44TPuu84DO5+Ozl4/eZXHwmF5/JxWdy8ZlcfCYXn+mb+AyuPiMn9Zn1tuIz
uPrM48VncvGZXHwmF5/JxWdvnH6fycVncvHZO4/fZ3Lx2ZuX32dy8Vk5fCYX
n/W6+LeOEz7rvOAzufjs5eP3mVx8JhefycVncvGZXHwmF5/pm/gMrj4jD/WZ
deLiM7j6zOPFZ3LxmVx8JhefycVnb5x+n8nFZ3Lx2TuP32dy8dmbl99ncvFZ
OXwmF5/1unj9dJz4t84LPpOLz14+fp/JxWdy8ZlcfCYXn8nFZ3Lxmb6Jz+Dq
M+atPnN9g/gMrj7zePGZXHwmF5/JxWdy8dkbp99ncvGZXHz2zuP3mVx89ubl
95lcfFYOn8nFZ70ufNZx4nXVeeHf5OKzl4/fZ3LxmVx8JhefycVncvGZXHym
b+IzuPqM+anPXJcjPoOrzzxefCYXn8nFZ3LxmVx89sbp95lcfCYXn73z+H0m
F5+9efl9JheflcNncvFZrwufdZzwWeeF15tcfPby8ftMLj6Ti8/k4jO5+Ewu
PpOLz/RNfAZXnzEP9ZnrycRncPWZx4vP5OIzufhMLj6Ti8/eOP0+k4vP5OKz
dx6/z+Tiszcvv8/k4rNy+EwuPut14bOOEz7rvOAzufjs5eP3mVx8JhefycVn
cvGZXHwmF5/pm/gMrj5jvOoz10GKz+DqM48Xn8nFZ3LxmVx8JhefvXH6fSYX
n8nFZ+88fp/JxWdvXn6fycVn5fCZXHzW68JnHSd81nnBZ3Lx2cvH7zO5+Ewu
PpOLz+TiM7n4TC4+0zfxGVx9xrjUZ67fFZ/B1WceLz6Ti8/k4jO5+EwuPnvj
9PtMLj6Ti8/eefw+k4vP3rz8PpOLz8rhM7n4rNeFzzpO+Kzzgs/k4rOXj99n
cvGZXHwmF5/JxWdy8ZlcfKZv4jO4+ozrq89cdy4+g6vPPF58JhefycVncvGZ
XHz2xun3mVx8JhefvfP4fSYXn715+X0mF5+Vw2dy8VmvC591nPBZ5wWfycVn
Lx+/z+TiM7n4TC4+k4vP5OIzufhM38RncPUZ11Gf2S9BfAZXn3m8+EwuPpOL
z+TiM7n47I3T7zO5+EwuPnvn8ftMLj578/L7TC4+K4fP5OKzXhc+6zjhs84L
PpOLz14+fp/JxWdy8ZlcfCYXn8nFZ3Lxmb6Jz+DqM86nPrPPh/gMrj7zePGZ
XHwmF5/JxWdy8dkbp99ncvGZXHz2zuP3mVx89ubl95lcfFYOn8nFZ70ufNZx
wmedF3wmF5+9fPw+k4vP5OIzufhMLj6Ti8/k4jN9E5/B1Wf8d+oz+9OIz+Dq
M48Xn8nFZ3LxmVx8JhefvXH6fSYXn8nFZ+88fp/JxWdvXn6fycVn5fCZXHzW
68JnHSd81nnBZ3Lx2cvH7zO5+EwuPpOLz+TiM7n4TC4+0zfxGVx9xv+vPrOv
kvgMrj7zePGZXHwmF5/JxWdy8dkbp99ncvGZXHz2zuP3mVx89ubl95lcfFYO
n8nFZ70ufNZxwmedF3wmF5+9fPw+k4vP5OIzufhMLj6Ti8/k4jN9E5/xEz5f
/93Nn63KmhGDn7FNyvY48253eg4Oz+O73xKRm3KWx4c0d4/HecH1/Pjv9Pzg
en78xPnxb843yHF+nA/nx/HszyfH4zw4Hv/Gf4fx544ec+aHrHEx+Bk6tOnc
GReedkLLdQxNyjlLXnmYy3lc8P/X4/ETx2N8+O+QA47D/6/nx3hxfv47+N/p
+HEePR7/v/5+w3l0PPjvMJ6Rf2SMCwnJ5vnbN/u44uQ1fWLA8XsRfPbOKS1C
Qtby+B1vz9x3f98KDjiOB5/YsP39ISGbePz4yk/OfmloL3LWNQd58/gJVUJC
dvD4f4bO+ufhfv1jwHE8+LxXjt4YErKLx4+NmtVtRUo8OY4HD58TVyEkxOtD
WznxjbzktWEOOI4Hn/rLrLIhIV4f2thJYyrfWjaOHMeDXyv5z/8Omz604NrP
s+WHi66WlHj9aa9Ncc8DjuPBh97/5L8lJV5/2n7BcYLjePBvNla6VFIS4PH/
Rro5gON48GP91/xTUuL1rQ0McXMG57q3IK/190t/l5R4fWtXVnNfR3AcD97r
7dvOlZR4fWuHjHI9Acfx4NPqbjtbUuL1rV3Q3PUQHMeDw1v83VZvwdVP1tGL
h+DqG7h6Ba7+gKsn2g8Trzu4vu7g+vqC6+vI9YjyeoHr6wKu+YNrzvgcpDmD
a85clyA5g2vO4JozuOYMrjlrn0bkDK45g2vO4Joz13dKzuCaM7jmDG5yDn6u
NDkHuckZ6zw05yA3OQe5yTnITc5BbnKW/oHMOchNzkFucg5ykzPWy2rOQW5y
DnKTc5BrzvicrjmDa85cNyM5g2vO4JozuOYMrjlrXzvkDK45g2vO4Joz1x9L
zuCaM7jmDK4543uP5gyuOXMdkuQMrjmDa87gmjO45qz91pAzuOYMrjmDa85c
zy05g2vO4JozuOaM75GaM7jmzHVdkjO45gyuOYNrzuCas/YBQ87gmjO45gyu
OXN9vOQMrjmDa87gmjO+l2vO4Joz18lJzuCaM7jmDK45g2vO2p8KOYNrzuCa
M7jmzH4DkjO45gyuOYNrzrjPoTmDa85cdyg5g2vO4JozuOYMrjlr3yTkDK45
g2vO4Joz+zdIzuCaM7jmDK45476R5gyuOXMdp+QMrjmDa87gmjO45qz9fJAz
uOYMrjmDa87shyE5g2vO4JozuOaM+3CaM7jmzHWxkjO45gyuOYNrzuCas/aZ
Qc7gmjO45gyuObO/iOQMrjmDa87gmjPua2rO4Joz1xlLzuCaM7jmDK45g2vO
2v8EOYNrzuCaM7jmzH4tkjO45gyuOYNrzrhPrDmDa85cty05g2vO4JozuOYM
rjlrXw7kDK45g2vO4Joz+99IzuCaM7jmDK4547675gyuOXMdvOQMrjmDa87g
mjO45qz9IpAzuOYMrjmDa87sJyQ5g2vO4JozuOaM5xiaM7jmzL4CkjO45gyu
OYNrzuCas/YxQM7gmjO45gyuObM/k+QMrjmDa87gmjOeC2nO4Joz+zRIzuCa
M7jmDK45g2vOur4eOYNrzuCaM7jmzH5XkjO45gyuOYNrznjOpjmDa87seyE5
g2vO4JozuOYMrjnrum/kDK45g2vO4Joz+4dJzuCaM7jmDK4547ml5gyuObOP
iOQMrjmDa87gmjO45qzrkZEzuOYMrjmDa87sxyY5g2vO4JozuOaM58CaM7jm
zL4skjO45gyuOYNrzuCas66TRc7gmjO45gyuObO/neQMrjmDa87gmjOeq2vO
4Joz+9xIzuCaM7jmDK45g2vOun4TOYNrzuCaM7jmzH6BkjO45gyuOYNrzqhT
0JzBNWf2DZKcwTVncM0ZXHMG15x1XSFyBtecwTVncM2Z/RclZ3DNGVxzBtec
UfehOYNrzuzDJDmDa87gmjO45gyuOet6N+QMrjmDa87gmjP7WUrO4JozuOYM
rjmjjkZzBtec2ddKcgbXnME1Z3DNGVxz1nVYyBlccwbXnME1Z/YHlZzBNWdw
zRlcc0ZdkuYMrjmzT5jkDK45g2vO4JozuOas64OQM7jmDK45g2vO7LcqOYNr
zuCaM7jmjDovzRlcc2bfNckZXHMG15zBNWdwzVnXrSBncM0ZXHMG15zZv1Zy
BtecwTVncM0ZdXOaM7jmzD52kjO45gyuOYNrzuCas66nQM7gmjO45gyuObMf
sOQMrjmDa87gmjPqEDVncM2ZfQElZ3DNGVxzBtecwTVnrfNHzuCaM7jmDK45
s7+y5AyuOYNrzuCaM+o6NWdwzZl9FiVncM0ZXHMG15zBNWetP0fO4JozuOYM
rjmzX7XkDK45g2vO4Joz6hs1Z3DNmX0rJWdwzRlcc2ZdpeTMOlXJWeuikTO4
5gyuOYNrzuz/LTmDa87gmjO45tx6W6mX3smeaXKudT72z6/DMkzO5xuHnJwc
mGZyzg/Wr2rO7e4+vz0vK8nk3HnQhxkTA5km5/ozCm6dHf+Rybk06pwl5yU5
X8cuCJtocj56fddpuVlDTc6ZadWPtEmfZXKu2fDFdh+lfmJyvtxz/o9LCt8z
OS+9sOu9T1LfMjkfG/9V1Oepo0zO+Kk5H0ne9tC07AUm5+1XXpxYM+lr+7z7
nYqb5oV9ZXJeUXdBhea5X5icr3S/0qlNerbJ+VTLj/ZVyFtocs7Pa1Hzw9Rv
7O/nJ/b0vzMyy+T87V8jMhcXzjE5j/w+qfrr4baO8Uj5Zwa/GfjW5Lz9k9LZ
VTLmm5ydBl/89Xn8PJPzt2vjmjYonmtynv3MmXoH81eanG9t8MOmiMjvTM7T
/5maPDBtucm54tr+1y8uXGpyTpsSOb84aonJ+a687ufCk3JMzp+9X/e9pJzv
TM5VnjjXdF7YCpPz5Hq5u4qSl9l60b9mDG+Wu8TkPLvJytWJRTkm51uvTHr8
8/iVJufpG/tcC2SuMDmHvlPv88jiZSbnNxKLY4YlLLXPYc/UOVmYv9bkjJ/m
c93gYzc9krjG5Nys5dLs9OzVJueFpSZ02xW6yuScNbvn1tRwW8f4zMTVtT6P
X2tybl3Qfn9aYI3JefHnNVLzon+wdYzJp2pWyVhlcn6u16TF4Um2jrFOq7Ol
2qSvNTl/H/3t3NwUx+TcuPyYhyvk/WBy/npHlxMJEatNzpfv7dIqL3qjyXlF
peVvFSVvMDkPPV/rQFjGepNzw71p9Zvl5pqc/1h9OjWxyNaLrj449o6BaRtN
ziNzT76cnr3B5NwkK2FtduF6k/OZt7+rvCt0vcn56yF3JBVH5ZqcR81YUrZC
3kaTc/MR4b0iizeYnM/1G/9lQsQGk/PCmN8vpCSsNzkn39k9PiM11+RcacDI
9JyszfbzRscjBwvzN5mc+ZxQcn6oWvaYiMifbJ35pVu2xyfaetEdt85PSSza
bJ+nXKuyPjV8s8n5kWOjqn4ev8nkXHrT0WdyU36yn58XdFwWyLT1otO2HexT
HGXrGDsueXheeNJmk3O5DxdejE7fZHLOTb25Q1LOTybnMU+N/jgtYOtF634x
50hWmK1jPDTxhsZ50dtMzp8MGjauKHmryTmx64FfwjLyTM7VmrWr2yzX1ose
71WwMT7R1jHOatWm+sC0bSbnx+74akB69laTc/Wylb7LLswzOe88Nbz8rtA8
k/MXFSrMD2TaOsYniob8G5q3zeQcnr+3U2TxVpNzwXexMxMitpqc350573RK
Qp7JuebLJ2/Ni7Z1jK8l1cwtzN9hct7TI2FgUfIOkzN+as73DB08PCJyu/28
semNqeFJto6x36plUZHFO0zOKxeeKoxO32FyvnlWrTcTInaYnE/cObtfbsp2
W49UN7wkOc3WMT5w86NZqeG2jvHD8uMT0rN3mJwvXFpenBm/w+T81d78mKSc
7Sbnu24c3S43xdYxTijJ/iM/1NYx/vrX8fcCmTtNzrHHa7Qujtppcs4s6Hw8
NM/Wi5Z7vvqKsAxbx/hs345PRETaOsbcTmPKNcvdaXK+o82Sb+MTd5qcRzc6
0TuxyNaLBtYuuicpx9Yxtlt6bEdKgq1jnP3lLa+lBXaanEs+7FQnI3Wnyfnx
t8ZuzgrbaXJuOL/KSzlZu03O6Z/F35wXvdvk/Mc7o34ozN9lcu44/tvnipJ3
mZzxU3OufN2Cw6F5u03Og4sPTwpP2m1y3vpb1UaRxbvsuonCR/ZGp++ydQU/
p76RELHL1iM98XD3xKLdJucu3V67nJy22+Q8v93CL1LDd5ucKzT/tWN69i6T
8/P33Hw+M36XyfmBDvMysgv3mJw/fLCwTW7KHpPzhQaVT+aH7jE596z90DuB
TFsvuqTKyBbFUbZelHnr540Phi8Oy9hjci6Y9HXfiMg9Juemow6WapZr60Vn
vBj2TXyirRe9dGV/akKErWPsc7bSnUk5e0zOy39tuzUlYY/JuequEa+kBWy9
6NAfv6mVkWrrRdudjF6bFWbrGGfvG/pCTtY+k3NJ3peV86L3mZyfWLNvZWG+
rRddnX1jUlGyrRe9M25Pk+IoW8c4vukNB0Lz9pmcj9wVMyE8aZ/JObrGsPqR
xbZe9NPrs/Kj0229aJlPh3wZn2jrGJPS53ZJLNpncnbG7r2QnLbP5HxbSsXM
1PB9JufUZ2Pj07NtvWiXN/N/y4y3dYzzXy3/bnbhAZNzhYEPtspNOWByfqH/
y0fzQw+YnH98dM5bgUxbL3r/4Rf7FyXbOkb81Jx/X79rQVjGAZPzIytCe0VE
HrDPB+e1vhqVa+tFb3yg3PbodFvHOKh+q1cTImwd4+bbBt+RlHPA5Fyv8hc/
pSQcMDm/Wbrg5bSArRftE5FcNSPV1jEu/89tmzBbx1g19JdncrIOmpxTLpet
mBd90OS843TLZYX5tl605ejSEwOZto4x4+Xm9xdH2TrGv5MGFoTmHTQ5d+uZ
OSY86aB9bhW/8+7IYlsvesueTy9G5do6xuGbt8+KT7R1jPmrynRILDpovw9+
2+Kv5LSDJud3Zg36ODX8oMl58VNjM+MTbR3jkb4fpyRE2DrG2/7zMbbwsMn5
9Y8+aZabctjkvP+tnw/mhx42Oc++cWufomRbx7ij3In6xVG2jpHrYiXnx/5z
2yPjsH2ecvz5rhGRh2090vc1wjJSbR3j2qVNApnxto7x7ILOOVlhto7xwc7b
wpNyDpucP25Tan1KwmGT84qGHZvmptg6xsA9z5bPi7Z1jNXqjjmQH2rrGB+q
+dGiwnxbLzqs2pIJgUxbL/pVYcbp5DRbx1iwO3ttSoKtYyy7fcv7qeG2jrHp
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
Gu7VMaJvIPsFBvv9os8gOPpnov8duPYB5nmkDzC59AEmlz7A5NIHmFz6AHvj
9/cBJpc+wOTSB9g7j78PMLn0Afbm5e8DTC59gJVzX21w6QOs1+U+rzJO7pcp
8+K+g+DSB9jLx98HmFz6AJNLH2By6QNMLn2AyaUPMLn0AaZv0geY9aEt/P2r
2edSfAZXn8HVZ55HfCYXn8nFZ3LxmVx89sbv95lcfCYXn73z+H0mF5+9efl9
JheflcNncvFZrwufdZzwWecFn8nFZy8fv8/k4jO5+EwuPpOLz+TiM7n4TN/E
Z3D1mf1ZxWdw9RlcfeZ5xGdy8ZlcfCYXn8nFZ2/8fp/JxWdy8dk7j99ncvHZ
m5ffZ3LxWTl8Jhef9brwWccJn3Ve8JlcfPby8ftMLj6Ti8/k4jO5+EwuPpOL
z/RNfAZXn9lXWHwGV5/5eVl85nnEZ3LxmVx8JhefycVnb/x+n8nFZ3Lx2TuP
32dy8dmbl99ncvFZOXwmF5/1uvBZxwmfdV7wmVx89vLx+0wuPpOLz+TiM7n4
TC4+k4vP9E18BlefWacsPoOrz+DqM88jPpOLz+TiM7n4TC4+e+P3+0wuPpOL
z955/D6Ti8/evPw+k4vPyuEzufis14XPOk74rPOCz+Tis5eP32dy8ZlcfCYX
n8nFZ3LxmVx8pm/iM5/zi8/s4y4+g6vP4OozzyM+k4vP5OIzufhMLj574/f7
TC4+k4vP3nn8PpOLz968/D6Ti8/K4TO5+KzXhc86Tvis84LP5OKzl4/fZ3Lx
mVx8JhefycVncvGZXHymb+IzuPrM/QfEZ3D1GVx95nnEZ3LxmVx8JhefycVn
b/x+n8nFZ3Lx2TuP32dy8dmbl99ncvFZOXwmF5/1uvBZxwmfdV7wmVx89vLx
+0wuPpOLz+TiM7n4TC4+k4vP9E18Zh23+Mz6QPEZXH0GV595HvGZXHwmF5/J
xWdy8dkbv99ncvGZXHz2zuP3mVx89ubl91nrLdkvUjj7G4KLz3pd9o+TcbLf
mcyL/bnAxWcvH7/P5OIzufhMLj6Ti8/k4jO5+EzfxGdw9Zn7vYjPfC4kPoOr
zzyP+EwuPpOLz+TiM7n47I3f7zO5+EwuPnvn8ftMLj578/L7TC4+K4fP5OKz
Xhc+6zjhs84LPpOLz14+fp/JxWdy8ZlcfCYXn8nFZ3Lxmb6Jz+DqM9edi8/g
6jPrfcRnnkd8JhefycVncvGZXHz2xu/3mVx8JhefvfP4fSYXn715+X0mF5+V
w2dy8VmvC591nPBZ5wWfycVnLx+/z+TiM7n4TC4+k4vP5OIzufhM38RncPWZ
+2uJz+DqM7j6zPOIz+TiM7n4TC4+k4vP3vj9PpOLz+Tis3cev8/k4rM3L7/P
5OKzcvhMLj7rdeGzjhM+67zgM7n47OXj95lcfCYXn8nFZ3LxmVx8Jhef6Zv4
zH4q4jP3hROfwdVncPWZ5xGfycVncvGZXHwmF5+98ft9JhefycVn7zx+n8nF
Z29efp/JxWfl8JlcfNbrwmcdJ3zWecFncvHZy8fvM7n4TC4+k4vP5OIzufhM
Lj7TN/EZXH3mfobiM7j6DK4+8zziM7n4TC4+k4vP5OKzN36/z+TiM7n47J3H
7zO5+OzNy+8zufisHD6Ti896Xfis44TPOi/4TC4+e/n4fSYXn8nFZ3LxmVx8
JhefycVn+iY+g6vP3IdTfAZXn8HVZ55HfCYXn8nFZ3LxmVx89sbv95lcfCYX
n73z+H0mF5+9efl9JheflcNncvFZrwufdZzwWecFn8nFZy8fv8/k4jO5+Ewu
PpOLz+TiM7n4TN/EZ3D1mfvHis/g6jP7h4nPPI/4TC4+k4vP5OIzufjsjd/v
M7n4TC4+e+fx+0wuPnvz8vtMLj4rh8/k4rNeFz7rOOGzzgs+k4vPXj5+n8nF
Z3LxmVx8JhefycVncvGZvonP4PAZ/S5Rd3dP84EdJ77X2EHfQPAXTlS8MDyn
K/vccX/I9vG9cjs0c9CXjf3+Iw/91f3P3g76iLHeL6nLqKnvdnPQ9wo8s2z5
qnOb9WefJvCypVcs2DO7BfsKgZc8Mn3HkQpt2QeH579vxz9bF8eynwh47I0d
F8xZE+ug/wXXAQ/c3C/tnVgH/RrAr8XdOWLzgibsL6B1nlgPDz5m3o9Hrr89
ysH6bR5/ufvJQQVtHaw3Bi/92JFBDYobOFgfy+v+mbzmyHUtuM4QvPLMhNqd
D9/AdXHc17f5wuQle5/gOi7WT9Y9cqB21eYO1h1xvocHripTLtHBOhnwcRP3
1ElZ08HBug72UX7sl1kR09pxHQJ4o5ARFU7/lMi6efAOn11YdGhEe9Z5s954
8exZa+9+wUEfVdTFVfu06aiwGd0c9KPkfowvRf7b5M4e7OsHHpO16f3Gf/Rw
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtnHcAldMfxt977/u+573nRkmFCiXJlhSiMkrJzt4rmS0je2dkJkXKiKzs
mWQTskdmyMpOISsl/Z7P73n/OPc899zzvved53zH85z2hw/bfWg1SZLJIUlq
qi/UB9/bqTQRnq8vC1SW5knSU9+3zJLkA+Gf1baicHP121ils8pQfd9K9ZPq
d5zwZsKPCZ8ovL3wc8JRZV7V2xfCP6r+SWWW9vmd6mbq+67wN8JNhWcL/yW8
kvAnwouEVxZOte23VW/zfu59NFf7sSrd9F+P6vdc5Xu1/6DyXu56Bf3+jvBc
4eWFW6pvV5VNVFZS2TTx9pzHwSoHqZyvfkeqflv7O094kPBbwjuoPkbl6MTn
d1TifmerzyGqX1efkZl/f0f4XOGBwm8Kb6P60MT9zlH7YarfUPsqqjdPfO0G
q7276sfVfjHXXnhVlSGZ8RNqa6N6i8T9jsl8Hg+rvbfqwxPvdzuVIxL/91mZ
z+k19amofF31tZipazJLdabffxVeQ79tKLy16vY1f99WpYPKmiq/5a43Up++
qjuprK2yvco6KuuqLFSftVR3Vp8+qjvW/H2R2ruq3lTtvwi3E95AeEPVTVWa
qczN/Xy0V/u3wsvz38Lrq16u5u/f5H6e1lD777n/f2PhBcKrC68vPF94VeH1
OC+d37tVn+cXuc9/VbW/LvyJ2urCf6j+QOVDlVfU/r7qXO2v5m4Lwi8JvyFc
E17Is1V1v5fV/pbqVO0vCr8mXBV+S/gL4SbCy1R/qfKVytu56+XU/prwx7wT
wp/n7tc287P/UdW/vaH2T1VHtS9R/ZnKnKrfidlVn8NSlc+r/r83c//eUP9T
VQbovr+kc+6p+kCVA3h21d5F9YNqP1b9W6n/lFTPoOpVVFqrbMr7x3unsoVK
G45N5Vz176P6GfU/X7if8HPC5wlvJ/ys8HG5t7tLeHDu/d0tfLLwRsKPsq3+
e6DKESoX1TwGra5jukr1ZSpHqqwQ/PuuOt7nte1L2naZth0p3F/4eeHjed6E
HxDeiXtaSZJLhQ/RNu21v5vYt9p3Vp8Zaj9HeFvhp4X/U98vVL5U+Vdljsrn
Krszbqi+Sn12Fv5M+DLhXXL/frnwetxb7qPKYrV9WnG/fdXnd9XXqs8+wr8J
XyO8B+OV8Bjhs4W31nZPCZ8l3Ev4SeEzhXsIPyHcVXXLqu/NMWpvofpOtV8g
vKPwC8JHCzcXvkO4C2Nz1f2a6bodrvPeRdegqfChwjsLn6n6IJWDGZPVvg/v
rtpHqN675u+nqOyrsp/KYLZjPzwnKjuq7KRS07Y7MJ4xJge3bStcF95LuJ/w
iar3rPl7ofY9VPdV+1GZ5437GavVvpvqPmobrnqAyu4qQ7nnNf/WTH03UtlQ
5ZKa//dolRDcdzttmwUfY2/havDYtLVwI/g8+gufpnp/lQNUBjGmaH93Cwsm
a6p0SDwXrpH4uVlO2x7IOavDuaoPq/maLq/fNki8/fLB13In9Tlb9SE1X+vv
co9nazKHZD72e/kt8//cLNwk+Fh2YH5QWUftd/Afwp2Eb+McVa+l0pExPXM9
mW1Vr6eyLmN85nqK2uuq1068/TqMGYwDKp15l1Saq/ysY2vDWJ15vl5ZfafW
fJxNhe+peS5iTmpdnivn3LQ8Bm2e3FKeix67ZFJ5PZcTvqvm+YvtptU8rzK/
8h/M0a1UP1Kz7YANsWI5FlE/UPOzsYLwfcJnZD4O5kHuP8/BCuX94T6l5RzO
XN6qnAdbqH5IP56ZeX5krmQcwLa5seZryTUtVE7PfHzYKiMynyf36LTM+8WW
OCnzdeY5GZb5v7l32DztyrFleObnh/tySuZzY1w9OfNx85xfrTKq5vmc/XH/
uF7ca47l1prvY0P4zpqfhyh8e833k/say+eU5zUv7YG2qqfXfK7YBHw/PvN5
8vyMzmwPYHtcmdn2wN4Ynnhe2F1lVOb6ZY5PeLdyvjhJ9V4qe6ucoLKHyp6J
bR9soB15HzO3zWQMF95V+EXhCzL//gLXQfU+KvtyfTX+XaFypcqaOonLVR+u
G3k342vF33dkTlR9idov1H521nYzarap+gs/L3yc6p0S/zZEZZfE/31VZpsH
Ow27DPuMbbDpsO22VhmXeftZ6nOq6v1U9le5LPMxvqr2sZnP813h6zKf/4fC
V2TeFzbeNZn/+z3hSzNfp1dqtvf6CD9T87Fgh/VNbIP1SmwnMw8zH/Mdu5Hj
eqpmm3Bb4adrtj/7JbafuW/YjvyGLcr+nq353vZO/H8nZH5WGEMmZL5/HwlP
zHwPPha+WXik8OfCN6k+R+Vc3g3GL9Wfqn2S8PnCc+iT+ffPhKcIXy38Hfvh
OBL3u4F5RfUnXCvVp/FuqVyfuZ6t9juFrxL+Vvh+1aMTf79d5SKVi1VuUZ8L
VX+hPreqviDx94dVxnLfVCaqnJH4/27gmiY+7gdVxiQ+vrsy9/1e+3lY+E7h
X4W/zz3+dVTbj9g8wp0y+zer1Ww7/qT2lXjn1D5PeBXhdYS3VN22ZptyM5WV
a/6ti8qKKi1qtm1b1rzfH3K3raVtH9X/X6NyLc9/5uP+ieuQ+Tr+LHxf5vsx
T/gvPfsfVfwOPKL2u9T+W/lOHVs+k4v02+yKbZ071H6l2r9R+72qr0j8/Xa1
X656rtqfxX4SXir8Bc9U4u8vYoOqrupde0b4WeF/1We68GPCfwu/r3pq4u9P
qP1x1Yu4VrwHKm+ovJS5rmk/P/AOJd7vXP6D3/m/zPUybfuc8Azh/4S/Uv1C
4u/fqrysMpP3TWVa4v+bof6vqK5o/y9k/p0J4GNV0zku3hm1P6N6ifb5ZOa2
f4Qfz/wM/SU8LfOz8ifPmPAlwl/VfI0vVbks8fMyKvFvr6vPJ6rr+q/bMv/+
tfpPzvzMfincXaV1zXPqG2r/TO1R/WcKvyOcpW57OvHxPaX2p1QvrnnfTyb+
/rPKmypvcQ0y16m2/ZV7rjKLOvM1aqr2BarfTvwfA/W81TXJ3aL2w/GhhG8W
PiL3/D9ZeC1NNB2Er9Fksp7w2sLXCa8t3FH4WuGNhNcXnii8pnB74XHCawiv
LjxWeAPhdYUnMCkJP69n8BzhmvBXwucK/6dJ9lnhs4RXUPuvjOfCTYUXCI8S
zoW/FT5fOBWeK3ye8L/a9mnhM4Rbq/0f5gvhRWqfLnya8GLhJ4VPF15OfX4W
vlh4ZeG/mWOE2wovER4t/IL69xPeTfgV4eOE9xR+Tng74V2EZwofI7yH8EfC
pwsfJvyz8H3Cxwu/KNwf/0D4GeHewjsJvyY8RHhv4Q+ETxU+RLi9jmFVXaur
hVcTXor9L/yn+jwmfIrwW8LHC+8v/IbwMHwI4Vbq/ydzovB7aj9Z+CDhd4VP
Ej5Q+Cfhe4SHCa+o/gvxfYSj8I/CFwoPU58/dKtaC58ovEi4rfDxwn8JtxEe
IbxYeFXhwcILhVcRPi74uVtZ+FThpcKrC18nvKX231l4onBP4Y2Fn8dfK6/n
28JXlef1svCo8to+jt0r3Ff4aXwT4R2EnxA+SHh74UOD3/Fmws/iy5TXeYbw
keV9LHSO3wuPFB4YPN40Fz4m+J1oJXyecI6tITxSuBDuKHw2cS/hNYQvFm4i
3En4LowxvZd/C98p/J/u3Z/CF6pPVJ+1hC8RXl54HeFrhbsLbyQ8VnhT4Q2F
jwp+f1sIny68TLid8JnCFfVpLzxGuKvwBsKjhbsIry88KHgsXVH4UuEN1b6u
8BXCnYXXE/5F+EHhE4V/EL5LeIjw78KPCo/gOuj4LyCewfUUPgM/nWMTPp+4
hfDBwqfhywvvKTxA+DHh3YV3xU8X3lt4D+HHhY8QPkf4ReHDhc/CDxXeVXgn
4YeFtxbuKXyr8ObC3YRvEt5UeBPhG4W7Cm8sfIPwFsKbCU8S3ld4L/xf4R7C
3RnHhLcS3pLxTXhb4a2Ebxc+SPgUfHnhWTr3seV7MU3G8kEa+64SfizaJ7+M
Zy86XjBe+D7hTYSHCt8j3E74KOHbhFsK7yN8r3B74WOEp0b78BcJPxodI7hA
+BHhrYTPFn5fx3BN+Z4+qPbuaj9Z+CHhLYRPFX5AuJvwCTzz0f7/bcL761z2
ISYg/LDae6n9TOH7hbsKDxfeUX22V5/7hXcW3kH4QeH+wn2F7+XZFp5G7Ej4
fOEniRkJDxEeRTyJ51n4GWJGPJPCU4k3CQ8Xvkz4Ld4L4eeIKQmfKzydWJPw
xsIbCl8v/LXO90Kd77HCvwk/LHyS8CfCZwkPFP5M+BzhI4Q/Fz5P+EjhL4VH
Ch8tfIL2eQWxMeFv1X672o8T/k74TuHBwiepz2j1eVf4DOFHhD9kXBIeK/yB
8NXCrwt/LzxB+Bfhn3lPhd8Wnic8TvhN4R+F+wr3Jk4lfJXwq8LfMe4JXyT8
mnAf4W2IvQi/pOM5uhz/r1T7TLV/K3y78L/CfwifLDxG+D3GCuEXhL8Svkz4
ReG5wjczTwn/JnwT47zwL8K3Ci8W/p1xVfg34fnCNwj/LrxA+M1g/4k54vVg
n4l551XhS8t57XZ8K/5L8/5VwgO5p8LvqH6I91RlpMoRKoN4V9XnEo5Tfc5V
fZjK4Sqjc9dvqn2a8IOMh8KPCd/P+aaOd97Ds8d7q/bHVS9S+3PCM4T/E35W
+HnhpcKPCt8tvDB13PSBqvc7JvexvK32qbn393vqmOt9Vf/fk2p/QvU/+Iaq
j1Q5SuVilaOJk6lcrj4Hcu/U53TVB1T9/VSV/VT2V7ksd/1q6us0RIWEyLW5
6/fVfo3wYO4jcTnVB6kcrDJK7bszfqr9EuE9hWcKjxM+TnhW6mt5bNXfx+Y+
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
5j8r81y4Or5z5jlyVeFPhFdibBf+jWMXblop38uKf+PatFHdWuWzzPU66v9e
5jmjnfBHmc9vTeFPhVdhzkj9fI0tn2XyA+QJZifOv3ykOjD35Y4z7yu8fO54
ywHCg1RfUHFs5UCVMyqOZe+vclrF2yyHnUab+jfJ/ft+wkepvqjimE7z3PUh
al+R+IDwocxruePPewsXwicK7yW8h+oTKo5lL9NxHqJ6p9Rz2oiKt6Ht7IqP
dV+VUyqOa8fc9T7Mp7n3safwCrnP42DhgarPrzh+hD9LLuO+1P4ifmPH0t/F
7yVvgR9K2/3qc2BuXhN8pL1z+6T4qviv+LHsC7+Y7e5N7fviA5PzILdCruRB
nrHc/38Qfq7qcyuObW2q9re45mrfTPgd7oHw9iT0GaNluzXN3ffA0k9n3/ek
9q3xsckTwBdqVvq8A9Q+vOJ8wK4qQyvOMaymPjeqPk59OuWOA58kvKrw9cLH
Cq+dOxY3Artd9SMVf7+Vd6/inM3G6vMS9yO1PUmO4wTh0arvr/j7Wmp/QPWJ
qe//lIp9DOxN7E7idFerPFTxceCfEosenjqfT16f713UPpNrlTr/Dw+AvAUc
AOrj1Z7nPtc9hDvnPsazhDfKnUs6U3iV3OdzpPDOqgdXnMvZIC/zQdzT3Ndp
d+GVcx/fIOEduTYV53jS3NsNSH0tn6p4+w3zMveU+lo+UXHOaT3iWrw7al83
L3M32L2qp1Ycc18nd30yPo7qaRX3u0XluYrPYZLKMxX/x/p5mc9S/wNyc+3g
4O2Xm8cFp2v/3BwweF/vV8wrI8ezQ+7c0Hi198udXxuXmoMGF42cGVw46gmp
c8XkjMmNkVsmx8z2syrmp7H99rn3DVetv/AfFXPYds39PhBTgisHZ448Flw5
YkHk2AbkfpeIL8GR43diRHA5+M/rUr8Tv1Sc/4NTx3YT1b5b7veWeBT5ccY7
8rYPZfYTyBHDH3hA+I+auQDkcx9KnOt/JHFuF34CbeR2yQmTG2asJBfM2Fmk
5giQ/2Vf+ChwEe5L7LuQO78ncR74rsR284OZfRjy5g9ktmXJj9+dOTdNfpzc
Pjl+joNcPPv7Xe33ZD4OcuXkju9OnMcnL8//LBTum/t6jE09fsyvOJe5Xe76
6tTPBVzMbmXMjNgZ8Xc4luRNHk89nhFrI3cLJxFu4rplDI2+j6SO0fH7w6nH
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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtnHf8V9Mfx+/nc/f9kpCkoalJv1SolKzIbihSiWQlEiJllIzsvXf2yCgj
OwkZhYyQkrRUijJC4/d69vr88X58zvu+zz2fe8894z1e79Nw8PBeZ5WDIPgh
DoJIv49lQVA7FJ8EQceqIJil8mBdP1A0VnX2TYPgDJVvU3lCEQSfSn6C+P1F
l+paqGu9dK2n6G21db2ufa/yRZK3072R5L3Fd9P1H1V+SeX2ktUUDdW1t/Ig
uEMPdLtooO6/XHXmqc4lku+h+3cQNVJ5uOqOkuwVyfYUX0t0hq6N17WPdO1Y
8bup7icqH6/yvqJLJH9CbdbVtfl6v056v8tUf6b4vpK3Uv3XVe6kcl3Rmao/
VXwHlWuLhon/Rvw5Kh8tulr8I2qvlq7NU3sd1N4+auN0yW6V7Cq1/ZlkJ4s/
WHSZrm2la4N17UTRbN37uX5PlewQ0XjJvxR/pspHia4U/0Xo9g4TXS7+U90z
SNc26/8O1v99rfLZkvUSTZB8a7U/RNdOEn2uul/p9yzJeoiukrya5KfwTKI5
ko8T/2Ho92mhZ58T+vseIbpC9cuS99C1o0Rvqv5s/Q6R7CDROMk/1rWBurZJ
z3OQnucZ1T9TA+mhkr6v2ttVdRpIvo9odeJvyHi5Ifa3bRn7e3QSrZJ8P/GH
8c6iMHUf0VeByt3V/v6p++d21bta91eJTgjdJ/RNx9TPd5PkV0o2V9fPC/x9
r9G1Q1Lzd6t8reTfSn5+4PFybew+o+9KqneI/m+v1OP/RsmuUP2nRcP0fg/o
/eZLdnDq8XCX5NdI1kq/O+v+zqJf9T4PqL3tVf5W5b3U3jqVn+X9RY+r7gvi
d1d5e9Fp4puJdtS1PUS/6J73NR8e1FxYqf/8WO0fLHlf3kmU67+bxx5/e4pW
qP4lurZEbX2h67fRN+KfEj9F/E3im+p3B9VtJ1qu+i1iz/cOopXia+h/Vqv+
56IPJesuOpY+EhVq61m9T0OVF6ru3nqf+8RvK36u+D3F91GdB3TvJN13vf7v
F8nuCTz/72P8q/0fVX5X9I74VPw3Kk8VvS7+eN3/hMqTVb5R928v+Srxs0Uf
6NqzunaWrk1U//+kuseIHpLsOclukOwFPc8u+s9Fep4uep6/VJ7MeiV6SnVO
T81PVfkW1f8t9P9dLXpE1/4U/4LKt4ieFP976P67VvSo+FNTy19V+Wbdv1ry
R5grood17Q/xzzH+RE+IXyv+aZWvY20Vv0vs8bC7aJmecWXo/horekCyVaHf
5zLRg+LXiH+MuSuaKP5X8Q+zVogeEj9Sz/ODyp+qfKue5yD9Hs0aJcoke079
0Vjln/RfndUfifruK9V/RfSa6jaJ/f3+J1qqOo3Fb6PybqIl4u/JzH/D3NX9
ReT/e1v0lupm4r/l24neiL2GsB6Pjr22NEu9vl8ofqz4bfX7i8Zzqja/VJtN
Uo//C3T9UskP0e9xko0SVUn2sX4HSL6P6GLWhtTz9R6Vr1P9RHRM6Dnxnp41
Fd8v9Jh9P/MewHp+UWVvqMOcEX+O+DHMZ9VrJX5r0cmML95d5W1Ep4h/jr5R
eVvRqeIni2+rcg3R6cxVtddE5bNVvrDwHsJ+MSb23hKL+oT+Ju/qeXaSvKnk
IyQfLVmu/vte/JsQa0fq5zlP5YskL0THh15jWWu3Vf3lkn8smqE6j4ZuT6Jg
sPjHQ7+fbgtOYr1X/Z9Vfp85J3478SsYL1wTPzH08+tTBCeKr5J8PnOTb8x+
Iv4nld8TTRPfKHV/nK/yJfqTTNQ/9Df7kLESef35UDSd/xOt1PfOJf9Kf9Ig
df+O1PWLde+Tut5CvIZWMETXlou/i/Ejupe5wpjX/VW6/rXur672l0o2k2eS
bIWu3xdYP7hffK42B+jaoSovLLxm/xB6frGWHxl7fR8nqi7+ba2vd6n9O0XH
6/m/ET9H5S9EY8Q/o//bGQUJuf6/nq5t0NozUOVX1fazkjeQrCwapGvPi2+q
ciYaLP458U1UTkQnin9M95ykazeojVn6//W590f2yfmSTZKskepGohNU/3H2
c127SfU/U/1/VL9R6DWYtbiGaJ1kx6ruK6rbTfz+uvdS8W+yX4g/UPxY8W+J
P1T8weIvE/+O+JHibxL/hPjPxd8Rub2vRYfo2ou6dlVk/i/9/3f6/7nMXz3v
HPZP8d+I/1p0idqaJ/473h9dRvLvxX9b9j1jJZ8r/iuVvxRdJP5v8fVD75lP
iX9B91yp//tS//eH/u+v3DL21R8kW5t7f2SfnMf80T3LVbeXnvUl8Rslb8H6
KvkC8b+Lrxl6z3tIdX/LXWYf/J79Qv/VjPEpOkltPKlrp+nanWrzG/YKlVtJ
trXoZPpDfAvGo2iI+A1qrznPwz6j9qtEK3Rvb8leVlubJG8Z+pleYv7r+ilq
41bVmaP2/5C8Tug9GN373sjja4HoSNVdJ/lOofd4dM0/xdcLrTOhy14gukXP
8qTqfqH/u1v3r9e934sO17X/VL9p6D2RvfEeyf+V7AfREZLfKf4P3lV0qPi7
xP+l8reiw8T/q/ubhN5D2Eue0H+cqjq3S/4V30fll8rW2Z9S/b/Fv1L2nHpa
/Ebx76r8iOgF8ZvFv894E00Wf7LaHKvyA4n1mwP1f53U9t6iV9T+BtV/R/KH
Rc/zPuLfKlsnek78EtVfqvIS0Q0sgvquH9AfoimSb1L991R+TPSi+P1Vv4Pa
7ih6ifkk+euS3Sd6Fh1W8s6SdRFNRecUv4/KXUWvi99X/B4q7yl6Ef1D/3m0
7r0aXU3Pv5fkrSTbVfQE80Xtj5Z8gOg61flW/CiVjxNdi06oe/bl/3Q91yJ4
otq7iOeRbCZ7mfi+4q8R/wHzV+3vp/r7i95S+ydJfonk90v+keSLJV8svpr6
Ya74peKXi18mukl1fxb/s8qL+H/xK8WvLnuNvYOxm7vMuvsd+pv4VWWv4bdJ
Pkx0lcoT9X+zJB8q/gq+j/hPxc9X/XnMJ93/Fbqa5Ffz/SWfzdwSP178Q+I/
YW1W/e/LXjMuy7ymPq2+qF32WrtM8hVl6wy3iF8v2VSV7xE9w/gU/ybjRzRJ
/I+q/6PKC0RXqX5JzzGTsSh6SfKfJP9J5YV8M8kX5i5vpXpf67/P1bUbxD+u
up+JX5S7r7bG9hMf6Xc2Y1n0quqUsYEYO6KXxYfYaIxN0Svil+fuO/bBb3X/
AvHzxf8guiKzDf1TaP0T2/pR7EO903X6vp+If1j8UeKHiH9X/Ke5587jojN1
/2e5//sZ0TniZ+Ue+79F7u+Pc4/9R0VnSP6h+Il878j9PzP33OTa6dij4iep
vC7y+3+S+7/WRP7eH+Vua3Xk782ez96/Qe/aTeP3i9zvThvnYS/m7vunRGeL
f073jMOW0fus1Ps8kntu9BftK/mj4geq/DHzUnUfE3982df2z6wjzghtH6M7
PiT5sZIdI+os+cTcbX2k+18rrGO9Hdp/ge6FzvJeaPsWXebh3HOxn6hrZh3u
rdD+DHS7OZI/L9kfkffHw2PbmheLqkl+WGzdbIxo69Q26aLQ9gK2Kj6AhaH1
d3wDHdRPV6itL/T+a8VPknys+JnifxH/rv7vXsZ75Pk/PffaxLXBer53xN+t
8nLJP5R8Wu65wLUTJH9P/P0qr4i8HmADzw9tT2AbbxN7rQx17YvEOvkHof0H
6Oozcs8l2hii9o6K7SsYL9pW8iNi2+OXirZJrWehb40WbSX+ebV3GWND7/Or
+MfV3iC19YmuvSHZl7nnDn16Pv4J8S+q/Gfk/esstfdGaH1/O93/teSTy64z
KrPP583Q/hx8QR/k3hseEp0q+SOSn6i2rtH/f4TtK/lgyU4UHcT+Jf6Esp/p
QPGvqW6HstebYeh04turXFM0FJ1C/P9U3pb2sZcz63cjVJ6K/0rt4UA7U9RL
spfFD1f5K/YdyaeIHyZ+jvjp4l8VP0L81+Jn4L8Sf3bZ9xzN/brehvVCdBr6
huRDVf6CfZT6+m0rvgbzVfIp4ndTeRvRKfhP1MY+Kl+ceP4cIH5f8Zck7v+H
REfqnsHqn3fUP6vV/nahbUBs+X1EnVX/osTzZ43kNULbrPgyVomvxlgX3S3+
QdU5Qu2dUNmPfpW8emibEdtxqmR7qr1arD/ow5KfyrOKDpP8efGnqfy56k1D
HxN/etnXjshsA70b2j+GbfSU+NNV9250FPH3q34v1e0p2lP17xZ/iMrdRbtl
tjGmh/afYXvcI/lhkh0q+h/Pn3t/7SPqJP6B3Pt5b1EH9DHxR6h8uGj3zDbj
O6H9X9iS90neQ7KjRO0lf1r8SSrPiqxvPyN+iPjZ4t8WP1X8OWWPgb6qPyl3
X3wWWR+fLP6Msr/5UZK/Lv48lc8VHSv+ydxj+dPI+v1EUQ+VT1F/vKfnuTO1
/rQqtlH1rOqfXPYzHKL73xR/vsojRceJfyN3eW5k/eK13P/1TWR9Zn+1c4Te
9wxRhO9V8lDtl0UXiz8wtq93uChJ7adCN0NHYz9mHWIteaNs/Yp2af9m0V3i
V0Weu2+Xrc+xL7EXTStb32MfYz9Dp5tc0THYe9iz0D0osx9NL1u/ZJ9iv5pR
tr53VW5dvRBtnXnP4z9YM9BFlkW2/V4uW39lXWUtfbVs/XUma7redXuViyrv
xSeLHy/aFn8b+obK1+n6lMq3OFX8FaLtEq/RtIk+PEj/d5/KJZXrl21P3i8+
VLlh2fbjlbltkYci2w+Xop+U/B8Y+ewL7AWvla3/XJzbVpgv2qRnvVLXvoy8
5vTMbNPyfvfo+q56/mtzry2PRbYXseOwzf5kz0y877N3f1K2PhPHttV+F30o
fkJuW2gr1pzMY4RvyphGF74h91zfkTVV/DW5187qou3RBXOvVdVYU4kP5F5r
d2CNEH97bvt1P1FT8Wsj6zYfla2//R5Zl/iwbP2eNZ/x86DKu+n9bsu93nUV
NZHsjtz27wGi5uJvzb0+dhE1yqyT0N6jur91ldds1m7W9N6Z12jWatboPuLP
y713fy76Xf19S+71cm++oeTX5V6btxfVFH9j7r1lJ1Fd1rPc3+patTlZbZ+P
PVyyzftCxf7phz0velntH5C73J3vzvfK7Wt7TdRL8m7oL9jqkt9XeM1G90Gn
YS3vpnJvyUeIUr3j97rnXpXrqbyV3vdgyfuKP0+UY/+I76PyuaIM/wN+cGxx
fH1V3oPYi1ijj0Rfwwcu+Tp8uZJnuX1Zb4iOZn1Obd+skTyUPM7te3xZdBS+
4tT2zG+SR5Lfm9reWi2+LH6r3L7iaaJ+6Hv0CX0veSx5Lvlbkv0b2t9c5BXf
pKiv6lbl9mX9F9o/nOT2Nb8q6iH5qNy2Lz4OfB0/8Mzid9a7b11lm5Q1DZ0I
W5V+pr9HiapUZ3RuW/s70b/oQ5IPUHm0aCvJL8xtS88VrZd8TG7be55og/jD
VX8Qa6momuqPzO37mEOfpt6rT1J5nKi65Bfk9sUwZv5E/5T8eJUvEm2dWMdA
12AP6ZF5bz5RsktF21RsStYQdEZszSty+6pS1kjxl+cuPxjZnzI+t+8qFmWS
nxB5PXxC1Khic7LGo6Nii16W23fFmpaI/4I5orq1VLdK/Tk2ty9ts66Fko/L
7TtjTYwyj3PG+/miQvcksX1L60QzE/uVsBX/Fn2c2KbFtn1P5fZV3hfZHy8V
3ZB432Xvu0x0U2IbAVthjMqtqqyXogteLLo+sd2BrTGmbHudfZz9fJzoRvEj
cuu2n7DH6t3Ozl3GpsG2YR9nP7+cPS6xToFuMVrllvq/c1R/Vsk6Mrry45HX
it3L1veejLx27lG2/sl34HvsUrb/kH2B/QGfFf7FhyPvbc3L9l9NjLw2tyzb
P/Vo5LW3ddn64YDcvie+Cd+GfYD9AJ0T/XZgbt/ObaIv0bcir117la2/PRF5
rW5Xtv75SOS1fNey/WPDc9t2H4lWEKvLbdt8KFpO7E/8XSX72PC1Dcrta7sD
n6Pkx+cu42PC1zQY+6ZknQ/d71T0/ZJjjMQaT8sdC+LaQt0/FPtU5UdEi8Tv
TwwvdnwM//vpuWXEkIglnZhbl+SZ5qr+WbmfHZsM2+yU3LHMB0ULJD85d5kY
4NOVucZee43otsreiy1wrej2xHotuuyVolvEn6H7Z6CriZaovWHiP1D5fdHS
1Gsrut8E0a2qPyR3rJE1ibWJtR379sKy/UfnSv6ZZLNZY/EHYS+WvMaz1uNL
qaO6Hcu2b9jz2PvOVLl+lfdI9sqzxDeo8l6Hbnqj6M7EeiH64a2iuxP7VPCt
vK1yW9V/IPLa0Lhsf3UryQ9S+RyVG1d5z2XvPZv/Ft9fz3dzyT5tfNvH5fZt
38g76Hn75S7jI8dXjo8EX8lbun933X9sbt/59aJPU+usPCM6Mr4yfMroK1NV
/3+qXxX7eTeIZiX28+Dv2SSandhPhb/qH3QedLzY//ev6FPWl9z9Rz/im7pZ
fN2yr+2c2efN+vSa6rapsp8A23ZW2f4ffJLY29NVbldlOxdb9rOy/UfoGth+
14vuEH9M7nfDB4QvqI/4a0u2abFt8UcOLHmPeY29N3eZfef+wv7L/iXvUa9K
3iO3bYDOOl18z9z6KXoqtkMv7K+Sr81IbcNgy1ygZ2lWZZsK22qU+OZVtomw
jS7EFhZ/SO79h33ogYp/EluQPe1NtXdU7v9Gb8aXdVju/Yh9Cdvx6Ny2OnsK
ujY6H7rfcLXfUO33lnwC+zNriOR9c/vG6JOPxU9EB1J5rb5bUmWbD9vvXN3f
pMo2G7bbSPFNxR+Z25fGnjoNf0buMvsstvHhuW1jnvHt1DYituJ5un+XKuNW
wK+MEKWsL7rvCNU9QxSpzoHie6o8XJQkxizso3sOCI1lwEfWKTY+AN8ZmIEl
oePFYAl20v+vVfl30Zni64vfqPIGYqTidxb/H76syPHe2uL/EL9OdJbkdcWv
V/lvYpzi64n/V+V/iClir+n/O8bGWxAfpQ3aog6xZDARS0PHv8FKNND9m1Xe
RAw3NYYAoBDxPbAFBzAmYuMHiL+COdg5so0IFoEYC7EWfAgPZo7pbw4djyTW
j86G7obOCHbgWdX9J7SO21t8Q/1/SW0FojGpYz7EfojpPJw5BrwsdHyf2DA6
HroeOiDYAHzg+MLxeV+n+nXU3l+S/UnMFl0T/0HJ3+y51P77Q0vWedF9u+bW
n9Gj71ZbnbH3Gc+iZyXvmPv7Mw7ukLyT+CNLvva05G1yxzKwybHNu+T+L8bJ
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
nVPjRsFqoqNwnjUxf+bji7GxAP8HZYbq4g==
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13mYjuUCB+BvhqlwTlT2JcvkkKNJ1sYwdsaSbGNPIi0K2TKNrUIHLXLq
qCMSORLZsjfJLhWRSnZy5qhwCmU3dD/XvH981+W5/X7P87zv973LlO8zqMPA
+Fgstscnwadw/lhsmn/8N08s9opxk5tjsb23xGKD2HsskRVl3+WLxebfFIud
yBuLvWGCDJn6utXZWLYtLhb7Sa4MW6Wbh+3Q7cceYAPkPmH1dMvpzjXfaJbF
GrDG7JDPEN151r1bt7TuPLkxcp/KNZJrKnPEZ5jcArmqcmXlGlujvtxkuQP2
cpXN1x3L1rEmus319rAP2P/YVPYsW8CeZ5+xZiyN7WefsEtsLXuetbFGT/Yh
K85KsWdZLByj/fS2n52sDrth3Eaul71k+f+B5quhO5gtZCfZ8JBjbWR76X6l
+4xcTTZEbpHcabknWXn2MJvAjrMhrBYbypawX9nn7D12hI23vyfN18oa3dkH
rDArxv7OfrZmLVZdd4ruw2ydXH5+UG68XEHzfWx8xt7mO8yH5VrL9ZCbr1tU
roTcQbksdpllsRfZPXKndO9ndazxpm5V9gurzWqyqSyJnWbJLJlNYw1Zivkm
sr3sIqvGfpVLYfXZdDaMXZdrzXva4xfWvZf937iuXIrc23JF2FssW+Y1x9GM
dWYZulvl2tlzLd3zPq/LfS3XT66u3L7wnbA5rCIrzjrpDtfdpNtat5rMU+w4
u1f2LtklLI/zMt14n/EI3Ta61/i/2LdsYHS9Jcp9wwqa7wQby95ig823hFWy
RhW9dGuMYFtYW1aDVZbbq1uY/aY7UbdQODa21RrtWEV2Q/ZttpcNZWmsv9yP
5kviFfgimTjz/dv4B+Phcq3kbpebyo6wcdF5ycsu6dYOvyO+IZwndpk1Zx0j
G8yusBYsnW0K9xZ2kTVl7dg6VsC6i41PG8+2RldrDJA7L9c4XEt8rdxAdoE1
YW1ZFjserkPjxcbVdBPDNSN3TO4eXo4vlDnmM9z4I+MkufJyvaxbUq6r85fh
9/I9K6v7hVxR9ofcIJZPbhE7pTuLdWZN5drpzpSL930kmL8Rq8cmsX3muyxX
j93HxrAtLJsNZddYS3N2M+c23d99phjvNO5rjfvl7pTbzoronmNPs0tyb7Bv
5PqzBmyO/Y2K7rH17aWhzIFw/uXmylWSKyl3lr3GdrBHWG22U/d93R91J+sO
kvmKzWHH2EQ2gH3BZrOj7CX2FDvh85z5Vpivlvkqm+9lua5y08L5c7xFZJ52
HH+wRrKtZFexKz5vGu8xflq3ke5JNpKtYcmsKnvdfA/pvmO+HPPdKbObzWPZ
bIq9DGOnfUbpfqKbopsUzp/cDpZf7jB7lmXLjWBL5apH18cQ+7tqvjTehW+R
+dkn03iVcR25KnIrzfeP6L7R3rqdZKro/iRXk1Wzv1flerPP5Arww3IvyTXT
vRbdm+rJrZYrKbeMXbfGZmv0ZP3YPt2K/HY+U/ec7gFWnF023xxWQm6pcY7M
Rt3uug+yQdHzsqFcRblUVpuNYzujZ0W6+QqzDmwA+5J1YUVYRzaI7WAtdbux
eez2+NzvsgVLZ3NYAXYru6R7lJWxn/joemsvN4Stj56r4R52G3tFZr9Mpj1X
s0ZHNkxuo1xLuSS5lua7LlcvHEf0DK0ot4eVZXnjcu+T7eXyhN9V6LItrJzc
l3LF2AVrDGbF2RJ2zbrro/vLMd31ujlym6w7ybod5IayDawFq8ouyB1hpcML
k/6HLJttZDfCu4/cq6wJuxo9y+ray0prHGcb5K6Ha1/uZbke1pjFTrNZ7DF2
F9utW4bF6Y7SfYRtkisYnl3RGn3ZXpbIbrWXt9n97A7WO1yrutt0e1i3GEtn
Q9luVlpuZfh+2JcOpS8rxVawOLadPcIqsK9ZqXC9sQxWMJwXtsGaLaJ3s2as
vTXeDd+H/d1sL13Yc2wb68DqsCfYYVYlzKk/j5VnO41Lyl2NrsuibAG7GO4P
rC17lP2gexcvxN/RLcYWGl8yXiPXXq4deyZ612ts3UpyiWyXXGl2Qy5Trhsb
KbeddZZLkavLyrD+bLpztV+uD9vMCumfkJsi15x1YrPl8rG/sBznOZtVkCtg
PytYV7lM9rlcJ7lkVkRutcx5mWX28oQ1Hpc7JHc3L8Hnyj3GDrLK4febJ/c6
T2F3sqfMN8P+Duq2ZQOj9+dUayTKHbbGp+wKWxe9w/3MtrI84bnC3mTJ7Lxx
Dbl7zbfAfKvZxOh76yjXOZxntkbugn0st+f+4T2Xxck1CNe07gaWwi5E97/7
2Ecszf46y73P/mq+QuHvBbmL0XtnDbnFck3kHpSbwWJy8XIvyXVkU9mpuNzz
3FNuLjvL5kfPqDFyDdhotlEuxqrLnbFG/ei+MdMa97HfontJAzaDPcTW6CaE
54/5MsMzgcWFc8v6OOZdrLc1Ssl1083U/cH/V5b7PrwzsfxsQvi9yJWW685G
Rb+hx1k51ouNY8fYbWy57lnzL4iut26sqFwnucFyX4dnACvLHmIvsCPh3s7i
WcNwb2KbWHd7mc5+YtMcR0977sXWspus8x0bze5mJ6LvPEl3su5483WQe539
wvLLNWCXonf0Wmyp3BI2Lro/tzLfA3L5zJfDUmRTo3fv1nIxlhr+3tL9TLd2
eO4n5N6f09h/2Fa5d+UOhWOL7n8n2TaWV3YXm8Y2shnsgNxo1ofdYb5/yhy1
5gTL1TPfGbn9csXCvUPuvfAblyvO+oW/86L739/Yt+F9kN3EXmAtdHOivytS
2Vq2nr2ju5+NNF9v81XS/U6uPLtFbpxcLfZ7Qu730Zy9zzbrztQ9yMbqPqq7
nE1gm6P39vbhfZUlsxFsle553WVsfPR3RRu5B+UyWF2WwdZEfws1YpetWyf6
2+pjVsNezibknvvGbBYbJZeqO4qtZ9fZQvZC9Exubo2W1ljEXoyeeWmsNatp
vnMJudd5U93ZumvlJkX3tXS5rnJZbHJ0P+3CuoffkG4dNp7t0j2j+ycH/hZY

          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0slL1GEAx+HXpsVyKzWz3PCaRXRNpWsZUWqZOtqhg5prqzraXlhWlods
soWIFJGIKB3EY4p0Nf0HjOja8g+Uj3T4zPM9zMD7e39TfKarqjMphPBZo5EQ
1vYIB1RkZ20KoZxR7bdjjOuYneCyOuw/zPDjB/ZeTvIIz+qLfZfj+mHP85si
ySH8Y8G6EIrtUh5kHXvUaI9wSv32V/7SqJ3mfCWasQ/zvl6oWXE9VouOb3AG
tqrSbmO7quwOdqra7uI5nbDP8yQv8KJq7Eu8rFN2N3tUa/cypjq7j/Xs5xVF
7au8pgb7Om+o0b7JWzpt3+ZDvdQdPdOwmrTs+Q5xtxJ2Kn+6g7i9yE+K2U/Y
rahdy3IeYL6K7L/ueUVJ9hzH9N27GGCLFuwKTnAP0zVo//Zel9RmT/Opjtq9
rNc+u4z3nOu5Cte+w0cqsGeZzzzN2Lu4Uwk7lzs0Zedwuz7a2fzALGbqvb2N
W/XOzmC6Ju00pmrCTuE4t3Cz3toeNzhieGNvpOsOr+31RHjlwxWFocj///8q
vl5WFw==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1811, 2260, 1810, 1390, 1812, 2261, 1813, 2680, 2262, 1814, 
       2263, 1815, 2681, 2264, 1816, 2265, 1817, 2682, 2266, 1818, 2267, 1819,
        2683, 2268, 1820, 2575, 2785, 1821, 2269, 1822, 2684, 2270, 1823, 
       2271, 1824, 2685, 2272, 1825, 2273, 1826, 2686, 2274, 1827, 2275, 1828,
        2687, 2276, 1829, 2576, 2786, 1830, 2277, 1831, 2688, 2278, 1832, 
       2279, 1833, 2689, 2280, 1834, 2281, 1835, 2690, 2282, 1836, 2283, 1837,
        2691, 2284, 1838, 2285, 1839}], 
      Line3DBox[{1841, 2286, 1840, 2577, 2787, 1842, 2287, 1843, 1421, 1844, 
       2288, 1845, 2692, 2289, 1846, 2290, 1847, 2693, 2291, 1848, 2292, 1849,
        2694, 2293, 1850, 2578, 2788, 1851, 2294, 1852, 2579, 2789, 1853, 
       2295, 1854, 2695, 2296, 1855, 2297, 1856, 2696, 2298, 1857, 2299, 1858,
        2697, 2300, 1859, 2580, 2790, 1860, 2301, 1861, 2581, 2791, 1862, 
       2302, 1863, 2698, 2303, 1864, 2304, 1865, 2699, 2305, 1866, 2306, 1867,
        2700, 2307, 1868, 2308, 1869}], 
      Line3DBox[{1871, 2309, 1870, 2582, 2792, 1872, 2310, 1873, 2583, 2793, 
       1874, 2311, 1875, 1452, 1876, 2312, 1877, 2701, 2313, 1878, 2314, 1879,
        2702, 2315, 1880, 2584, 2794, 1881, 2316, 1882, 2585, 2795, 1883, 
       2317, 1884, 2586, 2796, 1885, 2318, 1886, 2703, 2319, 1887, 2320, 1888,
        2704, 2321, 1889, 2587, 2797, 1890, 2322, 1891, 2588, 2798, 1892, 
       2323, 1893, 2589, 2799, 1894, 2324, 1895, 2705, 2325, 1896, 2326, 1897,
        2706, 2327, 1898, 2328, 1899}], 
      Line3DBox[{1901, 2329, 1900, 2590, 2800, 1902, 2330, 1903, 2591, 2801, 
       1904, 2331, 1905, 2592, 2802, 1906, 2332, 1907, 1483, 1908, 2333, 1909,
        2707, 2334, 1910, 2593, 2803, 1911, 2335, 1912, 2594, 2804, 1913, 
       2336, 1914, 2595, 2805, 1915, 2337, 1916, 2596, 2806, 1917, 2338, 1918,
        2708, 2339, 1919, 2597, 2807, 1920, 2340, 1921, 2598, 2808, 1922, 
       2341, 1923, 2599, 2809, 1924, 2342, 1925, 2600, 2810, 1926, 2343, 1927,
        2709, 2344, 1928, 2345, 1929}], 
      Line3DBox[{1931, 2346, 1930, 2601, 2811, 1932, 2347, 1933, 2602, 2812, 
       1934, 2348, 1935, 2603, 2813, 1936, 2349, 1937, 2604, 2814, 1938, 2350,
        1939, 1514, 1940, 2605, 2815, 1941, 2351, 1942, 2606, 2816, 1943, 
       2352, 1944, 2607, 2817, 1945, 2353, 1946, 2608, 2818, 1947, 2354, 1948,
        2609, 2819, 1949, 2610, 2820, 1950, 2355, 1951, 2611, 2821, 1952, 
       2356, 1953, 2612, 2822, 1954, 2357, 1955, 2613, 2823, 1956, 2358, 1957,
        2614, 2824, 1958, 2359, 1959}], 
      Line3DBox[{1961, 2360, 1960, 2710, 2361, 1962, 2362, 1963, 2711, 2363, 
       1964, 2364, 1965, 2712, 2365, 1966, 2366, 1967, 2713, 2367, 1968, 2368,
        1969, 2714, 2369, 1970, 1530, 1971, 2370, 1972, 2715, 2371, 1973, 
       2372, 1974, 2716, 2373, 1975, 2374, 1976, 2717, 2375, 1977, 2376, 1978,
        2718, 2377, 1979, 2615, 2825, 1980, 2378, 1981, 2719, 2379, 1982, 
       2380, 1983, 2720, 2381, 1984, 2382, 1985, 2721, 2383, 1986, 2384, 1987,
        2722, 2385, 1988, 2386, 1989}], 
      Line3DBox[{1991, 2387, 1990, 2616, 2826, 1992, 2388, 1993, 2723, 2389, 
       1994, 2390, 1995, 2724, 2391, 1996, 2392, 1997, 2725, 2393, 1998, 2394,
        1999, 2726, 2395, 2000, 2617, 2827, 2001, 2396, 2002, 1561, 2003, 
       2397, 2004, 2727, 2398, 2005, 2399, 2006, 2728, 2400, 2007, 2401, 2008,
        2729, 2402, 2009, 2618, 2828, 2010, 2403, 2011, 2619, 2829, 2012, 
       2404, 2013, 2730, 2405, 2014, 2406, 2015, 2731, 2407, 2016, 2408, 2017,
        2732, 2409, 2018, 2410, 2019}], 
      Line3DBox[{2021, 2411, 2020, 2620, 2830, 2022, 2412, 2023, 2621, 2831, 
       2024, 2413, 2025, 2733, 2414, 2026, 2415, 2027, 2734, 2416, 2028, 2417,
        2029, 2735, 2418, 2030, 2622, 2832, 2031, 2419, 2032, 2623, 2833, 
       2033, 2420, 2034, 1592, 2035, 2421, 2036, 2736, 2422, 2037, 2423, 2038,
        2737, 2424, 2039, 2624, 2834, 2040, 2425, 2041, 2625, 2835, 2042, 
       2426, 2043, 2626, 2836, 2044, 2427, 2045, 2738, 2428, 2046, 2429, 2047,
        2739, 2430, 2048, 2431, 2049}], 
      Line3DBox[{2051, 2432, 2050, 2627, 2837, 2052, 2433, 2053, 2628, 2838, 
       2054, 2434, 2055, 2629, 2839, 2056, 2435, 2057, 2740, 2436, 2058, 2437,
        2059, 2741, 2438, 2060, 2630, 2840, 2061, 2439, 2062, 2631, 2841, 
       2063, 2440, 2064, 2632, 2842, 2065, 2441, 2066, 1623, 2067, 2442, 2068,
        2742, 2443, 2069, 2633, 2843, 2070, 2444, 2071, 2634, 2844, 2072, 
       2445, 2073, 2635, 2845, 2074, 2446, 2075, 2636, 2846, 2076, 2447, 2077,
        2743, 2448, 2078, 2449, 2079}], 
      Line3DBox[{2081, 2450, 2080, 2637, 2847, 2082, 2451, 2083, 2638, 2848, 
       2084, 2452, 2085, 2639, 2849, 2086, 2453, 2087, 2640, 2850, 2088, 2454,
        2089, 2744, 2455, 2090, 2641, 2851, 2091, 2456, 2092, 2642, 2852, 
       2093, 2457, 2094, 2643, 2853, 2095, 2458, 2096, 2644, 2854, 2097, 2459,
        2098, 1654, 2099, 2645, 2855, 2100, 2460, 2101, 2646, 2856, 2102, 
       2461, 2103, 2647, 2857, 2104, 2462, 2105, 2648, 2858, 2106, 2463, 2107,
        2649, 2859, 2108, 2464, 2109}], 
      Line3DBox[{2111, 2465, 2110, 2745, 2466, 2112, 2467, 2113, 2746, 2468, 
       2114, 2469, 2115, 2747, 2470, 2116, 2471, 2117, 2748, 2472, 2118, 2473,
        2119, 2749, 2474, 2120, 2750, 2475, 2121, 2476, 2122, 2751, 2477, 
       2123, 2478, 2124, 2752, 2479, 2125, 2480, 2126, 2753, 2481, 2127, 2482,
        2128, 2754, 2483, 2129, 1670, 2130, 2484, 2131, 2755, 2485, 2132, 
       2486, 2133, 2756, 2487, 2134, 2488, 2135, 2757, 2489, 2136, 2490, 2137,
        2758, 2491, 2138, 2492, 2139}], 
      Line3DBox[{2141, 2493, 2140, 2650, 2860, 2142, 2494, 2143, 2759, 2495, 
       2144, 2496, 2145, 2760, 2497, 2146, 2498, 2147, 2761, 2499, 2148, 2500,
        2149, 2762, 2501, 2150, 2651, 2861, 2151, 2502, 2152, 2763, 2503, 
       2153, 2504, 2154, 2764, 2505, 2155, 2506, 2156, 2765, 2507, 2157, 2508,
        2158, 2766, 2509, 2159, 2652, 2862, 2160, 2510, 2161, 1701, 2162, 
       2511, 2163, 2767, 2512, 2164, 2513, 2165, 2768, 2514, 2166, 2515, 2167,
        2769, 2516, 2168, 2517, 2169}], 
      Line3DBox[{2171, 2518, 2170, 2653, 2863, 2172, 2519, 2173, 2654, 2864, 
       2174, 2520, 2175, 2770, 2521, 2176, 2522, 2177, 2771, 2523, 2178, 2524,
        2179, 2772, 2525, 2180, 2655, 2865, 2181, 2526, 2182, 2656, 2866, 
       2183, 2527, 2184, 2773, 2528, 2185, 2529, 2186, 2774, 2530, 2187, 2531,
        2188, 2775, 2532, 2189, 2657, 2867, 2190, 2533, 2191, 2658, 2868, 
       2192, 2534, 2193, 1732, 2194, 2535, 2195, 2776, 2536, 2196, 2537, 2197,
        2777, 2538, 2198, 2539, 2199}], 
      Line3DBox[{2201, 2540, 2200, 2659, 2869, 2202, 2541, 2203, 2660, 2870, 
       2204, 2542, 2205, 2661, 2871, 2206, 2543, 2207, 2778, 2544, 2208, 2545,
        2209, 2779, 2546, 2210, 2662, 2872, 2211, 2547, 2212, 2663, 2873, 
       2213, 2548, 2214, 2664, 2874, 2215, 2549, 2216, 2780, 2550, 2217, 2551,
        2218, 2781, 2552, 2219, 2665, 2875, 2220, 2553, 2221, 2666, 2876, 
       2222, 2554, 2223, 2667, 2877, 2224, 2555, 2225, 1763, 2226, 2556, 2227,
        2782, 2557, 2228, 2558, 2229}], 
      Line3DBox[{2231, 2559, 2230, 2668, 2878, 2232, 2560, 2233, 2669, 2879, 
       2234, 2561, 2235, 2670, 2880, 2236, 2562, 2237, 2671, 2881, 2238, 2563,
        2239, 2783, 2564, 2240, 2672, 2882, 2241, 2565, 2242, 2673, 2883, 
       2243, 2566, 2244, 2674, 2884, 2245, 2567, 2246, 2675, 2885, 2247, 2568,
        2248, 2784, 2569, 2249, 2676, 2886, 2250, 2570, 2251, 2677, 2887, 
       2252, 2571, 2253, 2678, 2888, 2254, 2572, 2255, 2679, 2889, 2256, 2573,
        2257, 1794, 2258, 2574, 2259}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{925, 1375, 926, 1390, 955, 1405, 970, 2787, 1420, 985, 1435, 
       1000, 2792, 1450, 1015, 1465, 1030, 2800, 1480, 1045, 1495, 1060, 2811,
        1510, 1075, 1525, 2710, 1090, 1540, 1105, 2826, 1555, 1120, 1570, 
       1135, 2830, 1585, 1150, 1600, 1165, 2837, 1615, 1180, 1630, 1195, 2847,
        1645, 1210, 1660, 2745, 1225, 1675, 1240, 2860, 1690, 1255, 1705, 
       1270, 2863, 1720, 1285, 1735, 1300, 2869, 1750, 1315, 1765, 1330, 2878,
        1780, 1345, 1795, 1360}], 
      Line3DBox[{927, 1376, 928, 1391, 2680, 956, 1406, 971, 1421, 986, 1436, 
       1001, 2793, 1451, 1016, 1466, 1031, 2801, 1481, 1046, 1496, 1061, 2812,
        1511, 1076, 1526, 2711, 1091, 1541, 1106, 1556, 2723, 1121, 1571, 
       1136, 2831, 1586, 1151, 1601, 1166, 2838, 1616, 1181, 1631, 1196, 2848,
        1646, 1211, 1661, 2746, 1226, 1676, 1241, 1691, 2759, 1256, 1706, 
       1271, 2864, 1721, 1286, 1736, 1301, 2870, 1751, 1316, 1766, 1331, 2879,
        1781, 1346, 1796, 1361}], 
      Line3DBox[{929, 1377, 930, 1392, 2681, 957, 1407, 972, 1422, 2692, 987, 
       1437, 1002, 1452, 1017, 1467, 1032, 2802, 1482, 1047, 1497, 1062, 2813,
        1512, 1077, 1527, 2712, 1092, 1542, 1107, 1557, 2724, 1122, 1572, 
       1137, 1587, 2733, 1152, 1602, 1167, 2839, 1617, 1182, 1632, 1197, 2849,
        1647, 1212, 1662, 2747, 1227, 1677, 1242, 1692, 2760, 1257, 1707, 
       1272, 1722, 2770, 1287, 1737, 1302, 2871, 1752, 1317, 1767, 1332, 2880,
        1782, 1347, 1797, 1362}], 
      Line3DBox[{931, 1378, 932, 1393, 2682, 958, 1408, 973, 1423, 2693, 988, 
       1438, 1003, 1453, 2701, 1018, 1468, 1033, 1483, 1048, 1498, 1063, 2814,
        1513, 1078, 1528, 2713, 1093, 1543, 1108, 1558, 2725, 1123, 1573, 
       1138, 1588, 2734, 1153, 1603, 1168, 1618, 2740, 1183, 1633, 1198, 2850,
        1648, 1213, 1663, 2748, 1228, 1678, 1243, 1693, 2761, 1258, 1708, 
       1273, 1723, 2771, 1288, 1738, 1303, 1753, 2778, 1318, 1768, 1333, 2881,
        1783, 1348, 1798, 1363}], 
      Line3DBox[{933, 1379, 934, 1394, 2683, 959, 1409, 974, 1424, 2694, 989, 
       1439, 1004, 1454, 2702, 1019, 1469, 1034, 1484, 2707, 1049, 1499, 1064,
        1514, 1079, 1529, 2714, 1094, 1544, 1109, 1559, 2726, 1124, 1574, 
       1139, 1589, 2735, 1154, 1604, 1169, 1619, 2741, 1184, 1634, 1199, 1649,
        2744, 1214, 1664, 2749, 1229, 1679, 1244, 1694, 2762, 1259, 1709, 
       1274, 1724, 2772, 1289, 1739, 1304, 1754, 2779, 1319, 1769, 1334, 1784,
        2783, 1349, 1799, 1364}], 
      Line3DBox[{935, 1380, 936, 2785, 1395, 960, 1410, 975, 2788, 1425, 990, 
       1440, 1005, 2794, 1455, 1020, 1470, 1035, 2803, 1485, 1050, 1500, 1065,
        2815, 1515, 1080, 1530, 1095, 1545, 1110, 2827, 1560, 1125, 1575, 
       1140, 2832, 1590, 1155, 1605, 1170, 2840, 1620, 1185, 1635, 1200, 2851,
        1650, 1215, 1665, 2750, 1230, 1680, 1245, 2861, 1695, 1260, 1710, 
       1275, 2865, 1725, 1290, 1740, 1305, 2872, 1755, 1320, 1770, 1335, 2882,
        1785, 1350, 1800, 1365}], 
      Line3DBox[{937, 1381, 938, 1396, 2684, 961, 1411, 976, 2789, 1426, 991, 
       1441, 1006, 2795, 1456, 1021, 1471, 1036, 2804, 1486, 1051, 1501, 1066,
        2816, 1516, 1081, 1531, 2715, 1096, 1546, 1111, 1561, 1126, 1576, 
       1141, 2833, 1591, 1156, 1606, 1171, 2841, 1621, 1186, 1636, 1201, 2852,
        1651, 1216, 1666, 2751, 1231, 1681, 1246, 1696, 2763, 1261, 1711, 
       1276, 2866, 1726, 1291, 1741, 1306, 2873, 1756, 1321, 1771, 1336, 2883,
        1786, 1351, 1801, 1366}], 
      Line3DBox[{939, 1382, 940, 1397, 2685, 962, 1412, 977, 1427, 2695, 992, 
       1442, 1007, 2796, 1457, 1022, 1472, 1037, 2805, 1487, 1052, 1502, 1067,
        2817, 1517, 1082, 1532, 2716, 1097, 1547, 1112, 1562, 2727, 1127, 
       1577, 1142, 1592, 1157, 1607, 1172, 2842, 1622, 1187, 1637, 1202, 2853,
        1652, 1217, 1667, 2752, 1232, 1682, 1247, 1697, 2764, 1262, 1712, 
       1277, 1727, 2773, 1292, 1742, 1307, 2874, 1757, 1322, 1772, 1337, 2884,
        1787, 1352, 1802, 1367}], 
      Line3DBox[{941, 1383, 942, 1398, 2686, 963, 1413, 978, 1428, 2696, 993, 
       1443, 1008, 1458, 2703, 1023, 1473, 1038, 2806, 1488, 1053, 1503, 1068,
        2818, 1518, 1083, 1533, 2717, 1098, 1548, 1113, 1563, 2728, 1128, 
       1578, 1143, 1593, 2736, 1158, 1608, 1173, 1623, 1188, 1638, 1203, 2854,
        1653, 1218, 1668, 2753, 1233, 1683, 1248, 1698, 2765, 1263, 1713, 
       1278, 1728, 2774, 1293, 1743, 1308, 1758, 2780, 1323, 1773, 1338, 2885,
        1788, 1353, 1803, 1368}], 
      Line3DBox[{943, 1384, 944, 1399, 2687, 964, 1414, 979, 1429, 2697, 994, 
       1444, 1009, 1459, 2704, 1024, 1474, 1039, 1489, 2708, 1054, 1504, 1069,
        2819, 1519, 1084, 1534, 2718, 1099, 1549, 1114, 1564, 2729, 1129, 
       1579, 1144, 1594, 2737, 1159, 1609, 1174, 1624, 2742, 1189, 1639, 1204,
        1654, 1219, 1669, 2754, 1234, 1684, 1249, 1699, 2766, 1264, 1714, 
       1279, 1729, 2775, 1294, 1744, 1309, 1759, 2781, 1324, 1774, 1339, 1789,
        2784, 1354, 1804, 1369}], 
      Line3DBox[{945, 1385, 946, 2786, 1400, 965, 1415, 980, 2790, 1430, 995, 
       1445, 1010, 2797, 1460, 1025, 1475, 1040, 2807, 1490, 1055, 1505, 1070,
        2820, 1520, 1085, 2825, 1535, 1100, 1550, 1115, 2828, 1565, 1130, 
       1580, 1145, 2834, 1595, 1160, 1610, 1175, 2843, 1625, 1190, 1640, 1205,
        2855, 1655, 1220, 1670, 1235, 1685, 1250, 2862, 1700, 1265, 1715, 
       1280, 2867, 1730, 1295, 1745, 1310, 2875, 1760, 1325, 1775, 1340, 2886,
        1790, 1355, 1805, 1370}], 
      Line3DBox[{947, 1386, 948, 1401, 2688, 966, 1416, 981, 2791, 1431, 996, 
       1446, 1011, 2798, 1461, 1026, 1476, 1041, 2808, 1491, 1056, 1506, 1071,
        2821, 1521, 1086, 1536, 2719, 1101, 1551, 1116, 2829, 1566, 1131, 
       1581, 1146, 2835, 1596, 1161, 1611, 1176, 2844, 1626, 1191, 1641, 1206,
        2856, 1656, 1221, 1671, 2755, 1236, 1686, 1251, 1701, 1266, 1716, 
       1281, 2868, 1731, 1296, 1746, 1311, 2876, 1761, 1326, 1776, 1341, 2887,
        1791, 1356, 1806, 1371}], 
      Line3DBox[{949, 1387, 950, 1402, 2689, 967, 1417, 982, 1432, 2698, 997, 
       1447, 1012, 2799, 1462, 1027, 1477, 1042, 2809, 1492, 1057, 1507, 1072,
        2822, 1522, 1087, 1537, 2720, 1102, 1552, 1117, 1567, 2730, 1132, 
       1582, 1147, 2836, 1597, 1162, 1612, 1177, 2845, 1627, 1192, 1642, 1207,
        2857, 1657, 1222, 1672, 2756, 1237, 1687, 1252, 1702, 2767, 1267, 
       1717, 1282, 1732, 1297, 1747, 1312, 2877, 1762, 1327, 1777, 1342, 2888,
        1792, 1357, 1807, 1372}], 
      Line3DBox[{951, 1388, 952, 1403, 2690, 968, 1418, 983, 1433, 2699, 998, 
       1448, 1013, 1463, 2705, 1028, 1478, 1043, 2810, 1493, 1058, 1508, 1073,
        2823, 1523, 1088, 1538, 2721, 1103, 1553, 1118, 1568, 2731, 1133, 
       1583, 1148, 1598, 2738, 1163, 1613, 1178, 2846, 1628, 1193, 1643, 1208,
        2858, 1658, 1223, 1673, 2757, 1238, 1688, 1253, 1703, 2768, 1268, 
       1718, 1283, 1733, 2776, 1298, 1748, 1313, 1763, 1328, 1778, 1343, 2889,
        1793, 1358, 1808, 1373}], 
      Line3DBox[{953, 1389, 954, 1404, 2691, 969, 1419, 984, 1434, 2700, 999, 
       1449, 1014, 1464, 2706, 1029, 1479, 1044, 1494, 2709, 1059, 1509, 1074,
        2824, 1524, 1089, 1539, 2722, 1104, 1554, 1119, 1569, 2732, 1134, 
       1584, 1149, 1599, 2739, 1164, 1614, 1179, 1629, 2743, 1194, 1644, 1209,
        2859, 1659, 1224, 1674, 2758, 1239, 1689, 1254, 1704, 2769, 1269, 
       1719, 1284, 1734, 2777, 1299, 1749, 1314, 1764, 2782, 1329, 1779, 1344,
        1794, 1359, 1809, 1374}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztfHk01s3f/5WSKLpTUlokFCoSJe50yZZokWyVrbKUVlsh2SOKLIXsomwX
kaioaCEplSUiSwqJuGi7kfLMZ9TMr859/Z7jebqf7/c8z8w/znmdOe9rPq95
zXve7/eMEdp5UMeCjUajrZtIo40FfwOjhE0aB0oKaSPNffHi1e19zkz68ggV
rhDnywivV6zck9DJpK85/kqdfYYO/QfuNhh97dswk74yYNZweVEiwoeW/cFo
H2DS65+HGT+fdgHhBi8W+XMD3KPKqeOV8nGEB9ifHAoEdpZdO++hHp6GfjfC
gF7a95FJF584cbfx8jsI106+55LFYNL3vFSb/UIgGeGvL6UEJf/FpLcdXM2v
pGiHcK33Zxo7gP39xd5hlr2B6Hc/ivBk/gHwnNnyi5X5QhBu1WQ5eO0bk66p
c+X6w0/OCJdnrAupBP1jum8zdu0KQPb1Eo14xQC+wuPMdbWZFxD+l8mZWC7w
vRUXpwyqzsQ8nC7kjaPw73bov9pZtS7x+pNPzsiOk/Qq+LtbD2kw1vCFIFzu
vSMcp4X+gTCr3kCEJ2d8y6C+y36mAr+yoh2yzyYcBHnQfNYSBXhDeKL9esib
pr55g9HyOwjvFHrgQfEs1NutrBaehvDcExoPqHkRSTTvaFU+jn6XvuwwnMfv
847wH/N+XZVT8HFRIsJznYbSKZ2sTmxT7+LXQbhxcjzUlVGl1nGgQ/S7nNq5
uykdSk0b1w90i3ARunwzpVuiZ6JnGtEz0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPR
M9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez
0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPR
M9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPRM9Ez0TPR8/8x
PfNNfWr3VrYQ2fHe4/f5zR3WOpevcpDplC1Edi4sj/hA9f+n7bPCWdkfbX9W
4/cb/2bS10V3Uf8/fGY9CEtk0pUaNQ0BjvrHRiiVUPho+7PiYbT2Rzv+0fo3
VuPZdsf3plCr34/+tHyDp1aGw6xxwbWf/fXOJv2wQ3vwZ3Ks2QBrfNOySw3p
WsHIzhQJw9rqb6zx+0uin29SuIXwNFtNqewS1vizg8saq/T3IdzBKNDuwzBr
XIJ3TX787WA0To7J87PufWONhx6Yz71qyA3ZWTH+CU/RMGs8/sPUqcGf1t76
gQ/DxhpfPGtJucKQG/pdN/ZqaIcVPlS0fhsYJ/pdEVMpOE5WOOOirHGt/j5k
54PyScgDKzyrXXw64BnhvnqSyyieWeG0Sr/laVqYN7WtwXAeWeF68swwoBOs
K584qBNWeHWGnYBoqx+yk1OeBHXICh+tbkerw9HqarQ6Ge28j3YeRzsvhGfC
M+GZ8Ex4JjwTngnPhGfCM+GZ8Ex4JjwTngnPhGfCM+GZ8Ex4JjwTngnPhGfC
M+GZ8Ex4JjwTngnPhGfCM+GZ8Ex4JjwTngnPhGfCM+GZ8Ex4JjwTngnPhGfC
M+GZ8Ex4JjwTngnPhGfCM+GZ8Ex4JjwTngnPhGfCM+GZ8Ex4JjwTngnPhGfC
M+GZ8Ex4Jjz/d3j+5b1f2o/3fk///H4mbcn39zOVf34HmOb+/R1g+Z/fAaZ9
/ft3gGk/3oP1/PkdYFrg378DTPvxDrDEz+8A0zb//TvANBbvANNYvANMY/EO
MI3FO8A0Fu8A01i8A0xj8Q4wjcU7wDQW7wDTWLwDTPvxDrDlz+8A01L+/h1g
2o93gLV+fgeYlvT9HWCtn98BpnV9fwd4/s/vANPyvr8DLPrzO8A0pb9/BxjN
e/7P7wDT8r6/A0z/+R1gmsnfvwNMY/EOMO3Hu69Ez0TPVCN6HmlEzyON6Hmk
ET2PNKLnn+0QPRM9U43oeaQRPY80oueRRvQ80oieRxrR80gjev553omeiZ6p
RvQ80oieRxrR80gjeh5pRM8jjeh5pBE9//xdRM9Ez9AO0TNsRM8jjeh5pBE9
jzSi55FG9DzSiJ5HGtHzSCN6HmlEzz/bIXr+r+n5VO8UtqyLV5EdtaemTz43
MOl/BlsUrBKLR/3/0C063vWFSS/5lDWH/xm+r7udb3CLHBjPguj9l7ROBiG8
f+pi9R7Ac6u8ZWBdNL6/+uao1P3toP8k94Q1HNxFCO9U3KiuX8ikT9Qydr6h
kIXwo9wKNseZTPqs1n25VaL4/vAlHcXWHeB7yyXi7G7p+aLfjVQ433gE4Ffr
1W2aCjwQHvCXqlk2wBcNOKfXb8X8dwfXc1D8R0w3nWp//DzCBXIOWiQOMulc
KVYiPWaRyE6JqjG3xlcmPejz6g6h+lCEn7ONfeEAvrcv3Enj8T0LZIcn1Dmi
H9i/y9h4K/Xt6f9H5+/NxgB8gotc3YYujAf63lan8E9/3PmrSR77h5jO229X
gvE4zfasbiwpxPp/ysV+oYhJ9+h7cWh9UjbCH7tt2Orzjkl/7cZ8U2Wlh/Ae
3vLllE4q5Yp27Z6Hv/ddmalWI7A/fqr59SAanq+0GAHOQjBfjHitDceS3RGu
oG6Rkg/sCDcW3YvuycA8y06X+9rHpPPVFbou2nsP4dUHxURmhjOBc3ptK1R5
A9lxz7+6o+shk54i4JodP/cc6q+6IqnjBOBZeZ/l88UOYQg30RUK5wA8R5zj
Zw4pxyA7h5ZankkeYtKHVJeZMosLEF70uaz5whMmfbIp72H7N1cQvtNvOCyp
lUkP8Miry9U/g/CPk4u1dgL7Lm/E5Osc8H3vFXZ5wnfA9/YVWY+rGcJ++DnX
GyFfgF+q4rrY+SoO2fFR7GDjAOOZwlgmNE8A96/aqswIAv2ntW4IDGDD35sf
eWh3IPje7Ev6XTH3dBGeqZalTc3XffHyWXdTTiL78sppBUoA32ia9WymXRDC
1748Zd4Hxl8hVrimMisW2TF8vadpMxhPdiVPcP5QLsInfx5i5Lcw6Ts6Lxpz
xvgj3E3K991GYN9BwtX1sEEssu/JGyFpBew0ifuxb1HCOomqmPYmDOikZF9x
zM5JWM83nfSGeIAdEXmz4WdtF5H9ORb38sqB/7Q66hKyt+42wr2mvEn9dIlJ
z/S/OTXhK/YPd99N4vS8yqSbhbd6G7zD9+QFpV4V3ALfK9XZJdxjEo3wSn/R
vnowTpXkb7E6B7F/sx1rdjCykUnvsq2V2xFyHeGfo2YKcNQy6apW62WNBKIR
rjrAMbUT2PFYd9N4otIhvF8nt7oyKf6tvAZLFTFvfZVrarcAPMVdJ5WRH4ns
lHUn7l8O5nehch3nCwk8L4FbO/NtgP0bH6fYpas6INz0hn/+a2AnPitxUpWV
L7Jj9dmQi/JvyTmP3U/14nnPt9jB0QJ4aOdQatbqxutl220hzffgd7d487z5
uCUf4TW8i3tPVzPp306OSyjdH4Hs7Jc+LZoO+i+mudP43PH8qr9/p3YAzO/t
j5OKg66FIZzDtzT7C+gf/KV+BeNqHLJ/yyHvzhTwXR/mWE6t88f/73BS9/7c
Y8VMuqPN9Dy5oLvIzgmewy1FcWB9+T6+dN8Or5c1snven6J0KNu3S1YkAeFb
OrZs3w32oy/rjx6S4s/B/rY3hLH0LZPu9eZVwJ2eBIRzDzdqDAD/1uRmMetB
4lJkR7wlu4f6/45PY2qu5rjiOEdFxdWdH+A8xuu614acRXYK3pvHSQKeT9qf
3+iYisfT+pb+XBCMxyft+OLGBV6ov/WL8vVJwM5zK+2Ob/vx/4lY1dClngI7
A8IDIuxb8O9mtNycIQD6N6eWvhibinkLPODfOgHwZv42669uLxzPGIqYLkwF
dsytLwuGd2J/aCTSUuEO+Pe6PGmueiJeL+4qF16Vgv4fx9nv/mZ6HftVszEG
KUD/y6cwdNjn4Tj2fnuVdLY3WNcJ45KMVuH/Zzlx9oM/9f8sbjzCtIIZOB4w
Tlr46hLQieL9ljtfXDKQHW/9+a2W70FccVfH+t0THOes0p4xKagf7FPGptoP
TPE4hfQa5lSCcU7mCllaswfrvMmE6+x7gK9MXbt2myL+XTOuO6UR4Hd9fCwl
yx4eQ/1PGzA9S8E4qzzKslaGH0P999vzqD+g9t+iJ1cdj2H/Uyx4t0k8h0nn
ffc0SkAWxxuMaM+lVLxhPO6C0nAA3jfnfz1pEwt0pVPUNb9L5gqys2lDhKFd
O1jvHLqzN3Xnov7vhSwXtgF/e3v94+RaD7yf7jrq9bIA2Ffo6kkT3o51deTs
uXxNoKvKIEawQSf+3nuXJezFwfcqObg81xPF8TD9y/HYRcCO7JvnyvOiLiL7
/Cv9X7EBnos5jDm3F2O/WsHtKL3jOpNetkjIeq0Bni/5/Rui/MB8HZyYmZ7Z
j/W8y99bI5ra73zyn15swv9/dOV9QSb1/0cF0ofqXmq7I/xyurbtTYCrbZm1
IY/jBLLzZ6Pg+YNUHpHqpma9A8e3wk1FXEKAT59c2WzpZOxPFLMda/mAnrNM
VIq/COG8I6jv6JKrlP/PqFr/5+pDyI6iQKgn5Z/9DMeu25SG9XNs+jSlTtDf
dt7bx+nheJ/ipj07PJ5a7xrrnLu9Mc9cugoSewHPtra1RqGpRQifvzPHXCsf
xJ+tZoG7pLMQnmj1dW8EiFc/WaZsE5fDcaDLyei/qDhQ+mrmkbOz8ffKps52
1ATf29zy9PWmLoxPPOCz4RH4Xd2Gr8PueUfwPjhjxosGSidtS+euEMa/G1zm
Oi8X/G6Pxt6O+2rFCBcuGLo9NRD44aZ3hWIzcVyUd25izUAF4DnZLzDROwr1
H/f6bgwX8OeyF+UFwtIwD7R9K9/qgPEUq+vzBbqcQfiTJhtlI8Dn2K3SuWzx
8TjuSv4gnAl0a7TmAP95uZsIVyrpK3csA/6nkVcjyxD77RvsQU0hHUz6Njcp
49lF2E++YIxpp/6f7s4q/rCXKp44nlkmGcEAPBwoGxSrC/bGfjJh8sowgKtI
yc1zKsfjOdX/ckcYGE9An3aIV/Jp1J+tar0LO+UHIpuL9mqG4328mdOpBfBQ
nhplNrCVHdkxBtkCtV9I8X59WTAV57N+SkWxi6l8Vo75WmMd1pueTczNz2D8
L8L3LIpKxPlU4ql1agwwHrWEvcJj/LHfCBqQtQlvY9I5DWsWupzH3+vtai6V
Cuy3qtWcHlyIv0t945JkKi/j32mkybsI79ftN1v0ksB8CQaV+01V8kc4Z6XU
dSo+2SDS2b92dSqyL3pPJJDzM5Pe4r0559MVnM8Oe/a5cqUAO04namOFsN8o
XrZJ/dItEGcu6eRz1MF6mNW2pp+Kn9XYvDaZWOK8iaGh1KMO+FQVPkG/p4H3
03H08B4F0F/20k2XWy3XED49VqRyRR2TrqHhpG04DuNPVKSDml6AeUzrYa/z
Oodw3+vVLfbA/j6F92VDm3EclXGJP5yKo3h9LSY/rjyB8KS7rn0WAJ+l7tRe
YovjvY0VnH41wM8szmxeAHDUv8taFuICcWWfsysOIjw6Tkyyl4rP3axPA/vI
ztlAR2j/daZeUkEJ1sPxqgN+7dT/sepFF4Px4/3OIxOO3ySmM/5myzUcV4RU
VVM8LAizfwL4RHYmvBaFfAYJXzWrtsbzHr5VoPkomPf13e0WR3RwXnPguTGc
F+XECKNQ2fPI/s3toTUVwP809ueqxAlh/8aW2qxMza+7UNVyoAdkx3/SGS9K
D+cNm2P4lHDc2+83DepqdX6jFdAnwnnc1kB93i2I6wA6R3bkuOQPUjqn289V
252B88HYNjnpQ4+YdOvpFwojE7HO7WM84HpJZvh0XDxkiOyLTbqU9pXKy7b1
9YL1iP2AYSFcj9cvxK/cpxmO7EhN++hIrWs2bY9ox3I8zpsSC3ZS/uF0weDK
+mBv1L83Zxz0J2IJY4QlVbFfOte8rv4Z4HNa1tC4OUU4bmm07Gyj/NXkyfNE
E+Ru4v3xxL4Kyu85d2gWA/+J7HTl6EH/+bbGdyXww3j/2lkD/fAr9rceKbo4
np9o3rCWG/TfFmzmID6zAOEhbglVlD+fr/dkK/D/yI7jx2/3Kf/f+0QwyCfv
COpvHsUB95GF63KswH6EcKcVC+B+dMW5ZZW5NK7DXD4aZU3ta6JrotjA/ojw
QiFfuD8O6gmGzpHZib9r7vSqQWD/m39/BNh/kf0ZGZxw//VmiH8C+zjqv1TM
Ae7jaWPbY/bswOORtV0wkYoHqnbtdXqljeOl8dYqMK546+v18FK/F+o/XtsJ
xidSDVOObyvGeuacWLucinNOn90TYSCK/fZX530wXhLwfMMAcRfCz3tFwLjr
sMONTBC/4fVoXCVKxW/mnTLRnTJYz6mh3VupeO+u+PZ7ycfw/6EzvkzdTMXJ
fnzZUiBuRHYUqs7CuDGh02AofBjvs00qf/rMAnzqa7QWzJDF8dV4xUgYf4af
LAlUP5eC7Guks6/wB347KbmM7nTsNsKrc3nrqTg2dPo7qYnyuD68v+zyBfon
Jv1d1l9BK8JxnPxt03QYD1vGipX6WZ1Cvyut4rVuBcDZT/1xxKYL6/yK0swG
Ku8uTbMLLHmI4+ry2iEYb6uHlDEDc/G+c5kZdWEDwAONagZB3I5wyZ3aMG7f
npebf+ow5kdeOnssA/DDmBo3A8T/CBex4Ybxv0BAxX7OSAdkp3748bNXwL6/
5r6OUlO8Tq/ZdMI8Qs/Y8xqnKo73tl9ffW4i6M8p0N8G8hFk/9rHuxOpfMSE
m03h9EGcF6QyDI8lAT5vPhjvMOiC6131bvptVF4TKOss2hqE689zJjS8rgL2
Zx6eNwHkRwh/Gjsf5kfa8qnsk2twvDf5ZoVXHcBdcutDtVdh/RxU+AbzrOba
1QIDG3F9TypDa9GabiZdfEtPO8jXEB51VWcRla9t3MO49dUU1zeiTs/dSuV3
DPs8A5An4jhqYjXME8epesTXFGIdSm1NFVUD49HULZAD+SbCX791hvnm/ucO
uxxjcR7EJ2nfdAbM1+ML/s/GpeL3GRrXlbyk8lYpnjjnew+yMf/07iUy70Ac
2KPZNnYLrsMrVTyF+W9JnLJ9xSMc19VMEK4JBbiZqu+7Fwvwer9fVQfz68b4
nL6hdE9kh151uyaFqpNEb2oCeTrC3wb11lJ5+sa1pVusBc4iOw2t16KUwXdd
bzgaAPJ9hD+f4QDz/U6/1PF/Cuhj+7OP8lN1uTPnWo/kuOLxG/B6wrqB0gKP
riOCeN9v1xvHOQTsPLKP/3qnB+d3D/TjYF3idW3NZUn+HITnFBpmUnUMznI+
Kb9NOJ6x7YmLoeKZAbVOL1kR/F2mxcqwHuKcoO5TwYf1Nt84MC8bzOPJ1HzT
Yjtc994w1hPWVQySuR0CwtKR/cUNn01nfmTSZRo3ya8Muov3d5ldDVR95qlz
svpzfzy/rvH1QlQ9x+s2j0HwNbxPBUZmwrpQHzfvlNL9EQg3YqTB+pLiwwrF
12o4fuOQSljiAXCpy+Zln7bk4/nq+rObqlMV2eRFsh/Ow3yueGiz+yWIqw/5
LtTqxvWosnRlWO9KMNwb9m4XPoe6dyDbsZqqe3vFG1Va4fMCE7YdsJ520cW8
5YUErnPO8r0K63J2rodq7szE/B8bkFjcCvpvX5M+hpGP49vNH0pgfS+S7aXt
WAELhC/d/YprAPSPNfLXfKCI/WHdNUVYJxzDfbqoMxrrxCK18msX0Mm+Mz1f
jARw/Gk7r4GXqkMqZ1wu23zwKsI3+T61oeqZTxoaQntMcBybfG0SrH/2lmdd
DdXDehBOW2jtB/RwaW9znv477Cf1OYdhHTWpeqbCmgDsB0pLZ1VYgP5623OP
J3zF+6nDtFXsVD1W8Nktgb11eN+pWzM3k6rfHrpf5WA+CedZUc9Xwjrw2P0B
cw8b4PrnxKpMWE9uX/fUuGAI10ksBEvTqLr0GF1m/7R5OG9tWjl59SsQ59wW
F7etyMLzNZQZBevbDwIi02WMLDH/2dOXUnm308DdL3dSTmLevqbD+nn2Kra5
gWxYh67eurAOb1odmPf2Fa4/eHcLj6Xq+R8X1+scice6cpeclkX5+Wlq+1pr
hvD6Yt/XCM8FZvvf0zMWwDwrW6UdeUHNb5CTX54+zpuG56XCcwdeX2P7nmIc
17HzDL+izi8iBrc6LnHAOt+mzA7PQdo7XBTj5+Lxsw3lw3MTT/tm/QXjcV5v
HCETKgrwvIJhmfmVNxBud/aLCXX+cvVKxSeJvfeQnUcnssSp85o7zqZ1bsm4
njP7D2147jN+RYnW7nl4vx67cz88P2rnZC7YkIT9fPf4AgPqHKpjaKJ3kzze
7/xdODqp8yyXqkGbrLnaCH9MXzBE+dXb5ask095i/RSad8HzMmb1jKXz60NR
f/UNofDcTVO74IjdcTye3bUP4PmdQZZKS3OBB+rvuXIlPAc02XD0wpNwPC+n
t5w6XAbsJF6TbKsWxXHXsKUkPGe8dZ3z9nhurP/8Iyaa1Hklo2WX2/qTeP32
S0+B556GNjsyV4nh/EXvTQk8P2XkSsRnXcTrl7bHv5w6b3WzsvkExoPwOD0P
OJ63SwVtc+dqIzwsVhTyM+cje6TIeJwvDJ0MhvM7obbQAegN9RcVugj19tDk
caVjPI5P/JdOhrrlkXZNX2ZkifAF5vxwvWheld4B1h2y8/n8NCVq3dkMeusq
BWB/wth6CfoHH62CC8DPoP6dfDLQzyTpnc4C/g3hXDeroX/jZyt7zyGA62Nn
DjVDP8kf+KSqdCaO67iWzIL+1r5rWw3w5zjei8qC/vxDzG4VsC8g+5Vrb9tS
+0Lc8IBlixrOr12XfIP7i7iv8YlTYenIzpYVd82o/S7cTfcA2DdR/ztWMXDf
vJK6IiNwEx5P9vpguP+OUfBJB/s76q9kMQnu7w8MH4+XEtBHeKbkMRgnNLpP
qtorgOseQtlOMN7QXnLNBsQtqL+QawmMW8alyn0E8Q9e1zVzYPyTzMVpDuIo
1P9dmKAkFUc5/KmleyQW6z9xMm8zFY/p+rmkgLgO2ZFdlATjOsl5O+L7N+J1
Kvp+y2IqnvTck/+GpwbnX8kbW2FcOm8ub0lzEPZ79gGdML7N5Z9eAOJkZOfN
ww5HKk6uKTn7fIIqXr+GluthvH2spCmDPRLvpx8E62Dc3qOr7BxwGMeTUyOV
Yfzvv+jRE5BH4PUYGQPziFVcczlAPoL623SLwXxkhcL0FH+rUwiPrjkM85fg
nO3eIA9Cdvo89sM86ONt5na1cykIb3nSB/Mpnev630BehuyYf5SHeZn3/qHO
K8fwOcgy9Qkwv/tUJBE6T2YnwmdYT4P5r/KJugcXdbHf3icprkHl7z0rv+hI
quJ1mmKpAusJvSo6HYmHDFH/mtiR+sb+2m/hVhnYbwvvTZGh6iQachZOIbKY
t5bL02qpek78sSLtamus5zknRWBdaKyuLlWPwnHm93rUGOmcz7kVB5GdoxdE
YF1LMPoVVU/D4/leT9ttcfG1wThcp+K1dgqm6nJu4n7udzRw/PxHeAus74lW
hvGsXZ2K7HTUNMJ6Y4bQHlneRXic8mFMWLec3pY23e08jucdJdbB+md33vsc
jXV4/EGnEmF9tc5zm8U5Q3bsZ6aP1GnLErqCfJJx3meybw6s9y4+zf35pQq2
31MsAevJgrpts7IMcRzOJ/EF1qVFHJnZY+JxvUhxr7MIVd8Wvi0jEpaGdSI2
IA3r5HMKXS8sF8b1E61btkJUfV6l/+X9TV14fW14Fg7r/B1mmQ2CcjhuPF5z
Hp4XKFvoVIWm4rrrsuonZtS5g4fLAE96OF5fGs9fwvMLPtemR3Kr8Tm1+fJI
eA7yZ4vJUplkfD+hp3UmPE85IDSXO48D10XnNs2H5zJem9ODkpvw+Vcp/TI8
3wmWMQlda4DzX8+AhfCcaPHe17MEo/D5/v2yba+p86ZBqbSzBp2YH8fpYvDc
SuSlwJd6DxxXNE3YDc+/yoUeWKsm4nX9id4CzytnqWqIDe/H60V6nhw8P53+
KEPgeuJS1N+W7TI8z90VK++QdhV/b3a36F3qPHpQ9sT7ae5Yb63tn+C5dsyl
h0GnerGuBteawvN0wdfsMhmqWP8OfD7wXD7NIHPORCV83jRbog3eB+jY5pdr
FoLPVRVW3phF3SuIMt7L/6wNn8cN+1lfpe4/rHtwpk9HCY9nyF4I3qMQE1Jw
mRSD8wVJhjG8jzFZ/XLuTDs8zvdDQfC+x/0vS7qS7+mi/oYXM+G9kc276gWF
BXBcuqtoPrx/cnIj//U6B/z+4UyXK/B+y4rozbL2b/B5BHt3ejh1T2bzud20
L8q4blCmUwvv24jl5j6L6sHnhkukPsP7Pzw8dnFBNPxdPbUS8B7R9ssyOzus
9FD/NRcfwPtI0x4pMJpKCjHPquljqHtNSndU5Td0YZ2HuD+E96Pu550qvX8P
r5ehb67wntVCsfhEphmuk5up8sD7WtuuuWrVb8X3ChghTfDeV7NFyNRCPXy/
Qr03Et4fa6DvcLqhgM/XnnGvgvfQ9Hp17Z5H4++a0N8G77MttMoQ5n+Gdd4m
+Rnei2P1vqX2L+9b8n5/37L0l/ct0/+T9y1ZvWOZ8Ms7liOtl+U7ll9/ecdS
9Ps7ltm/vFd54r/4XuWzX96rvPL9vcrfxcPv+t7f9V2jHf9oxzna8bD6XVb2
WdkZ7TuuROdJ/yP8/Lvp/3d91z+9LkY7ntGuF1Z2/lXraNEv7yFP+E/eQybr
63/G//y7rbvf9V3/bvvm79ofWa0jVu9+s1rvo12PrOyzWl+j9TO/yz+Mdpys
9P+7/OQ/7fd+1/eyWi//9H7xr9oX/mneWK3337VO/93W4//WdUfW1wgP/yr/
M9p88Hftj/+qdfG/Vf9E5/9/nf8HF0WsCg==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{359.7853870049579, 335.00825321829524`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {-0.0037521581720689106`, 0.002339355425015288}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.004233783041180748, -3.302086766226635, 0.7390568742607193},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6756903824910107`*^9, 3.675690454364356*^9}, {
   3.675690490811757*^9, 3.675690541346932*^9}, {3.675690615132568*^9, 
   3.675690622253433*^9}, 3.675690724947997*^9, {3.675693972327478*^9, 
   3.675694044390511*^9}, 3.6756940911577663`*^9, {3.6756941694489183`*^9, 
   3.675694182723806*^9}, {3.675694216820982*^9, 3.6756942281170683`*^9}, 
   3.675694278543116*^9, 3.675694346794716*^9, 3.6756943935923758`*^9, {
   3.675694449410016*^9, 3.675694457270392*^9}, {3.675694502485877*^9, 
   3.675694518922412*^9}, 
   3.675695406332787*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvWV4HNfSNToWzYxGzNKI0ZYlW8zMZMmWQbZsy5bZlpmZmZI4zHHI4RNm
5jjMzMnJeQ8zn3fdWtXdsqTj77n35/3x6Xmk1vRA765dsFZV7T0T+tcvWbii
f/3S+f2JzWv7Vy9ZOn9dYtOqtXLKc5TNNmqJ/HYl2vg/bDbrj/4s5R/zwf/9
///+/3/////1/5F68MZf/vIX/PnPf4b187//+782T33Oc+hztgPmuT/+8Y/4
+9//ro88zM+Q9wy+//e//z3++c9/2o6d57nf/e53+Pe//23LMIYQoQc/PPPM
Mzh69CgOHz6M1157Df/6179w0UUX4fvvv9e3PfXUU0Of36dv88d//vMf3Hnn
nTh+/Lg+/cUXX+jLf/rpJ1x44YX45S9/iauuukqfP3HiBN555x3zLlx46aWX
cNdddw2OTJ7DNddcg7/+9a+44oor9PUcgtyNLd0YbbgeAvDzn/8c+/bt0+M3
33yD/fv341e/+hX+53/+B//4xz/w448/6vMcxtdff63P/+Y3v9lrvv3dd9/V
0VKOr7/+uo6ONywy04949NFHccEFF+jzn3zyCXbu3Mn/95sDf/zxx3H11VcP
DpwD5tXvv/9+3HDDDTpd99xzD2666abhA/fB22+/jYsvvnjwrceOHcOHH37o
YT795ptv4pJLLhl8moP8+OOP95pPP/DAA4MS421yXDKf1rt5XZ62fvbs2YNP
P/10v6k1TzzxBK699lrzkfGWU6dOqdz58+2336qgRFvSho/6+eefx5VXXjn4
wZyVV1991brus88+q5Ns/XDiz549a436tttuU9FYo967dy++++47692fffaZ
Pv2LX/wCb7zxBrZu3Yo//OEP5xu18Ra7ah3n7IMPPtBPpZJyuv/2t7/ZRgz9
5ZdfHibRkydP4q233rIu/uKLL+Kyyy4bfNrUUWvoVG3OpDX03bt3c5yWzclN
Ys2aNSpFzqTMrs2wDC+dDKrh008/zfF7mkOnKXLo77//vn6qCEKHLuo3cugU
zMGDB1Uzae2Um9ypNXQq5qFDh2jMvHF9+ocffrCG/txzz+Hyyy/Xi9BMOHR5
mYc5PEqbtiyS5gX2m6fFSHDkyBFVndOnT3uZN3rdddfhkUce0Q+TiacCjNRs
DkPeoXpCgd96662cJ48hT9M2+DQN4MyZM3x6r3kBmhDVRkxGlf7JJ58c1FFL
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
Xr9HMdjXk9UJPzP9RnVkbZzlLeuLskYYP7NwTJfzi6AN469WzR+TGImdlaM0
/b1cjJhRnGlzLttlA8xhcQI09gNyvleOXN8wS1uyAzWCW9S632whZc6MNHpZ
bQzSo/yEp3rh9SVGRL+2J1SpMv+n8RNzL25MVeO/z6TUz7PpxUyXXyevJz6/
c1agRPA0PLvAhbcEyDJOMXfGJWik1JskhhKfk04zmTW3YQzumOmPjFCbrvnn
uBnZp8ovFxvu3rrB1B4/3HnXPbo5IXfEaxgXjc6xRit3ZU4qOnMjMKU4RjeV
NYG6YVQ5urXFxq27UBLrgTeXcmmF0XbKsH5cwryB3bmTRpCw/3QN31+vdSiF
YDcc9zF6TQxdtxUTp8BcF4t37C5n0xq3WWChn9j5IfGdt0516uZ9dcVjMa8i
WsJrMnqLIzCrOBTTC0N1C4zuvFD05InC50ZhstxOsJ8Du/bsw0UXX4oLTl2C
kxddgksvvxKnLr7UAycuusSWhZOnLsWm7XsQH+LAvdO9cbI7GjcJ5rp+Rjiu
mBaF28UPXTCFKbkw9U+XTjd26OCyjFeWCFqR2Xq0z467pttxQ7ePfl0qtwCe
VJZqFAK4n2OdsfydSZVpxdEa5Vn66pTIX10wGnOLAjRFx/NTiyR4ym1ZfmJJ
oZemMletWc+lIr7mpP37P/9BW2eXsqSjk2I1U9dTnYGj4iZu7fHHBkEHD/X6
IDvMAzefucOY6wTcfuYW5I5OQGl2ktEJlx2vi5ZDnTb1XpOEu80oiVLMsqzc
D7UyOiYMONpuwVPNeQm64HRODhto49CeE3Fe79CQwyRegNmkE8fEvXgm8RXC
PehVOsaHGBBBPM1oATah5zYl8aA7sIWp06gxa3XD9qdJDxiyiD92yJYS9sFc
vqIEbsYraDU2Sr9R1HIU9ALM03M/3a1bt6o3GOEouJkiU/D0IYajqNF0x5j0
FP3eaXa/EB0cbbJrUvpYs486jANN3EY7FnsbXMax0dgkjK+nw6CDIR0YSgP4
rbo9JW7E+vObdu3iCIyFTpvb45XA01E8PMdfwlW8UIBk3DqTy90iZc6j1THc
NztAEcQzQgHoNFa3JOLKqRHa//rCQhfmCw24qy9E1z3cSxogxP2tAZdaIZ3G
hdPiBJg7NXM7jXU1kwJ0CyOdkC/hd+FMfhWDt6l2u/fshVsI8ZSx3qgTCjAp
0yD0bdkhaM51615yxLRKB667wSCa+fjwo4+xa+9B5GRlojHZU5clWv7i9jmR
YkzxAiKMCtsby/21he2B/lDlz28KNTgmro25uA9W+imAoF9hfn6V0IcXlgar
v2Ce4OxAgDYH8PPVKHt8cLQ9EE0lY5TQsuTNHpdFxeLiBIqT57flEzQIeMiN
0a1PKuJH6TcWZInLKxRwUxMv/7t9kRnty/qCqHFbis2WrRtTHm700tnZJrPD
jVxZ0Xx+kZ82Nyi4mJAkPi4AP2xwajnjqulReHfALi7ernjwFvFpF03w02+2
vLjDGwebnVrimFXOPQp8dI8CbvfDpWlMqXCbFgKyPqE3ulFbsa86DYKO7qIY
zCwO18DObkJ2yvCLf7Myx2DD5q1c/W8Sfz/lE7lcLdEdhv2dbt1N7NSkMGxv
c+sS9vXNsTq+CUlsxd/oY0bLiy44jpz02EHvYZT+QhDhsmnqYm2VH+oKM7Ts
sLHCE5OLxAuIRiwrYs7PB3WCNabmBKBPvEfPeIfgh1RMzrYPtvJ1Zgfq/xPG
BWmej7kClvyYL2C5n1hjSpZTcwfML7DHty3dE74OH5Rye6vshCH9vPGDbXwj
tzQqN7c0KjO/XZGP2chjfROnLg4eHYBimX6udPj1b35js/wHiTBzLGQZ1leE
jvAfXBLG0h43eQo0RVdRVY3Z4qu5LdmCyhgDXIjP4Ia4/eorhMJXRWNXg78A
Cbce58rz7LbVzjqBnPQxTBgyGcj8+Nr6CIxNFu+YMAqvmEk/LvRlVup5s+h2
4eRInOiOUsLKnPzypmR9DdnFSTnP/nl23902MwjL5HkykLOL7TgyKUagcqIy
jTdMpnF9L9e4O/DAvBDMqR+t2XQW6sZHyzRw7Vdlou6YzvTBxJJErc2/+87b
NusLUGtra5EXIZB0rEzruFiFibXCHbvH+kiwCEJnnkTt4jitACfEuvHNN9+a
JdQl2uX02utv6J7W8eLR24Wq3CpQmDslknrQk9zTH449ExMHPQmzgWzCu39e
qHgNYVbiVWiRlwpF+cjcKpgNe1wntnlCsq54/tpslz82JV4z76xbsBN5i1jI
wY4wHBNvwq/2ZpWL+2iwW5Wru2aLRXblR6O3IFA9yYwcX4HIMbpCkpuzMQXO
zahvm+qDNc3x4qeTVe7scH52nlP8tzC4+Q7snuDWZO1RmZcbe8O0ynjjzAhc
2ROtTT8/rrfr/c5tGI1Lp8UIPAnFHnnP0oYk9AlNmlKRrusl+CVPJ1qNZgB6
k8mlCdoMwJ06WRGcURSmHTrNBUm6W+d88YithUnaq0BvsrKEnjJOm4GYHqBH
4VL+/hybNibGRgSjb+48vHr2dfz9H/8wpilA2Uu6sJfDEhr3dcXhcFe07qL8
0CzBEI2JuL/Xgc0tbpwRRrNBQmltbR2/eNbLjLIMzr3TulEwJl4djBYWBKLo
Ejs/F1ZWBWKXSH1aSQwmiB/nyAZK7AJTMrSYwJri1PwQ1OclaT1xZjaJSjTa
hMhOzxqljqV+SIKSWYua3CRMEMJLDWwxMxfTtYMwxkhQZpsJSonQaVEuHY/2
DY8O08wFCcm5L1QIGOwp4nohxSZZscN2Prd22tZNZzNcGC2Rt6S0lI5laPbM
2vJyhG9h3YG+hUtOA02pXXbl1UgWKsnvXNf2PfEtc810JH0Ksxk8shlgXqVb
j3wdCwyM9ywqkMgQk3BjNaODNxQh/g6dcxbsX1lIXxKFGwQaG+ttnLptJeuA
9DOLhMRoFkP8ytOiz/Q1984OUGJD7ELSw/8fnCPuvy5dU5Rvi2+5sidKbYxN
AO8s98Vi+Z+Nbd+sc+LWviiEh4Uq0mOVm2tLe8S3EJs05Qkemt/Dlc3W9+ly
X72kODeaJGi1ZgWjMTtSXI0DdeJiJmd6a9NYS26ssnKaRLEEwJmz+4zCbDi/
rFw38qyqrsXYGKd+sdw9M3yMbZBXGy28X60z0pM7dSWPkbLkCoDNHSm4ay47
Ag1+M9CcJnglQVOfTttUvC2Yhqt8TkyJ08/52vROTHMemJSgK4FY47ulNxR7
J8RoWnFaZRqKCnJ1mRw3ah0odemqw/4if61RzMp3oT1PAuF4l8LwCRI8+3OM
riN2fN06xUc3RCBqfGmBzEq/U2fm2X47bpweJNeJxSNz/bBzgmAXmY0tHYl4
SjDLDsEu7HK8RLwkx1xXmqM9Emtbk7CvUyJXVxiu6Xbhii6H5rdIdHZJlPp/
2HoLOLnv61p8lmZmZ5Z5Z1nLzMzMzLwrLYgZLIslS2bLMsokW7bMliFmjGN2
4qRN4lDzb0Nt074mfe17bZP3mrz7v+f8frOW1frzUWYWpOzO/H7ne8695557
o3IheA82VIdLV7meNPQeeJGfDKt0gJTYXG5lMQTlWaDN1gpj5GCbPqIAuVQZ
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
+/h/H//v4/8fHtsm/B8fYuzQ\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{"x", "+", "3"}]}], "]"}], "+", 
    RowBox[{"Function", "[", 
     RowBox[{"y", ",", 
      RowBox[{"y", "^", "2"}]}], "]"}]}], ")"}], "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.6756964936067057`*^9, 3.67569650783253*^9}, {
  3.675696613322381*^9, 3.675696614894848*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{"x", "+", "3"}]}], "]"}], "+", 
    RowBox[{"Function", "[", 
     RowBox[{"y", ",", 
      SuperscriptBox["y", "2"]}], "]"}]}], ")"}], "[", "3", "]"}]], "Output",
 CellChangeTimes->{{3.6756965011785517`*^9, 3.6756965081126213`*^9}}]
}, Open  ]],

Cell[BoxData["Function"], "Input",
 CellChangeTimes->{{3.675696618199098*^9, 3.675696619885532*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.6366197753212547`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", "#", "]"}]}], "-", 
     RowBox[{"0.3072738740770674`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", "#", "]"}]}], "+", 
     RowBox[{"0.01509225405001055`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", "#", "]"}]}], "-", 
     RowBox[{"0.005856092181884723`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", "#", "]"}]}], "+", 
     RowBox[{"0.005856092181884723`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "[", "#", "]"}]}], "+", 
     RowBox[{"0.0005097638184467165`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", "#", "]"}]}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{"0.0005097638184467165`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}]}], "]"}], " ", "[", "#", "]"}]}]}], 
    ")"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.675696690159605*^9, 3.6756967471149483`*^9}, {
  3.675697589880842*^9, 3.675697598480467*^9}, {3.6756978489421997`*^9, 
  3.6756979085160027`*^9}, {3.675697945332539*^9, 3.675697947843052*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"0.6366197753212547`", " ", 
    RowBox[{
     RowBox[{"Vk", "[", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", "#1", "]"}]}], "-", 
   RowBox[{"0.3072738740770674`", " ", 
    RowBox[{
     RowBox[{"Vk", "[", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", "#1", "]"}]}], "+", 
   RowBox[{"0.01509225405001055`", " ", 
    RowBox[{
     RowBox[{"Vk", "[", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", "#1", "]"}]}], "-", 
   RowBox[{"0.005856092181884723`", " ", 
    RowBox[{
     RowBox[{"Vk", "[", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", "#1", "]"}]}], "+", 
   RowBox[{"0.005856092181884723`", " ", 
    RowBox[{
     RowBox[{"Vk", "[", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "[", "#1", "]"}]}], "+", 
   RowBox[{"0.0005097638184467165`", " ", 
    RowBox[{
     RowBox[{"Vk", "[", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", "#1", "]"}]}], "+", 
   RowBox[{"0.0005097638184467165`", " ", 
    RowBox[{
     RowBox[{"Vk", "[", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "[", "#1", "]"}]}]}], 
  "&"}]], "Output",
 CellChangeTimes->{{3.6756967244675083`*^9, 3.6756967473927917`*^9}, {
   3.675697591700658*^9, 3.675697594571313*^9}, {3.6756978776882963`*^9, 
   3.675697909016943*^9}, 3.67569794826644*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"f", "[", 
   RowBox[{"{", 
    RowBox[{".3", ",", ".3"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.675697951087057*^9, 3.675697955150663*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000333`", ",", "0.8096189320550957`"}], "}"}]], "Output",
 CellChangeTimes->{3.675697955694326*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"0.6366197753212547`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "-", 
     RowBox[{"0.3072738740770674`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "+", 
     RowBox[{"0.01509225405001055`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "-", 
     RowBox[{"0.005856092181884723`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "+", 
     RowBox[{"0.005856092181884723`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "+", 
     RowBox[{"0.0005097638184467165`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "+", 
     RowBox[{"0.0005097638184467165`", " ", 
      RowBox[{
       RowBox[{"Vk", "[", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}]}], "/.", 
    RowBox[{"x", "\[Rule]", ".3"}]}], "/.", 
   RowBox[{"y", "\[Rule]", ".3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675697626064622*^9, 3.6756976357862186`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000646`", ",", "0.8096189320550955`"}], "}"}]], "Output",
 CellChangeTimes->{{3.675697632621472*^9, 3.675697636095299*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"reconstructk", "[", 
     RowBox[{"3", ",", "#", ",", 
      RowBox[{"{", 
       RowBox[{".3", ",", ".3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "&"}], "@", "coeffs"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6756976492135477`*^9, 3.675697657448777*^9}, {
  3.675697741535534*^9, 3.675697743765133*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.006579`", ",", "0.8096527074042017`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.675697660129004*^9, {3.6756977394891453`*^9, 3.675697744001471*^9}}]
}, Open  ]]
},
WindowSize->{808, 651},
WindowMargins->{{12, Automatic}, {Automatic, 24}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 25, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 847, 24, 52, "Input",
 InitializationCell->True],
Cell[1408, 46, 12494, 395, 844, "Input",
 InitializationCell->True],
Cell[13905, 443, 343, 9, 28, "Input",
 InitializationCell->True],
Cell[14251, 454, 925, 27, 52, "Input",
 InitializationCell->True],
Cell[15179, 483, 1409, 37, 63, "Input"],
Cell[16591, 522, 6076, 177, 227, "Input"],
Cell[CellGroupData[{
Cell[22692, 703, 1822, 50, 80, "Input"],
Cell[24517, 755, 486, 8, 28, "Output"],
Cell[25006, 765, 486, 8, 35, "Output"]
}, Open  ]],
Cell[25507, 776, 10181, 238, 814, "Input"],
Cell[35691, 1016, 1462, 44, 63, "Input"],
Cell[37156, 1062, 11593, 261, 675, "Input"],
Cell[CellGroupData[{
Cell[48774, 1327, 252, 7, 28, "Input"],
Cell[49029, 1336, 255, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49321, 1348, 429, 9, 28, "Input"],
Cell[49753, 1359, 574, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50364, 1372, 1564, 33, 46, "Input"],
Cell[51931, 1407, 76909, 1260, 257, "Output"]
}, Open  ]],
Cell[128855, 2670, 237, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[129117, 2679, 442, 12, 28, "Input"],
Cell[129562, 2693, 9750, 204, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139349, 2902, 2404, 42, 216, "Input"],
Cell[141756, 2946, 690, 12, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142483, 2963, 3715, 102, 148, "Input"],
Cell[146201, 3067, 168696, 2745, 350, 86801, 1402, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314934, 5817, 397, 11, 28, "Input"],
Cell[315334, 5830, 353, 10, 35, "Output"]
}, Open  ]],
Cell[315702, 5843, 100, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[315827, 5848, 2826, 79, 148, "Input"],
Cell[318656, 5929, 2586, 76, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321279, 6010, 204, 5, 28, "Input"],
Cell[321486, 6017, 141, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321664, 6025, 3118, 91, 148, "Input"],
Cell[324785, 6118, 165, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324987, 6126, 425, 12, 28, "Input"],
Cell[325415, 6140, 192, 4, 28, "Output"]
}, Open  ]]
}
]
*)

