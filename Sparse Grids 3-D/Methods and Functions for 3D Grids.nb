(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    469073,       9136]
NotebookOptionsPosition[    466304,       9043]
NotebookOutlinePosition[    466661,       9059]
CellTagsIndexPosition[    466618,       9056]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Standard Definitions", "Subsection",
 CellChangeTimes->{{3.673277052290266*^9, 3.6732770726158047`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    RowBox[{"1", "-", 
     RowBox[{"Abs", "[", "x", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"l_Integer", ",", "i_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"l", "\[Equal]", 
      RowBox[{"-", "1"}]}], ",", "1", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l", "\[Equal]", "0"}], ",", "#", ",", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{
         SuperscriptBox["2", "l"], 
         RowBox[{"(", 
          RowBox[{"#", "-", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"-", "l"}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "i"}], "-", "1"}], ")"}]}]}], ")"}]}], "]"}]}], 
      "]"}]}], "]"}], "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"lx_", ",", "ly_", ",", "i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"lx", ",", "i"}], "]"}], "[", "#1", "]"}], 
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"ly", ",", "j"}], "]"}], "[", "#2", "]"}]}], 
   "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"l_List", ",", "i_List"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Product", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"[", "d", "]"}], "]"}], ",", 
        RowBox[{"i", "[", 
         RowBox[{"[", "d", "]"}], "]"}]}], "]"}], "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", "d", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", 
       RowBox[{"Length", "[", "l", "]"}]}], "}"}]}], "]"}], "&"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"l_", ",", "i_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{
     SuperscriptBox["2", "l"], 
     RowBox[{"(", 
      RowBox[{"#1", "-", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"-", "l"}]], "i"}]}], ")"}]}], "]"}], "&"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"lx_", ",", "ly_", ",", "i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{
      SuperscriptBox["2", "lx"], 
      RowBox[{"(", 
       RowBox[{"#1", "-", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"-", "lx"}]], "i"}]}], ")"}]}], "]"}], 
    RowBox[{"\[Phi]", "[", 
     RowBox[{
      SuperscriptBox["2", "ly"], 
      RowBox[{"(", 
       RowBox[{"#2", "-", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"-", "ly"}]], "j"}]}], ")"}]}], "]"}]}], 
   "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"l_List", ",", "i_List"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"l", "[", 
          RowBox[{"[", "d", "]"}], "]"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "d", "]"}], "]"}], "-", 
          RowBox[{
           SuperscriptBox["2", 
            RowBox[{"-", 
             RowBox[{"l", "[", 
              RowBox[{"[", "d", "]"}], "]"}]}]], 
           RowBox[{"i", "[", 
            RowBox[{"[", "d", "]"}], "]"}]}]}], ")"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"d", ",", "1", ",", 
        RowBox[{"Length", "[", "l", "]"}]}], "}"}]}], "]"}], "&"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"proj", "[", 
    RowBox[{"f_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", "x", "}"}]}], "]"}], "]"}], "&"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ceil", "[", 
   RowBox[{"x_Integer", ",", "l_Integer"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[GreaterEqual]", "1"}], ",", 
    SuperscriptBox["2", 
     RowBox[{"l", "-", "1"}]], ",", 
    RowBox[{"1", "+", 
     RowBox[{"Floor", "[", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"l", "-", "1"}]], "x"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ceil", "[", 
   RowBox[{"x_List", ",", "l_List"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "\[GreaterEqual]", "1"}], ",", 
      SuperscriptBox["2", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", "1"}]], ",", 
      RowBox[{"1", "+", 
       RowBox[{"Floor", "[", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{
           RowBox[{"l", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", "1"}]], 
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"switch", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[GreaterEqual]", "1"}], ",", "x", ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"switch2", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[Equal]", 
     RowBox[{"-", "1"}]}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[Equal]", "0"}], ",", "1", ",", 
      SuperscriptBox["2", 
       RowBox[{"-", "x"}]]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"switch3", "[", 
    RowBox[{"x_", ",", "i_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "\[LessEqual]", "0"}], ",", "1", ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"i", "+", "1"}]], 
      SuperscriptBox["2", 
       RowBox[{"-", "x"}]]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"area", "[", "kx_", "]"}], ":=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"kx", "\[Equal]", 
      RowBox[{"-", "1"}]}], ",", "1", ",", 
     RowBox[{"kx", "\[Equal]", "0"}], ",", 
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{"kx", ">", "0"}], ",", 
     SuperscriptBox["2", 
      RowBox[{"-", "kx"}]]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"column2", "[", 
   RowBox[{"diag_", ",", "row_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"diag", "<", "1"}], ",", "diag", ",", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"row", "<", "1"}], ",", "diag", ",", 
      RowBox[{"diag", "-", "row", "+", "1"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"column1", "[", 
    RowBox[{"diag_", ",", "row_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"diag", "\[Equal]", "row"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"column2", "[", 
      RowBox[{"diag", ",", "row"}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getrow", "[", 
   RowBox[{"perp_", ",", "diag_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"diag", "\[Equal]", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"diag", "\[Equal]", "0"}], ",", 
    RowBox[{"Min", "[", 
     RowBox[{"perp", ",", "0"}], "]"}], ",", 
    RowBox[{"perp", "\[LessEqual]", "diag"}], ",", "perp", ",", "True", ",", 
    "diag"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getcol", "[", 
    RowBox[{"perp_", ",", "diag_"}], "]"}], ":=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"diag", "\[Equal]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"diag", "\[Equal]", "0"}], ",", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"diag", "-", "perp"}], ",", "0"}], "]"}], ",", 
     RowBox[{"perp", ">", " ", "0"}], ",", 
     RowBox[{"diag", "-", "perp"}], ",", "True", ",", "diag"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"endperp", "[", "n_", "]"}], ":=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"n", "\[Equal]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"n", "\[Equal]", "0"}], ",", "1", ",", "True", ",", 
     RowBox[{"n", "+", "1"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Phi]", "[", "x_", "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ">", "1"}], ",", "0", ",", 
    "\[IndentingNewLine]", "\t\t\t", 
    RowBox[{"x", "\[Equal]", "1"}], " ", ",", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}], ",", "\[IndentingNewLine]", "\t\t\t", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"1", "/", "2"}], ",", "\[IndentingNewLine]", "\t\t\t", 
    RowBox[{"x", "\[Equal]", "0"}], ",", "0", ",", "\[IndentingNewLine]", 
    "\t\t\t", 
    RowBox[{"x", ">", "0"}], ",", 
    RowBox[{"-", "1"}], ",", "\[IndentingNewLine]", "\t\t\t", "True", ",", 
    "1"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Don", "'"}], "t", " ", "think", " ", "I", " ", "need", " ", 
    "this"}], "*)"}]}]}], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.6744811910313263`*^9, 3.674481194403453*^9}, {
   3.6744812376085663`*^9, 3.674481250630253*^9}, {3.674481287478826*^9, 
   3.674481397496801*^9}, {3.674481428875256*^9, 3.67448150801718*^9}, {
   3.67448167340905*^9, 3.674481675421351*^9}, {3.674481730384124*^9, 
   3.6744817373030787`*^9}, {3.674481790136471*^9, 3.674481791034795*^9}, {
   3.674484274994933*^9, 3.67448427677055*^9}, {3.674484437553482*^9, 
   3.674484437988184*^9}, {3.6744844734702044`*^9, 3.674484485512768*^9}, {
   3.674484559759901*^9, 3.674484561696947*^9}, 3.674484594091449*^9, {
   3.674484679915069*^9, 3.6744846812889137`*^9}, {3.674484736466405*^9, 
   3.6744847768624783`*^9}, {3.6744848709161177`*^9, 
   3.6744848731735783`*^9}, {3.674486262874626*^9, 3.674486299690905*^9}, {
   3.6744863501670237`*^9, 3.674486351045779*^9}, {3.6744866023345623`*^9, 
   3.674486632892457*^9}, {3.674487560511071*^9, 3.6744875793767223`*^9}, {
   3.6747523971858273`*^9, 3.6747523977206097`*^9}, {3.674769687662139*^9, 
   3.674769688227778*^9}, {3.674783090964974*^9, 3.674783093116194*^9}, {
   3.674840811053302*^9, 3.674840843477468*^9}, {3.6748410045042458`*^9, 
   3.674841015073327*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Standard Basis", "Subsection",
 CellChangeTimes->{{3.673277052290266*^9, 3.673277056255988*^9}, {
   3.673367982176783*^9, 3.6733679845358677`*^9}, 3.673643134677516*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"standardCoefficients2D", "[", 
    RowBox[{"f_", ",", "lx_", ",", "ly_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"-", "lx"}]], " ", "i"}], ",", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"-", "ly"}]], " ", "j"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       SuperscriptBox["2", "lx"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", 
       SuperscriptBox["2", "ly"]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"standardCoefficients", "[", 
    RowBox[{"f_", ",", "l_List"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "l", "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{"j", " ", 
          SuperscriptBox["2", 
           RowBox[{"-", 
            RowBox[{"l", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         SuperscriptBox["2", 
          RowBox[{"l", "[", 
           RowBox[{"[", "1", "]"}], "]"}]]}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"standardCoefficients", "[", 
        RowBox[{
         RowBox[{"proj", "[", 
          RowBox[{"f", ",", 
           RowBox[{"j", " ", 
            SuperscriptBox["2", 
             RowBox[{"-", 
              RowBox[{"l", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}]]}]}], "]"}], ",", 
         RowBox[{"l", "[", 
          RowBox[{"[", 
           RowBox[{";;", 
            RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         SuperscriptBox["2", 
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]]}], "}"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "Working", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"standardReconstruct2D", "[", 
     RowBox[{"coefficients_", ",", "lx_", ",", "ly_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"coefficients", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", 
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"lx", ",", "ly", ",", "i", ",", "j"}], "]"}], "[", 
         RowBox[{"#1", ",", "#2"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         SuperscriptBox["2", "lx"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         SuperscriptBox["2", "ly"]}], "}"}]}], "]"}], "&"}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"standardReconstruct", "[", 
     RowBox[{"coefficients_", ",", "l_List"}], 
     RowBox[{"(*", 
      RowBox[{",", "x_List"}], "*)"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "l", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"coefficients", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], " ", 
          RowBox[{
           RowBox[{"\[Psi]", "[", 
            RowBox[{
             RowBox[{"l", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "i"}], "]"}], "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           SuperscriptBox["2", 
            RowBox[{"l", "[", 
             RowBox[{"[", "1", "]"}], "]"}]]}], "}"}]}], "]"}], ",", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"standardReconstruct", "[", 
           RowBox[{
            RowBox[{"coefficients", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
            RowBox[{"l", "[", 
             RowBox[{"[", 
              RowBox[{";;", 
               RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], " ", 
          RowBox[{
           RowBox[{"\[Psi]", "[", 
            RowBox[{
             RowBox[{"l", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], ",", "i"}], "]"}], "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           SuperscriptBox["2", 
            RowBox[{"l", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]]}], "}"}]}], "]"}]}], "]"}], 
     "&"}]}], "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"standardReconstruct", "[", 
    RowBox[{"coefficients_", ",", "l_List", ",", "x_List"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "l", "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"Sum", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"coefficients", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "  ", 
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{
           RowBox[{"l", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "i"}], "]"}], " ", "[", 
         RowBox[{"x", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         SuperscriptBox["2", 
          RowBox[{"l", "[", 
           RowBox[{"[", "1", "]"}], "]"}]]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"standardReconstruct", "[", 
         RowBox[{
          RowBox[{"coefficients", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], " ", 
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{
           RowBox[{"l", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], ",", "i"}], "]"}], " ", "[", 
         RowBox[{"x", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         SuperscriptBox["2", 
          RowBox[{"l", "[", 
           RowBox[{"[", "1", "]"}], "]"}]]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Not", " ", "efficient"}], ",", " ", 
    RowBox[{
    "but", " ", "the", " ", "hierarchical", " ", "and", " ", "sparse", " ", 
     "basis", " ", 
     RowBox[{"won", "'"}], "t", " ", "have", " ", "this", " ", "problem"}]}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"standardProject2D", "[", 
     RowBox[{"f_", ",", "lx_", ",", "ly_"}], "]"}], ":=", 
    RowBox[{"standardReconstruct2D", "[", 
     RowBox[{
      RowBox[{"standardCoefficients2D", "[", 
       RowBox[{"f", ",", "lx", ",", "ly"}], "]"}], ",", "lx", ",", "ly"}], 
     "]"}]}], "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"standardProject", "[", 
   RowBox[{"f_", ",", "l_List", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"coeffs", "=", 
      RowBox[{"standardCoefficients", "[", 
       RowBox[{"f", ",", "l"}], "]"}]}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"standardReconstruct", "[", 
       RowBox[{"coeffs", ",", "l", ",", "x"}], "]"}], "]"}], ";"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6733680003972816`*^9, 3.6733681189558687`*^9}, {
   3.673370933680094*^9, 3.673370994522457*^9}, {3.673371036059031*^9, 
   3.6733711201950502`*^9}, {3.6733711714335012`*^9, 3.673371175445512*^9}, {
   3.673371413375792*^9, 3.673371423930414*^9}, {3.6733715870924797`*^9, 
   3.673371621567006*^9}, {3.673371658601623*^9, 3.673371665146308*^9}, {
   3.673617918986994*^9, 3.6736179378880987`*^9}, {3.67361801388404*^9, 
   3.6736180150769053`*^9}, {3.67362175928094*^9, 3.673621761032077*^9}, {
   3.673803992943742*^9, 3.673804011118949*^9}, {3.674484924281612*^9, 
   3.674484968686173*^9}, {3.674485004800501*^9, 3.674485036126503*^9}, {
   3.674485663088119*^9, 3.6744857011484747`*^9}, {3.674485737961299*^9, 
   3.674485743778206*^9}, {3.674485877793128*^9, 3.6744858986747007`*^9}, {
   3.67448593962906*^9, 3.674485955942828*^9}, {3.6744866431711884`*^9, 
   3.6744866534458723`*^9}, {3.674486685114644*^9, 3.6744867151388817`*^9}, {
   3.67448687455191*^9, 3.67448694918801*^9}, {3.6744871835987*^9, 
   3.674487239971493*^9}, {3.674487274980289*^9, 3.674487313552134*^9}, {
   3.674487344534745*^9, 3.6744873464087467`*^9}, {3.674487381814568*^9, 
   3.674487382067174*^9}, {3.674487422986845*^9, 3.674487423124476*^9}, {
   3.6744877149023323`*^9, 3.674487717233553*^9}, {3.674488930982853*^9, 
   3.674489010254053*^9}, {3.674489048483533*^9, 3.6744892231032333`*^9}, 
   3.674489290246028*^9, {3.674489412439065*^9, 3.674489412809019*^9}, {
   3.674493418630106*^9, 3.674493420452162*^9}, {3.6747525666820517`*^9, 
   3.674752722950457*^9}, {3.674752756985376*^9, 3.674752815215446*^9}, {
   3.674752941329452*^9, 3.674752951281733*^9}, {3.674753032938027*^9, 
   3.67475313638207*^9}, {3.674753179926672*^9, 3.6747532657848997`*^9}, {
   3.674753642373252*^9, 3.674753644908835*^9}, {3.6747537368600693`*^9, 
   3.6747537550207167`*^9}, {3.674753795756542*^9, 3.6747538085116043`*^9}, {
   3.674754299695311*^9, 3.6747544597596292`*^9}, {3.6747544939485207`*^9, 
   3.6747544941052923`*^9}, {3.674759429682479*^9, 3.6747594461759577`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newTimes", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Timing", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"standardReconstruct", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", "n", "}"}], ",", 
            RowBox[{"{", "x", "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "&"}], "@", 
       RowBox[{"standardCoefficients", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"Pi", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", "n", "}"}]}], "]"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.674753379179071*^9, 3.674753443285534*^9}, {
   3.674753703743973*^9, 3.67475372496603*^9}, 3.6747538148006372`*^9, {
   3.674754502617173*^9, 3.6747545812334833`*^9}, {3.674754631160842*^9, 
   3.674754653361478*^9}, {3.6747547218931637`*^9, 3.674754727196416*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.083302`", ",", "0.018668`", ",", "0.034446`", ",", "0.064731`", ",", 
   "0.09178`", ",", "0.19407`", ",", "0.358775`", ",", "1.156093`", ",", 
   "2.196352`", ",", "4.404199`"}], "}"}]], "Output",
 CellChangeTimes->{3.674833485401536*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full Basis", "Subsection",
 CellChangeTimes->{{3.673277052290266*^9, 3.673277056255988*^9}, {
  3.67357648054101*^9, 3.673576481088376*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"getCoefficient", "[", 
     RowBox[{"f_", ",", "x_Integer", ",", "l_Integer"}], "]"}], ":=", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"l", "\[Equal]", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"f", "[", "0", "]"}], ",", 
      RowBox[{"l", "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"f", "[", "1", "]"}], "-", 
       RowBox[{"f", "[", "0", "]"}]}], ",", "True", ",", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], "-", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", 
        RowBox[{"f", "[", 
         RowBox[{"x", "+", 
          RowBox[{"2", "^", 
           RowBox[{"-", "l"}]}]}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", 
        RowBox[{"f", "[", 
         RowBox[{"x", "-", 
          RowBox[{"2", "^", 
           RowBox[{"-", "l"}]}]}], "]"}]}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getCoefficient2D", "[", 
     RowBox[{"f_", ",", "x_", ",", "y_", ",", "lx_", ",", "ly_"}], "]"}], ":=", 
    RowBox[{"getCoefficient", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"y1", ",", 
        RowBox[{"getCoefficient", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"x1", ",", 
            RowBox[{"f", "[", 
             RowBox[{"x1", ",", "y1"}], "]"}]}], "]"}], ",", "x", ",", "lx"}],
          "]"}]}], "]"}], ",", "y", ",", "ly"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Tensor", " ", "product", " ", "construction"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"getCoefficient", "[", 
     RowBox[{"f_", ",", "x_List", ",", "l_List"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "l", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"l", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"f", "[", 
         RowBox[{"{", "0", "}"}], "]"}], ",", 
        RowBox[{
         RowBox[{"l", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"{", "1", "}"}], "]"}], "-", 
         RowBox[{"f", "[", 
          RowBox[{"{", "0", "}"}], "]"}]}], ",", "True", ",", 
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], "-", 
         RowBox[{
          RowBox[{"1", "/", "2"}], " ", 
          RowBox[{"f", "[", 
           RowBox[{"x", "+", 
            RowBox[{"2", "^", 
             RowBox[{"-", 
              RowBox[{"l", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"1", "/", "2"}], " ", 
          RowBox[{"f", "[", 
           RowBox[{"x", "-", 
            RowBox[{"2", "^", 
             RowBox[{"-", 
              RowBox[{"l", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}]}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", "\t\t\t\t", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"l", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"getCoefficient", "[", 
         RowBox[{
          RowBox[{"proj", "[", 
           RowBox[{"f", ",", "0"}], "]"}], ",", 
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"l", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"getCoefficient", "[", 
          RowBox[{
           RowBox[{"proj", "[", 
            RowBox[{"f", ",", "1"}], "]"}], ",", 
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
           RowBox[{"l", "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], "-", 
         RowBox[{"getCoefficient", "[", 
          RowBox[{
           RowBox[{"proj", "[", 
            RowBox[{"f", ",", "0"}], "]"}], ",", 
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
           RowBox[{"l", "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t", "True", ",", 
        RowBox[{
         RowBox[{"getCoefficient", "[", 
          RowBox[{
           RowBox[{"proj", "[", 
            RowBox[{"f", ",", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
           RowBox[{"l", "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], "-", 
         RowBox[{
          RowBox[{"1", "/", "2"}], " ", 
          RowBox[{"getCoefficient", "[", 
           RowBox[{
            RowBox[{"proj", "[", 
             RowBox[{"f", ",", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "+", 
               SuperscriptBox["2", 
                RowBox[{"-", 
                 RowBox[{"l", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}]]}]}], "]"}], ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{";;", 
               RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
            RowBox[{"l", "[", 
             RowBox[{"[", 
              RowBox[{";;", 
               RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"1", "/", "2"}], 
          RowBox[{"getCoefficient", "[", 
           RowBox[{
            RowBox[{"proj", "[", 
             RowBox[{"f", ",", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "-", 
               SuperscriptBox["2", 
                RowBox[{"-", 
                 RowBox[{"l", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}]]}]}], "]"}], ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{";;", 
               RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
            RowBox[{"l", "[", 
             RowBox[{"[", 
              RowBox[{";;", 
               RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}]}]}]}], 
       "\[IndentingNewLine]", "\t\t\t\t", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"This", " ", "is", " ", "working"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "but", " ", "you", " ", "cane", " ", "make", " ", "it", " ", "more", 
        " ", "efficient"}], ".."}], " ", "it", " ", "might", " ", "not", " ", 
      "be", " ", "worth", " ", 
      RowBox[{"it", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "HERE", " ", "IS", " ", "SOME", " ", "CODE", " ", "WE", " ", "DONT", 
       " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"NEED", "\[IndentingNewLine]", "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
               "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
        "--"}]}], "-", "\[IndentingNewLine]", 
      RowBox[{"fullCoefficients2D", "[", 
       RowBox[{"f_", ",", "lx_", ",", "ly_"}], "]"}]}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"getCoefficient2D", "[", 
          RowBox[{"f", ",", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"-", "kx"}]], " ", "i"}], ",", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"-", "ky"}]], " ", "j"}], ",", "kx", ",", "ky"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"switch", "[", "kx", "]"}]], "-", "1"}], ",", "2"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"switch", "[", "ky", "]"}]], "-", "1"}], ",", "2"}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"kx", ",", 
         RowBox[{"-", "1"}], ",", "lx"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ky", ",", 
         RowBox[{"-", "1"}], ",", "ly"}], "}"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fullCoefficients", "[", 
      RowBox[{"f_", ",", "l_List"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "l", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"getCoefficient", "[", 
            RowBox[{"f", ",", 
             RowBox[{
              SuperscriptBox["2", 
               RowBox[{"-", "l"}]], " ", "i"}], ",", "l"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              SuperscriptBox["2", 
               RowBox[{"switch", "[", 
                RowBox[{"l", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]], "-", "1"}], ",", 
             "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"fullCoefficients", "[", 
              RowBox[{
               RowBox[{"proj", "[", 
                RowBox[{"f", ",", "0"}], "]"}], ",", 
               RowBox[{"l", "[", 
                RowBox[{"[", 
                 RowBox[{";;", 
                  RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "\t\t", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", "0"}], ",", 
             RowBox[{"fullCoefficients", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"proj", "[", 
                 RowBox[{"f", ",", "1"}], "]"}], "-", 
                RowBox[{"proj", "[", 
                 RowBox[{"f", ",", "0"}], "]"}]}], ",", 
               RowBox[{"l", "[", 
                RowBox[{"[", 
                 RowBox[{";;", 
                  RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "\t\t", "True", ",", 
             RowBox[{"fullCoefficients", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"proj", "[", 
                 RowBox[{"f", ",", 
                  RowBox[{
                   SuperscriptBox["2", 
                    RowBox[{"-", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]], "i"}]}], "]"}], "-", 
                
                RowBox[{
                 RowBox[{"1", "/", "2"}], " ", 
                 RowBox[{"proj", "[", 
                  RowBox[{"f", ",", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"-", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]], "i"}], "+", 
                    SuperscriptBox["2", 
                    RowBox[{"-", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]]}]}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"1", "/", "2"}], " ", 
                 RowBox[{"proj", "[", 
                  RowBox[{"f", ",", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"-", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]], "i"}], "-", 
                    SuperscriptBox["2", 
                    RowBox[{"-", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]]}]}], "]"}]}]}], ",", 
               RowBox[{"l", "[", 
                RowBox[{"[", 
                 RowBox[{";;", 
                  RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              SuperscriptBox["2", 
               RowBox[{"switch", "[", 
                RowBox[{"l", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "]"}]], "-", "1"}], ",", 
             "2"}], "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"fullCoefficients", "[", 
        RowBox[{"f_", ",", "l_List", ",", "lcurr_List", ",", "icurr_List"}], 
        "]"}]}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "curr", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"getCoefficient", "[", 
             RowBox[{"f", ",", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"-", "l"}]], " ", "i"}], ",", "l"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"switch", "[", 
                 RowBox[{"l", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]], "-", "1"}], ",", 
              "2"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"l", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", 
               RowBox[{"-", "1"}]}], ",", 
              RowBox[{"fullCoefficients", "[", 
               RowBox[{
                RowBox[{"proj", "[", 
                 RowBox[{"f", ",", "0"}], "]"}], ",", 
                RowBox[{"l", "[", 
                 RowBox[{"[", 
                  RowBox[{";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\t\t", 
              RowBox[{
               RowBox[{"l", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", "0"}], ",", 
              RowBox[{"fullCoefficients", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"proj", "[", 
                  RowBox[{"f", ",", "1"}], "]"}], "-", 
                 RowBox[{"proj", "[", 
                  RowBox[{"f", ",", "0"}], "]"}]}], ",", 
                RowBox[{"l", "[", 
                 RowBox[{"[", 
                  RowBox[{";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\t\t", "True", ",", 
              RowBox[{"fullCoefficients", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"proj", "[", 
                  RowBox[{"f", ",", 
                   RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"-", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]], "i"}]}], "]"}], "-", 
                 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], " ", 
                  RowBox[{"proj", "[", 
                   RowBox[{"f", ",", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"-", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]], "i"}], "+", 
                    SuperscriptBox["2", 
                    RowBox[{"-", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]]}]}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], " ", 
                  RowBox[{"proj", "[", 
                   RowBox[{"f", ",", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"-", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]], "i"}], "-", 
                    SuperscriptBox["2", 
                    RowBox[{"-", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]]}]}], "]"}]}]}], ",", 
                RowBox[{"l", "[", 
                 RowBox[{"[", 
                  RowBox[{";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"switch", "[", 
                 RowBox[{"l", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "]"}]], "-", "1"}], ",", 
              "2"}], "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Not", " ", "Right", " ", "Yet"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"makePointsRec", "[", 
         RowBox[{"d_", ",", "l_List"}], "]"}]}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"d", "\[Equal]", "1"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"k", ",", "i"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{
                  SuperscriptBox["2", 
                   RowBox[{"switch", "[", "k", "]"}]], "-", "1"}], ",", "2"}],
                 "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"l", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"makePointsRec", "[", 
                RowBox[{
                 RowBox[{"d", "-", "1"}], ",", 
                 RowBox[{"l", "[", 
                  RowBox[{"[", 
                   RowBox[{";;", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "i"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{
                  SuperscriptBox["2", 
                   RowBox[{"switch", "[", "k", "]"}]], "-", "1"}], ",", "2"}],
                 "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"l", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"makePointsRec", "[", 
          RowBox[{"d_", ",", "l_List", ",", "ki_List"}], "]"}]}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"d", "\[Equal]", "1"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "i"}], "}"}], "}"}], ",", "ki"}], "]"}],
                    ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"switch", "[", "k", "]"}]], "-", "1"}], ",", 
                    "2"}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", 
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", "\t", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"makePointsRec", "[", 
                    RowBox[{
                    RowBox[{"d", "-", "1"}], ",", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "i"}], "}"}], "}"}], ",", "ki"}], 
                    "]"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"switch", "[", "k", "]"}]], "-", "1"}], ",", 
                    "2"}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", 
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
              "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "--"}], 
            "--"}], "--"}], "--"}], 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Reconstruct2D", "[", "coefficients_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"coefficients", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"kx", "+", "2"}], ",", 
           RowBox[{"ky", "+", "2"}], ",", 
           RowBox[{"ceil", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"switch", "[", "kx", "]"}]}], "]"}], ",", 
           RowBox[{"ceil", "[", 
            RowBox[{"#2", ",", 
             RowBox[{"switch", "[", "ky", "]"}]}], "]"}]}], "]"}], "]"}], " ",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"kx", ",", "ky", ",", 
           RowBox[{"ceil", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"switch", "[", "kx", "]"}]}], "]"}], ",", 
           RowBox[{"ceil", "[", 
            RowBox[{"#2", ",", 
             RowBox[{"switch", "[", "ky", "]"}]}], "]"}]}], "]"}], "[", 
         RowBox[{"#1", ",", "#2"}], "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"kx", ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "coefficients", "]"}], "-", "2"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"ky", ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "coefficients", "]"}], "-", "2"}]}], "}"}]}],
       "]"}], "&"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"project2D", "[", 
     RowBox[{"f_", ",", "lx_", ",", "ly_"}], "]"}], ":=", 
    RowBox[{"Reconstruct2D", "[", 
     RowBox[{"fullCoefficients2D", "[", 
      RowBox[{"f", ",", "lx", ",", "ly"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.672497905249762*^9, 3.6724980460804987`*^9}, {
   3.672498086010971*^9, 3.672498086426568*^9}, {3.672498120610044*^9, 
   3.672498132168372*^9}, {3.6724981933241796`*^9, 3.6724982357720547`*^9}, {
   3.672498276279566*^9, 3.672498326466967*^9}, {3.672498396348793*^9, 
   3.672498474897173*^9}, {3.67249856256668*^9, 3.6724985772347393`*^9}, {
   3.672498885753086*^9, 3.6724988887908688`*^9}, {3.672498973735808*^9, 
   3.6724989750417128`*^9}, {3.672499010376442*^9, 3.672499028840345*^9}, {
   3.672499325454844*^9, 3.672499329989029*^9}, {3.672499410615137*^9, 
   3.672499411943338*^9}, {3.673034778920154*^9, 3.673034779751392*^9}, {
   3.67303878112294*^9, 3.673038789981296*^9}, {3.6730390939721413`*^9, 
   3.673039148248605*^9}, 3.673264987008442*^9, {3.673265302956407*^9, 
   3.673265412069075*^9}, 3.673265484744018*^9, {3.6732655859770203`*^9, 
   3.673265599390531*^9}, {3.673549789331839*^9, 3.673549792474326*^9}, {
   3.673549937783786*^9, 3.673550067559483*^9}, {3.673550130904303*^9, 
   3.673550188655244*^9}, {3.673550222539015*^9, 3.673550263661482*^9}, {
   3.673550377429068*^9, 3.673550605255698*^9}, {3.673550658843258*^9, 
   3.673550674368505*^9}, {3.673550721880124*^9, 3.673550733630953*^9}, {
   3.6735508024880533`*^9, 3.6735508208972387`*^9}, {3.673551354349574*^9, 
   3.673551396733061*^9}, {3.673551464740687*^9, 3.67355147329633*^9}, {
   3.673551584855508*^9, 3.673551634805602*^9}, {3.673551685006486*^9, 
   3.673551707024789*^9}, {3.6735517673505163`*^9, 3.6735517949923353`*^9}, {
   3.6735518410399*^9, 3.673551856586239*^9}, {3.673552424760128*^9, 
   3.673552441686385*^9}, {3.6735528116472397`*^9, 3.673552820772859*^9}, {
   3.673553485545643*^9, 3.673553494259479*^9}, {3.6735535318168592`*^9, 
   3.67355353200189*^9}, {3.673553604649831*^9, 3.673553647805532*^9}, {
   3.673553784064872*^9, 3.673553853609994*^9}, {3.673554166480525*^9, 
   3.6735541678554363`*^9}, {3.673554200527424*^9, 3.673554201829867*^9}, {
   3.673554251115727*^9, 3.673554282927092*^9}, {3.6735543333531923`*^9, 
   3.673554340509158*^9}, {3.6735543940457973`*^9, 3.6735544556685667`*^9}, {
   3.673554497906698*^9, 3.673554498898905*^9}, {3.673576494836705*^9, 
   3.673576499717845*^9}, 3.6735765366015453`*^9, {3.673618128943383*^9, 
   3.673618130973936*^9}, {3.673619092051015*^9, 3.67361912676166*^9}, {
   3.673620420351119*^9, 3.673620496933251*^9}, {3.673620881831188*^9, 
   3.673620882921871*^9}, {3.673620949180478*^9, 3.6736210125382423`*^9}, {
   3.673621431465794*^9, 3.6736214391143417`*^9}, {3.6736215581179047`*^9, 
   3.6736215599219103`*^9}, {3.673621636818694*^9, 3.673621651195643*^9}, {
   3.673622841424548*^9, 3.6736228650698757`*^9}, 3.6736229433901*^9, {
   3.6736232301017036`*^9, 3.6736232463693113`*^9}, {3.673623282681774*^9, 
   3.67362328670819*^9}, 3.673623546299397*^9, {3.673624155189372*^9, 
   3.673624187683448*^9}, {3.673624259831815*^9, 3.673624287992454*^9}, {
   3.673624335560773*^9, 3.6736243654325733`*^9}, {3.673624615790103*^9, 
   3.6736246228422747`*^9}, {3.673624663960896*^9, 3.67362466708747*^9}, {
   3.673624820117755*^9, 3.6736249337957172`*^9}, {3.673625035903747*^9, 
   3.6736251121044083`*^9}, {3.6736253167153788`*^9, 
   3.6736253579904623`*^9}, {3.6736255302697477`*^9, 3.673625587758218*^9}, {
   3.673625691597685*^9, 3.67362571108678*^9}, {3.673625949932444*^9, 
   3.673625970469276*^9}, {3.673626294423847*^9, 3.673626308940868*^9}, {
   3.673626361145555*^9, 3.6736263813442917`*^9}, {3.673626612762067*^9, 
   3.673626642947071*^9}, 3.673627182248803*^9, {3.673627271199099*^9, 
   3.6736273004473343`*^9}, {3.673627575286366*^9, 3.673627582774056*^9}, {
   3.673630558590191*^9, 3.673630594039089*^9}, {3.673630834026103*^9, 
   3.673630835187813*^9}, {3.673634052909828*^9, 3.6736340758783207`*^9}, {
   3.673634114536069*^9, 3.673634152687709*^9}, {3.673641997399588*^9, 
   3.673642095416727*^9}, {3.673642167167782*^9, 3.6736421781509953`*^9}, {
   3.6736422248218727`*^9, 3.673642244356945*^9}, 3.67364312756176*^9, {
   3.6736454537836723`*^9, 3.6736454639501257`*^9}, {3.673784467451808*^9, 
   3.67378450842913*^9}, {3.6738040733758163`*^9, 3.673804077443865*^9}, {
   3.6738041119027452`*^9, 3.673804118531611*^9}, {3.673958523773306*^9, 
   3.673958523963352*^9}, {3.674392087039418*^9, 3.6743920978667593`*^9}, {
   3.674757363478085*^9, 3.6747573652273893`*^9}, {3.674757585360301*^9, 
   3.674757622305739*^9}, {3.674757723839777*^9, 3.674757800174861*^9}, {
   3.674757831864634*^9, 3.674757843753169*^9}, {3.674757974733378*^9, 
   3.674758010186563*^9}, {3.674758202976728*^9, 3.674758291503416*^9}, {
   3.674758396854774*^9, 3.674758448926877*^9}, {3.6747592086091003`*^9, 
   3.674759231141501*^9}, {3.674759288616119*^9, 3.6747593697074337`*^9}, {
   3.674759408485713*^9, 3.6747594198169737`*^9}, {3.674759546292395*^9, 
   3.674759588689645*^9}, {3.674759809945367*^9, 3.674759818298724*^9}, {
   3.674759884918996*^9, 3.674759890835333*^9}, 3.674759975638176*^9, {
   3.674760024844838*^9, 3.674760027526268*^9}, {3.674760146588223*^9, 
   3.674760147074807*^9}, {3.674760951552772*^9, 3.6747609721490917`*^9}, {
   3.674769126058444*^9, 3.674769354860641*^9}, {3.6747693883138742`*^9, 
   3.674769393373272*^9}, {3.674769485066435*^9, 3.674769517574822*^9}, {
   3.67476955927302*^9, 3.674769560324888*^9}, {3.674783020493692*^9, 
   3.674783027177895*^9}, {3.674783610531972*^9, 3.6747836701902113`*^9}, {
   3.6747837921988688`*^9, 3.674783824654852*^9}, {3.6747840856468077`*^9, 
   3.674784129080819*^9}, {3.674784165589798*^9, 3.6747841742060947`*^9}, 
   3.67478422727903*^9, {3.6747842893225727`*^9, 3.674784468584281*^9}, {
   3.674784574248002*^9, 3.674784576717916*^9}, {3.674784643419797*^9, 
   3.6747846469473963`*^9}, {3.674785042498074*^9, 3.674785047916299*^9}, {
   3.674785116753415*^9, 3.674785178469142*^9}, {3.6747852698409367`*^9, 
   3.6747852899987307`*^9}, {3.6747853332686*^9, 3.674785408211143*^9}, {
   3.67478545140729*^9, 3.674785453053021*^9}, {3.674785729435128*^9, 
   3.6747857637491713`*^9}, {3.674785936299008*^9, 3.6747859499141827`*^9}, {
   3.674786304909235*^9, 3.6747863129137287`*^9}, 3.6748230314219093`*^9, {
   3.674823979982181*^9, 3.6748239873859386`*^9}, {3.674824019791233*^9, 
   3.6748240199368067`*^9}, {3.674834040761581*^9, 3.674834086100503*^9}, {
   3.674834222228541*^9, 3.674834258714486*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hierIterate", "[", 
    RowBox[{"l_List", ",", "ki_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "i", ",", "hashTable", ",", "hashMap"}], "}"}], ",", 
     RowBox[{
      RowBox[{"hashMap", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "l", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"l", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "\[LessEqual]", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"switch", "[", "k", "]"}]], "-", "1"}]}], ",", 
             RowBox[{"i", "+=", "2"}], ",", 
             RowBox[{
              RowBox[{"hashTable", "=", 
               RowBox[{"{", 
                RowBox[{"Append", "[", 
                 RowBox[{
                  RowBox[{"Append", "[", 
                   RowBox[{"ki", ",", 
                    RowBox[{"k", "+", "2"}]}], "]"}], ",", "i"}], "]"}], 
                "}"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"hashMap", "=", 
               RowBox[{"Join", "[", 
                RowBox[{"hashMap", ",", "hashTable"}], "]"}]}], ";"}]}], 
            "]"}]}], "]"}], ";", 
         RowBox[{"Return", "[", "hashMap", "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"l", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "\[LessEqual]", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"switch", "[", "k", "]"}]], "-", "1"}]}], ",", 
             RowBox[{"i", "+=", "2"}], ",", 
             RowBox[{
              RowBox[{"hashTable", "=", 
               RowBox[{"hierIterate", "[", 
                RowBox[{
                 RowBox[{"l", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
                 RowBox[{"Append", "[", 
                  RowBox[{
                   RowBox[{"Append", "[", 
                    RowBox[{"ki", ",", 
                    RowBox[{"k", "+", "2"}]}], "]"}], ",", "i"}], "]"}]}], 
                "]"}]}], ";", 
              RowBox[{"hashMap", "=", 
               RowBox[{"Join", "[", 
                RowBox[{"hashMap", ",", "hashTable"}], "]"}]}]}]}], "]"}]}], 
          "]"}], ";", 
         RowBox[{"Return", "[", "hashMap", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"This", " ", "is", " ", "working"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hierIterate", "[", "l_List", "]"}], ":=", 
   RowBox[{"hierIterate", "[", 
    RowBox[{"l", ",", 
     RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"This", " ", "is", " ", "working"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fullCoefficients", "[", 
    RowBox[{"f_", ",", "l_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"li", ",", "x", ",", "i", ",", "k", ",", "diff", ",", "hash"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"li", "=", 
       RowBox[{"hierIterate", "[", "l", "]"}]}], ";", 
      RowBox[{"hash", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "li", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"k", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"li", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", ";;", "2"}], "]"}], "]"}], "-", "2"}]}], ";", 
         
         RowBox[{"x", "=", 
          RowBox[{
           SuperscriptBox["2", 
            RowBox[{"-", "k"}]], 
           RowBox[{
            RowBox[{"li", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", ";;", "2"}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"diff", "=", 
          RowBox[{"getCoefficient", "[", 
           RowBox[{"f", ",", "x", ",", "k"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"k", ",", "x", ",", 
             RowBox[{"diff", "//", "N"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"hash", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"hash", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"li", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", "diff"}], 
             "}"}]}], "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "hash", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"This", " ", "is", " ", "working"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullReconstruct", "[", 
   RowBox[{"li_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "k", ",", "value", ",", "i"}], "}"}], ",", 
    RowBox[{
     RowBox[{"value", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"a", "=", "1"}], ",", 
       RowBox[{"a", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "li", "]"}]}], ",", 
       RowBox[{"a", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{
          RowBox[{"Keys", "[", 
           RowBox[{"li", "[", 
            RowBox[{"[", "a", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", ";;", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"i", "=", 
         RowBox[{
          RowBox[{"Keys", "[", 
           RowBox[{"li", "[", 
            RowBox[{"[", "a", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", ";;", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ceil", "[", 
            RowBox[{"x", ",", 
             RowBox[{"switch", "[", 
              RowBox[{"k", "-", "2"}], "]"}]}], "]"}], "\[Equal]", "i"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"value", "+=", 
           RowBox[{
            RowBox[{"Values", "[", 
             RowBox[{"li", "[", 
              RowBox[{"[", "a", "]"}], "]"}], "]"}], " ", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{
               RowBox[{"k", "-", "2"}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"i", "+", "1"}], ")"}]}]}], "]"}], "[", "x", 
             "]"}]}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     RowBox[{"Return", "[", "value", "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "working"}], ",", " ", 
    RowBox[{
    "but", " ", "you", " ", "can", " ", "make", " ", "it", " ", "more", " ", 
     "efficient"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6748182341893253`*^9, 3.674818249852869*^9}, {
   3.674818633204528*^9, 3.674818861389419*^9}, {3.674818946825584*^9, 
   3.674818952627338*^9}, {3.674819038829138*^9, 3.674819048143593*^9}, {
   3.674819109888535*^9, 3.674819169906653*^9}, 3.674819243175981*^9, {
   3.674819295879533*^9, 3.674819317561034*^9}, {3.6748194255312033`*^9, 
   3.6748194368152723`*^9}, {3.6748194838674107`*^9, 3.674819564048064*^9}, {
   3.6748196911645737`*^9, 3.674819692687612*^9}, {3.674820101484674*^9, 
   3.6748201029976463`*^9}, {3.674820148583015*^9, 3.674820150594861*^9}, {
   3.6748208169463243`*^9, 3.6748208997236843`*^9}, {3.674821022034358*^9, 
   3.674821080637211*^9}, {3.674821137518283*^9, 3.6748211388582497`*^9}, {
   3.674821196389823*^9, 3.674821201649328*^9}, {3.674821366430667*^9, 
   3.674821456567713*^9}, {3.674821624824584*^9, 3.674821644511746*^9}, {
   3.674821685203264*^9, 3.674821714794752*^9}, {3.6748217564497843`*^9, 
   3.674821826675729*^9}, {3.674821932908564*^9, 3.674822034126877*^9}, {
   3.6748220789412107`*^9, 3.6748220840198717`*^9}, {3.674822630954001*^9, 
   3.674822634643093*^9}, {3.674822932515253*^9, 3.674822932652151*^9}, {
   3.674823077287694*^9, 3.674823216498983*^9}, {3.674823298850649*^9, 
   3.6748232994056883`*^9}, {3.674823339260364*^9, 3.674823364581196*^9}, {
   3.674823404789608*^9, 3.674823413848963*^9}, {3.674823449071734*^9, 
   3.6748236265007*^9}, {3.67482371098314*^9, 3.6748237118565283`*^9}, {
   3.674823763268496*^9, 3.67482376716531*^9}, {3.674823843345739*^9, 
   3.674823886022915*^9}, {3.674823934640646*^9, 3.6748239469093122`*^9}, {
   3.674824200141934*^9, 3.6748242238332767`*^9}, {3.674824369331514*^9, 
   3.674824378805108*^9}, {3.674824454757566*^9, 3.674824484695538*^9}, {
   3.674825226330378*^9, 3.6748252362126513`*^9}, {3.674830952162759*^9, 
   3.674831034187213*^9}, {3.674831085079728*^9, 3.6748311210779467`*^9}, {
   3.674831198480649*^9, 3.67483123732185*^9}, {3.674831299933073*^9, 
   3.6748313491645403`*^9}, {3.674831938598998*^9, 3.6748319456949472`*^9}, {
   3.674832095877576*^9, 3.674832097303121*^9}, {3.6748326315843277`*^9, 
   3.674832647646493*^9}, {3.674832769233962*^9, 3.6748328097540283`*^9}, {
   3.6748328465898542`*^9, 3.674832873942602*^9}, {3.674832951175571*^9, 
   3.6748330555919857`*^9}, {3.674833193413547*^9, 3.674833193492144*^9}, {
   3.6748333511413527`*^9, 3.674833355673777*^9}, 3.674833494153089*^9, {
   3.67483361607542*^9, 3.6748336226080513`*^9}, {3.674833708885251*^9, 
   3.6748337231288*^9}, 3.6748406359458733`*^9, {3.674840712400107*^9, 
   3.674840724084639*^9}, {3.6748407742058077`*^9, 3.6748408014782248`*^9}, {
   3.6748409217584763`*^9, 3.674840922436957*^9}, {3.674840964236013*^9, 
   3.674840965716482*^9}, {3.6748411283748426`*^9, 3.674841135827072*^9}, {
   3.674841166176936*^9, 3.674841183168475*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ceil", "[", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674840956509172*^9, 3.674841062734355*^9}}],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{{3.6748409622622766`*^9, 3.6748410630618773`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SparseArray", "[", 
   RowBox[{"fullCoefficients", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"Pi", " ", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"3", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6748352356494217`*^9, 3.6748352396843224`*^9}, {
  3.6748352724481497`*^9, 3.67483529344621*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.674835279805355*^9, 3.6748352936541033`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullCoefficients", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"Pi", " ", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6748335056785727`*^9, 3.674833538064691*^9}, 
   3.674835187966505*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "1"}], "}"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", 
     FractionBox["1", 
      SqrtBox["2"]]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", 
     FractionBox["1", 
      SqrtBox["2"]]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "1"}], "}"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]]}], "+", 
     RowBox[{"Sin", "[", 
      FractionBox["\[Pi]", "8"], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "3"}], "}"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]], "+", 
     RowBox[{"Cos", "[", 
      FractionBox["\[Pi]", "8"], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "5"}], "}"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]], "+", 
     RowBox[{"Cos", "[", 
      FractionBox["\[Pi]", "8"], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "7"}], "}"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]]}], "+", 
     RowBox[{"Sin", "[", 
      FractionBox["\[Pi]", "8"], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.674833506046364*^9, 3.674833538388363*^9}, 
   3.674835188311759*^9, 3.6748409327543592`*^9, 3.674841026758358*^9, 
   3.6748411377162857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fullReconstruct", "[", 
     RowBox[{
      RowBox[{"fullCoefficients", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"Pi", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", "5", "}"}]}], "]"}], ",", 
      RowBox[{"{", "x", "}"}]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674833643954927*^9, 3.674833646617002*^9}, 
   3.674840943222363*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"If", "::", "argbu"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"If\\\"}]\\)\[NoBreak] \
called with 1 argument; between \[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\
\[NoBreak] and \[NoBreak]\\!\\(\\*RowBox[{\\\"4\\\"}]\\)\[NoBreak] arguments \
are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argbu\\\", ButtonNote -> \
\\\"If::argbu\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6748411395529346`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\[NoBreak] through \
\[NoBreak]\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Part/take\\\", \
ButtonNote -> \\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.674841139583439*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"If", "::", "argbu"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"If\\\"}]\\)\[NoBreak] \
called with 1 argument; between \[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\
\[NoBreak] and \[NoBreak]\\!\\(\\*RowBox[{\\\"4\\\"}]\\)\[NoBreak] arguments \
are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argbu\\\", ButtonNote -> \
\\\"If::argbu\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.674841139654963*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\[NoBreak] through \
\[NoBreak]\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Part/take\\\", \
ButtonNote -> \\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.674841139662657*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"If", "::", "argbu"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"If\\\"}]\\)\[NoBreak] \
called with 1 argument; between \[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\
\[NoBreak] and \[NoBreak]\\!\\(\\*RowBox[{\\\"4\\\"}]\\)\[NoBreak] arguments \
are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argbu\\\", ButtonNote -> \
\\\"If::argbu\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.674841139706492*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"If\\\", \\\"::\\\", \\\"argbu\\\"}], \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6748411397417507`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\[NoBreak] through \
\[NoBreak]\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Part/take\\\", \
ButtonNote -> \\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.674841139775694*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \\\"take\\\"}], \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6748411397872267`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxF0X0s1AEcBvDDVnmdLKefGZFsmBinTUUqkXSVO6ImmbdlFC1aV21NOkte
IlbRaXROJXMnKhXuOHMqOs4dN113Tuf9cjHHZl6qrb7fZ3v27PP34xifTksy
JJFI1D/9u8eSpgYE05EBpH+ZbDgdryIoB/6bbCoraiKCwLv9tnEqiQjw3n4f
3gMiESx4IvQtJDLBOdn51+4Rd8CJmToijygDbykLrf41XwN+1+8dEmLPBUfn
KEaE+c3g9MYrHo8X34MXiod6DAz44J6Obr54fyc4hRFqfkbbBe4w9t6ovygC
17K71m13fQYHktue0Rt6wR4iRUu3mxgsDaTPvZzrB6eZpEpkXhLwF3lUm0XR
IJgeHK3WaKTgPVX5UVXOQ+DR9VLphVvD4PFQMZsslIN55SrGgOMImHPXKM/1
+jewPuHsTPJHBdg0KJfWaKME37QcN1PHqMBm7e6kYeoo2P/qyTXhCppVU8De
yVKDYyMpfcZhY+A3sqTS9iW0Xy/PcOLhD/COI8n60iAN2JfiW9I8gVYtFH5i
M8fBWp9wJuE9AXaZ9ZgxGER3OWdJMrInwfelsgSa8xRYRxeUGHahX0daH/a7
PA1m9+VUjlnNgJdFMTesOtGjJXy95aVZ8NLAPuK2hRacUeYkYLSibfqcLDWx
P/FfWf2q3Tp64Xx1mqJuDsyP4zItjuvAH8RpYcoT6LcBblsbwtH1dhwWNQpd
Ia9oKohHZ53KVZsw0O6B5/w316JduLZGwy/QTvbyntpX6O2rtIjgRvSmlqOp
zFa02pNSbjSIVjydjx2UoeXmXGe2HP111pV3SIlufe4gyp5Gt5C/F4Rr0U3M
CpqjDl2XYK0ULKI5Egm7eBlddbA4JW4FzeJRPb3W0I8cTPUbG+jf5AtD6w==

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.67483349650634*^9, {3.674833632392905*^9, 3.674833653875896*^9}, {
   3.674840936745023*^9, 3.674840969573429*^9}, 3.674841027996394*^9, 
   3.6748411400928717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"Pi", " ", "x"}], " ", "+", " ", "y"}], "]"}], "-", 
       RowBox[{"fullReconstruct", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], "&"}], "[", 
  RowBox[{"fullCoefficients", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"Pi", " ", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "+", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6748338163505907`*^9, 3.674833883747016*^9}, {
  3.6748341070046864`*^9, 3.674834141657979*^9}, {3.67483417241251*^9, 
  3.67483420301035*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
+V5HQ/A3/cqbDewTfFYC/+n9sNu2YWN0NH+viUsu2PtPGsftE5e/cmtlOC0U
5e92KZ4iU6sQVH/00HCI5ToTl38ctUbbmftDXLR5QIS2TSDehzHXUq5mOv+Z
h0aHKGk8joGfxEU/3COX3IlDeWmAy7ySzDeCZKrJkKq38SgP/iEirGZcvGAT
o11/xvmQ8GHM1Bf19W8F1WZff3W7x++XuNhqS5jJ5Tj4T1wkKEQE3fGHHePX
rd3UDP+MEwKm9vg4Ign+EBdlfN+8aosU5am9kb/YYPtwC29niYuUXhTv6RSC
64IvTlzSztIff9OvpFvmwLcRgYgbo33Waz16TKki7KD9NJEr/m0/qR9BO6lW
Gf7ivhT1jcqrfvq1/2+7Tf0FlS+7PWvo8XNS/I1+5PvS2pXJQeiPcL9vf2tu
a5IAfYiLTY8o+d9NwL/H/S6VpjpFGuaSjihv9loytDw2l54v9qn+3DDpb3tO
nPQu271jeUoGf1+I2/X1WGHRjLczxEXTlHeNU45A/SQuturySZQVDn1g/+Sy
qjkbk+Ef+pfMmT1LaufhurPHtvb4M9QWyg4tTN89hb9HxCUH/HJa6/D3grj8
gu2SB9HBuC7KG2bPfD+ft6sFLfT3ytSuCqJmPm8+1PH7JS7/Jt6fNZrfL3FJ
avRop678flFe5fGG0ue8HwHvXGwSd5j3IylO8lUytWJBnLF6XEUTfl3icvV2
A18O5e0ecckWG/mYZrwfgR3DX8I4F97uEVc90OuIMJy359Z3bcNLMu8JqR1F
WwakcfvERYUjDA625O0qcXnHyvU5zXh/QVxVe7D5zM5cT/q1G+xRLl/I74t4
6ldnY+35/LrEJWavLTqk8PsiLp5ZvGSZBr8v4vIcxcBH2tw+2RNVdW92z4bX
E/qViItq9Op5PUF5Jb/Vn6cGwT5xcc+lStGF/L2g/67qlRf5qQ2/LnFR9cW6
3/n8usTFnR9pa/QOQ/m951Z8ra9/IZSt2jrEzDMR5YnLFZ/eilYNgp/EJc6P
u0ZGrUU70NxtQoia4Z9xst+b2vZ5sfCTuF0vL8dFHaUob6+m2N5QVimImoTW
TNjIyxOXd6xa81g9Du+n/OG9bc4lf+ahubeH9b7D7xe88MGuDRuk8J+4ePCr
kSdGBcGOStzuoTK194Lq90Ulpcky+ENcXrv80cN2Usz30I5di2/z4qIMOoB/
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
Td0UBz+xzn7dW3GkPBrvBe7XMy6rtT0ft2PcEunwTO9UPPRC/HzaxFfxflGw
T1x+TBA+DIrBvhOqn3Irt12tIpMwnwQflBHaRx6GeSPm+9LUgStDLWGHnkNZ
YJFC+QtuB/X8pOL5Xr9CYeef+WzhgkLDaWSH6n+qUV9vo5Jk2ME+k/ZJe7b6
hePfY97ndr7qcu1s+IN9hrZhvcZ0XQ874NEH+vmWcDuYf83TbV3Qlt8XPRfV
nA2eg6fw+8I+iis/y6cVh8DOP+Nh0Y6LhtPoethvk//b6WK3MLxv2P95XXiq
uc8H/Rb6XzurhNLreqhXaIcPXDO5kycBR33Ofj5u4rAAvg7B2kmJ1dSc/5KC
wfE+zh99aHFpMOoVxqud/mt2wJLPm/CenqyY8CkvDn4iPmAU3HZUJwvoi31K
ni2WrikIB0d7v9Xk45G94dAd8QEFLZfsFSFCGz/XNk1E6fx8z4fxWsPcPTHu
pPevrjD0w6xH7uBUPjU33yLMzFfYcKh0kUh0BeUXDtTJs0sPAMd+ll0dLytr
hwiubF8XlS89nmVybUk4OJUvtSkNvVIULXS6caG3SHQX5Zu13qLzJT4cnMp/
btJCMvddtHCa1RP4cyspw2hzkGCtt6GlSMTX900/PJP3eC0T6v/nf89gx7S4
Ib/E7adjf9TX8/0w75NP1cr3Jwm72XMh/jI8f8/I4FDBe/OOT/X1FVy3tU+7
/vWTOJUPGl/k3s8zUpjB6hOV3yee1OGvDsSpfOTnE2fKdSKEnhZKlfX1PB/I
f3VG4r86E6fy/VaNVAueHCi8Y+8Jlfe/dcHl73Mkjn1Ycy4qaKi7Cznt3Uvr
63n+kHmBjrn9Rc7gVP5E58Wr3DosRf2huKX20rO6vZx9UE+Iqybu9jX64If6
QFz4eSb+dBavD8R/z+/260AVf+7EjfUPTuo2PRrPi3jqiYY8FfS8iFfcCJ91
ZZYMz4t4/pxTm72bB+O5EJ+0o+jO6cgw6E/8YXaLVW6dQqEzzmNFyydeCvKF
nvAn8ZyRa9JK6Ea8g9bplXNN50A3irsaBr2IGVC7DrohHqs/d+wbnUDoRnxD
/ovqL235+0K8vmCA4oyZcdCNePPHF3MddWOhG3HT6Q15J0g34uuX3L7TwoHr
RrxC+n7eDnOuG/EtXTZvbdGa60b84bD3Cz+8CIZuxE/sm6x84YE3dCMedfDU
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
EvpE39+cqGZYJuhd73HB9888iPQZLWsWqWb4Z56eNetR21wel9hD+2cmVWrW
3eDtUo+KoqUlmS+E5QVn6l6J+HyH9hWknx1veKGUz3eaTtimLVN7IfTRMfqs
u4DPr7PZfF/aKC4xivmjvNhj7fM+0dCNfl3nBiV+/uEF3bozfyorBsfcPesJ
3WKZPy3j5up1v+0I3UTMH+N7p5r13dIfunmyfQflF6636TJ2KXSrjHZUMZQ9
F+6bF2rOO8LHn1L9250NZa/++L9o1m8/Pk9sRvt/ruclfqjl7dIa5u/9ilVB
QjHXDevR+zq2y63k9aonm9c7Noo/xLPrHvsl6ldZy+MPTdl157RI9quo9YQ+
9FtXd8Lxtb0b9Kli1/1QkKA5UNsG+ix8t/JmpnOFEN38/jDrZaYYh99m67Q1
+/bdyJvrxOOrwvhDziUvhZYnUmdXRPG4zYfvqTudSyoFt+FON4qa8nnNYtqP
1NHuWo8vvF26N8s5QM2wUsjM8JKfv8jjD7SuPWpT0xPZxnw+mJM60bok87Vw
WPpa2aw/r1c+bF4/oVH84R3z553+logTn8Kgmx3zZ1aM9ZY4dTfodZf5U1u2
tE1UrxXQjX71Bs15mr1FF7plM3+yB09PdE2xg26j2L4Rh6G7l3RLXg3ddn9u
MUGm9qf8+4DgY7943Mb4mKuGTO2tYLp3XE1NLtctl63jp+5ZW3tsO4/baDad
0tpQViWo2NTYLF3AdaP1/fSvK+LKf/H3sTfzd9mW4OL+c3l7fp/N6zc1ij8Y
MX/OuG8aqHWRxx9ymD++vgdHXR+8GrqNYf5MePmhrDLaDnrtZf7IHfZpB3TT
wbyPfpfmp092jHKEDgeXTDuX6fz+T3uQ3HTLax5P6MP285T9dG07eBBvtxMz
W21yLnknKPebVdTBKB460D4Nuxn77vVtk4j7HUv7h9v+77jBfnZdB/enZlOi
edygN7tudsvHT+btdeLjcHbdVXvmnY/JmIX7bc6uu3CyTqrdqoW4X5+WDzzV
DN8JsvhZ7+ac5v2UQve2M0oyqwW30cOavJjF75f2Y6gOss0J0+DP/cPKR2oy
tWphUcDaCpNDvD2xpzxA61qfVnf7J+50fk8TQ9kHwXuC4pk9VXw+IsV8X7z5
3/l+c+ZP0qGHbacL/tDBh/lTOqjQpqP/Eujwnvkj9vgsumUigg6LmT+q3b9r
zD6yHDrcY/6sbn+zOPU9X1/I/531c4RhsCBq0+p7xj4XxCvOsXnuWs+PSTMn
hYCvYvPrlNsbe0fa8Pe6VXFDeYfXtXcnNOH1lvYPhLhO3/F33wW9j4PYdV/d
u/ZsRttV4KrMr90in+fy88twXRU65+VX91DvaSi4Ga2HXEg8c8AwFNcdw8ov
XqFrcDOQ+3+Nze8E4VVsjhaPi7Zn87LlsmVzjp4ORvkANu8ILlVIqjbl193J
5jtNW4yoWRzLrxtJeQP+e91G8YoE5X+wcXjgL/XO3l7h4LZs/L9w+JOuX+u4
niLVhvIVe0pljxYFoXwPyn+gOXGpioj7n83++9UD1gW3pwegvAcbvwVF3s0+
FMKve4+NVwMmnpdnp3L/fencxsyG/UVUnvYJLw5XUBKsw3n/yMY5tnsfqvW5
wNfRerJxUXt9wwBlL1/Yof2GL3YWdnQKDAOn/U1580Y3v+MTyvsRNh7o+fz2
uMocbt+H2YlaKtPc587jLfdoH2aiR8wsVf7cad/vzvijTnO3h/H2lvWnfaL2
qJeI+PjnPrNzbLy7htcFL9jXpPM+85ybRZ3k9YT2Ky4r39PMzI9fl/aP7V5t
n180I4S3e6w/Un+g7lv6IALXHcvsONYess8sWs3jk7SP8bPW1ueduW60v7Hp
Zf+fb/by+kn70FQL2kiUH/HrKuy/m5/p/EZ433d7dxXlcIzH4pmdkH1vmoZ3
cUd/eoHZGVxhrVFY747+tCmzc/vetZq5B8LBZ7P+a73fmQMxjyJyyf9qZs8u
yEL2uxP3k/aLhqZX7FvXh/u51GbXnJLMt8KeTRF79n0Mhp/0O8jVq7DpCg/4
qcrstD/XZaFZoRf8sWN27iZYnkxqHgl+mPU7q9bZdXl/OBp+0r5Nsar7FJXW
vJ5fYP/uXvW2FK8RfP8YxUs3ZKi9MDgUBf+MmJ1IT/srg3evgZ/+rD1/9XN7
84rOa+AP/So8WqluMC8GnOzvr9No9zM+Gu028qZey5+pJnKGP7Tv9YXIpO+2
oiT0O8RNlzXkkaP7Qh5ZYVxcQWgS7NA+ZV1xab9NC7gd4qnRDfniyA7xgdtn
bT0RLYMd2teq9+71h71/OkuyQ9w0tyFfHNkhPrC1ZdylWm6H8r9lmO07brSa
79Pj+eIkfn/zxSHewrjzXrmo514p7NA+0y+L5In3J3N/iJv2a8gXh7gE43Gu
OvGfTiXCDu23LDTKGBfWlutDXFrVkC8O83TGc1YO0N3Zl/tD+1FXRagVH7Dl
drAfu6ghXxzZIW6jJnJXPpkAOzRfDlUZef3HW64P8pTqNuSLw7yP8nqqrOrX
5Goc7NC88q5p/e9fd/n4jbhdZkO+OLT/jNsscLJy+xGNuCXNs0wdPGZ1mM/9
JG7zuPX3vR24n8SHVDfki0P7z/j2TtNmHOzK7WP/bcXpkh3TuX3iEYP79ey2
msed+P5zSfHffHFo/xnvcy69y434MNjHft1Dyn0XK/J6SPxQ1/2jTsbx+SPx
9iYN+eLo/SXuNf7LBoebEXz8ycarm5LbXHszldcr4t6zV4wwKeTzBeSLW9iQ
Lw7tBeOD3Z4fuV3N17lo/3ClXaeES8u5zsRHLWzIF0d2iBucaFF86mZMLrXP
2H/b4eWIiTlh8JP4Vp3dr/MnJoPT/saLReWHgpYnoZ2n/XvCb4/9eW+4HeJT
IuquvGmfjPK0b+2ZLLHzs8HhKE/c/MNx1dKfvL2i/Vo2L+8e8hvJr4t9Vmnr
9llVcjvE/Vd5WHZ+yO1g/0/b9T0m7kyEHdpn0s+8z/fKBG6HeLap6eZHP3g9
of0Vel4PO+iHcTu0f+C5xUOlcYN5P07r48+1xi/wiA+FHVr/nX/JW83qfDy4
Fxs/7+hScuO3I/ffj61bfXIpPuWsy9s3kWjVmYbvEpYV/P0uIfEbrP33adQv
DKxvsH9C79rj/fOSwPsz+4HbbDdqKfHnnsPWd8pa/R6m+ILzeLZOVDRnr2Mb
T+6PN+1nZut6xO9R3tGY/92/3GX2R8berZ02NRnch9m/bb3f2OoI1+E+W08Z
uTL6zvBI7s80ti4zp8XEEz0U1+O6Jyhv4cmGdTTi9qw/imzUT5Uz+2Y159JN
Tbk+msy+6tsFcU13cn9ms3WKfjtCL5rGcH8y2XqHRqLWj27ZvP1XZ++FD1u3
Iu6M/k6+7t/+zpLZT/lkN+vZZRn8OcTsz60PWez5mrczL1j8v1776yuL99yf
bmz+KvWe0MyqLdenmL6nxtaDiA9l/aO0Ub9Zyez32/67/kw096cj7dc7bWF7
LIi/Lyks3i779vZOjg/X7Q6L29svPTRhkCPXJ47yNLJ9pBjnsH72VqP+dzez
f3TcA5+bmVK+X5fZTyk+UfwkkPfL9Ct/HzBcIZnrk8Di5H19bNYvm8frsyHl
e2TrGsR3sv5a2qgft2P2TP2KvWo6JfJ9sMz+BT/RTGk29yeGzbOK4gKOrbnC
ddvD4tJNVg/JdnDl+jT9d9+jJHMKcYpv27HxANl5w+ZZiSHHba2Duf7NWPy2
XftNe7++4/2IHWv37FgcnjjFgdufbhgnkB0DNs/6GF35UMWN+7+YxT9Ht1NY
8iOT28+h/WwsXk2c4qgL2DiB+jt7Ns63m2FQ8lGcCO7H4j9lExUdslx5/V/M
yl/q2XnLzyZ8/LCWlddNbWvsH87jnA9ZOzyExeuIU9xpCOuX6bpymn+Yh+zs
PzYJ/CGLw5SpS27M0+Sc4kuSp4err73hOiyl82isv0a9wndmxf/TnlP9IS7t
uTvz73kW6t+VWHzp7K37pxxHxWJ+8Y5d99kUNZOIvNhc0qEr86vsw5Nfdk3W
Q59Yto/i2Uah+cDrvP7/onzUjfqRM6x83ty3nXRW8fcomO1PqHlrV2d2mte3
sWwfQsef35+2Pcbr83vWL9xqNO8wYuU/OKfUHink9eo7W99PGb7kYJYS91/G
4nmiI6K510bx9s2FtfPSRu38dla+/Qb11h32cT+z2Dr4aGtDA09/fl9hbL1b
Y6K/6oZT3H+P/0+7Hc3Kp43tELPyPK+fXmy9eKT6E+XJZty+NlsXPt6sucqm
h1z/kfS9hkbtsD4rn6BdZimM5vqMZuutef0mz9QJ5vZ/sXXV+sjbxqN7c/tv
Kd/12//drjaVNpQP2llUrP4fb6/es3VJjVbdPqx4za+bxdYlbw90SXC6zPXZ
R9/TaNRO5rDygZ7fVJf04/bvsf9+q8fzrVOv8edC64llrhtqXS5w+2MoP3aj
dk+TrX/d1h06r/NLrj+tu+kuy/APbsPfRylr3yLZPIje37EsDi/et/1o51/c
ziwWDymySTjvZcX9p3WE225hwqZaPo84yOYLo9g8guzLWNzbblz2vW0mMt6+
sXhC2f2Op2yPcZ2RR2uIxPBgFdeBuGp1Q94t0hl5Ec0WTs26yPWkc8mm2Sb5
0+S8PiBvpW1Dfi2yQ7xs7nuTES35eJ7mBc/WzM9RtOTjWzrfKvFwGhTwhNsn
vmlkQ14ssk+8va0kVDGW+4k8VM5Ln22ewO0QV23dkOeK7BAva9d7i9NKrhvy
TU2o+TC8I28fiEtHNOStIjvEgxIeumtvkuF+aT6S+mh/c506fr90blXafaHU
7huvV/x8ruTh33xTZJ94h63Lbulo8fpD5zdv5S022hTF75fnfWrIH0V2iCfm
b3ySUieFn/i+5UfHY6s/BsM+nfMt03c4/3Ekrz/EP6o05H2i8hTXFW+qj9KY
ycsTd3NtyONE18X3zy36Bc2ew/Wh86kfy/wPrNvL9SFu16chXxPV/70sjip9
Yd0z2kIKTuuVZSEzl5cUJoDjvLmDcVa7kVxP7PfW7R4xzJu/v3uY/Rqt7mcy
rnCey+zHP1MteVDB7SAf1NKTKlErePykN7M/ha0vE5+BuITowd+4BNorZid1
dkO+JvK/OYu7ykPe9ZywlY9zaJ1RNNWlb84Hzik+7GYWev/Zfe4/zTebtVmQ
/O4I978Zsy8tK81vYcvL92H2PxboHutvzDnZL27vFNRhOb9fP2bfmK0LE6d1
ST3WvqFdZXb0zjfka8K4iMVNpS2U9Ma/5fWW5sU6fWZ/PX2V11sqH/Q1o+Ps
Jnz8xs+JS7L+5k3C+i+L06aPKNP6qc/bE+TjN22eJczndrQY783WMYnTOqBp
o3Ea2e9t0ZDviOxTnob0Gknp4+/8/UX+rRYN+Yjo/UXe151znlv/M5+luHX6
rXdnLSfy947nF5Ib/80vRHaI29l2sJ1nyNs95AUa+CRtz2je7hHftKchjxDZ
IS5VMdi1eT3XjfYlpn7Kel4xgt8X8qD2bcgXRHaIpxt5OWh35v7QPj23yt7K
ww9yO8Sl/zXk/yE7xDvcveX55Suvn8hrelut5sISbod4ZFBDnh+yQzxo6urs
Y6rcDvL5yC5cTHHiOiNvwLGGvD1UntbLTDUrrvV+zMsT97nXkG+HytP6163J
a2aHRfD36J+8Ou//5tWheuvD1oFVTSJeT1nC2z1a50p1ahoj/2c+m8j2sYxc
pdLfxo7rTPtkdg6W5J7+Z/xAdkatqjm4dwtvhz80mn8Rp/IL2jXk1SF/7rN9
HfK4hVtO9+N+0rqYnSjw0oVd3M9qtm8kT7Q7sOkIrj/tV+lr3e7m4nReHvl2
Iszarxdx3Yx5vPf+v+0qld9k1ZBXB/M1ytuQZGV05SO/LvEgl5NPu2fxcRrx
KR4N+XDIDq1npee7Los7yvU8xNab8g7tc9kbwuebtI9CfiOr3aCpPF6txOaV
bmxeSZzsm+o35MNBe0v7Fm435MPBfkU2ry8b4950pxALPoPNx0UX7Y2/PYkH
t2Pz8dTT43+ua8n3Wa2h/Oo3Qy4/ncnXPWey9u1lzw3mIWP4uudaynftUFm0
QJOvX1O7+iLiSd+sEyHQgeLPeUkTfX934HHOXDZP7d/l+fxvuly3R2weXb/O
z3h/DN+Xq8Xib3tEW/q6u8jAt7B53H2J7tS7J/g4jdabAnt6L05y4OvjCmyc
WcnyrhBXpnwsiQ2c7BexONJRDeMOgxSS+LlUNj8KXxniZ2rO49LI39IndeCI
n3w99DTGgaY3/+ZpwX6MRpzs72bxn0tnzDuM2smvm83mQVpjUpbe6sfH4bTu
02+L1YikVvx+u9F4b3VDXhfsN6D8/O4NnOxTPfEyXVaT1yEZnNol/Xm931tp
8evSOk7whBHfQn7yuPcdNq6rY3lgsD+B8e7zGzjZp3jOwrQBA+2l/PnS/Gjj
Iofy/Zn8+dL6yIXR72JaL+H19j3GA6Oa/s0bQ7y6Ece+IxaXu3HceIq+Pt8v
gTxAniq73mivAy9i/YLjkoZ8MjhHxvgt+wZO9VmRxWdsf25USj0aw+fRLD7z
Uvfiwse2fF/rajaeP8z2aWAfHauHewXXAV0eh2Gdht7vUOuXg05YeiNORFyy
etKSDpoqmKcRn/AidOj7yb5YpyF+ptXw8fM9w7Eeg3Yl1GD6pPbx/Pw/lR/W
x0dpSig/B8t4+jQXy3eFwXz8zXjk4z2uTmti+LlHaqeflXeT3Q/G+A/XXabd
M8fEE+0L7BxIFPXq7wgdqD0zNXfrrZbuBx0wXlJat2afoAYdiEsXOY2X+/pB
B+KjUg+Z1jpHQAfkaZQtf//ekuuAc0DVh99ovObfRyZ+y3vZq8WDg6AD8VRL
HSV/8yjoQHzBub7efVZKoANx1fda8++qrIYOxI9Ln+UvOmTFz4nR/dauDNYW
1PCdKdrv1vdSUmXQ6UDoQzzwy9ID9pdHQR/iH7smTs/+5M/zklDc7J742tOx
UdCHePqyddmTNydAB+LyT+t098VLoANx1XWjarwUI6EDcUl83cH2M9ZBB+JK
nTM7jYxzhg7Ey7Srlg3ynsj3bTCeqzzi5cjLo6AD7e8rGpIgD1kZDB2I//7x
zNzx5kToQDx37SmHnIRA6EDcbvjhh4eUYqADcbeRrdZ8cuPf4yYu33B20qvN
PG8VcbGLyrAtPwOhD3FVzx7pC06GQx/i5VaKr04d9YU+2Lc4YWfYtixH6EM8
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAf8VuP7x5/nPGfcX4mUZK/IKJQtUYnMFJGVbCJSRtoIKVFIRkaShpmM
hjYNKZtQtihURpEU/p+3z/17/V+v7/29rnOf+4znnPu+rs+1zi4XXn1q56RU
Kh2Ul0oV0SlZqbSF6D3aeLQolU7R9r+hVDpZ/FnlUulh0WvUtld/VVWptKvo
NPX/npZKrXSiqeIvUJunMb21r5rGNBN9QX0/akw39Z8qvoZoTdHT1O7W9TYV
baN2s/j9dJ4XxbdV665j+2r7BtHHRU9R30CNOU38qWoXavsu7Zsh+ofOv5/o
RWpfaczt6v9T/M6iLTX2GLVztT1OtIPomxpzpvZNFv+Ljq2v/r3VWmv7CPU/
L/q9+geIXy9+F9Eb1W7TmL6id6rdJ36Q6I7a317tNZ1zsOjFaluJ31PPronO
caJoZz3j99R3vbZ31/7zy94+Sec4Ue08bY/UczlH9AnRpeqro/0zNb65jh0h
frXoEPUPVjtb49bpPfVW/2GiI9W3T+Lne7+O2UL0bNG7Mz+3oeJXpn6uw0RT
tUE6tqWOnaHjpqvdpe2g/ntET1R/C933JeJr6ro/avtK8fVFl6t15PeJ/qDW
Sfzeon+o9RJ/KJNJ5+kvcpT4f9VuE99c9Dld/2S1KrU/td1H/Y1FB+j6v6uv
ndpJ+v2ni94reqvuf6D23SJ6nNqB4o8VfVD7ztCYh0T31LXe0Hl6ch3t+0P9
O4juof756u+h/r/VbhHfVPQftVvFNxNdkfqd3yN6r1o17kF0n9zPYYPGbFTr
J/5I0b/Knke7qP2k7avU30D0Ut3XEvU1Vbtc1/6M3yg6SefSLZaWaP8/6ru1
7O3bRPszx8QPFB2gpsf9H2V7hfgD4/hl4s/Q/UzhGWrQ2NTza4PogbrGSI1Z
LP5q8d+J30J0O11vlPiWal20vVy0JnNV/TvwDJmvarerfadz7ZaZn6LzfKvt
W8R/I/p32bz+SgfH+1wufneNv0P8VI1/Re0Z9XUQbcyzVPtZ25dGnnnMc7tZ
ba7463T9a9WO0/bB+j1rdNzvolfrOU7T/l+1vVH7+qkt0fYV6p8ouor3zPpT
/yva3lfHdFHfa6ITRaeqb0fd187af5PaHG1X1/hN1Y7kd+jBH80zFT1E48aI
/0zH1RM/RPwM8RdrX6btXLKrAzJD7TDkivre5zmI7q02lPNr/CbaPwyZoXaZ
+j8VzUWvUPtC/Cai+zBfkTkaf4jO30x8L9Er1f+V+OqinXSeK9SO0nZf7Wsu
eqNoJfEz5LlerHEfiibcn/oztcORuRrXhHklGkRbqV2j316tsExdpee3h8Y+
y9pCJoofJ3o843SuH0Rri16l9o34zUSv1phvxR+jdp22V4tuI3q42tPMDf2W
w3T+d0U36PkfLr4F71j09cJrfFPRujrPrmon8CwK39cjmsvd1bdSfScyh8S/
qna19g0X3T1x/6+67+vVd4Dop7l/C79p68z779K116bWOaNY6xrXXGNy5FPZ
76Ue6z/x7y7UFuj4AcgunW9hYX2yh/hPdcxl4uuJNguWSzurf7vMv+Vunf9J
8Zn4U8R/nlt3baZzvJ/6t98m+paOPw6dJvqa2uHiy6Kz1RqLR9EuSb3+Bop+
hp5V958690O6z20SP/NPUq/dAaKv6pj9NWa99u2leztd/EaN31T3cD6yV30t
1dqxXtW/VOPPEr+d6Ey1Q8X/o2NniT9M/L/i3xZ/POtDdIpaI+4BGSb+TPHb
ir6jdgK/UfSL1PNlkOiWmdfuHeKvCdYHT/B+MsvvB9X/lbbPEq2ldXSm+rZW
e17nujuxjtsBGar9M9TXVcd/G3VcTea8+oeLP7VifTQSXS1+bdl6YUu1+TrP
PLWn1DbXmKc05jyNuSOxXqijVkP9T6v/fPXXFT9L/LXidxU/U/w14ncTPxuZ
JL62+BfEX8Lv1f08wNwT/QT5jszjPnV/14pfJjoabBLn9grt64mMFN1e55ks
/krxP8Z1VlG7MzGO2pbfn1qeX6Uxp+WWZ/+IPqb+nbS/IzSznn9E/I7MA43p
rPFbiZ+AfBW/ILFMfBb9rbEr1f8Ta0z7qnOf6n+sYlz3vvgtdOzDYCjebRZ1
qPpOy/xeHhX/WxrxCPJNbajGt9L4TcUPE99a/Crd63na/kHvv1UW8aG2E9a/
xlyg/XW0/YT4s+M98x7PEr8Na0l8e/Fbix8l/hzx49EJEZ+hJMFT5+s8Xxf+
7WeK30fXmyT+dPE/V/wuGonukltHPyX6i7avE7+/6Bq1G8C4or+pdUOvii5L
LRMGM1dTv8M7RYeklhOnilaBCcBocZ7wzC8Tv0HXeEn8KaJ/q73MXBVdnRob
jABHqN2n/pM1/kU9n1T9bdQ3uuy1U1Z7lvvWmB+Zx+J3EL9c/L3iweXv6d9M
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
+aXUb/AdlP8Dy8Zing==
          "]], Polygon3DBox[CompressedData["
1:eJw1nAn8D9X7xWc+M3NnLFmSNlqkfdGeqBShpES7SiWlTdGizRal0h5CEWmP
aNGG9n2nfdG+/CSppCyt//N27v/1cl/fe+bemfnMzL33Oc95nqvFif0POauW
JMngPEn0LxkQkmRN/X1XB/erkqS58MXCP2RJ8oDw42WStEuT5Hcde1Vt7VTu
U72hTn5I7WcVSdJf53ZSn0aqH6dymPCJwr1U/1elr/p/rOvdqf5X6nrN1b62
8O3C/6n9KLV/KtxXeIyuf7RwM+GThX9S302FH9HfCep7pgoPcJiOvaY+nXL/
tno69ovKT2rvINxFx9/T+YuFuwu/rL63CPcXHsDv07H3dWyRcDfVX1R9gtoX
Ch8k/ILw+Pj7ThH+RPgu4QXC7YQfEx4jfLV+757CqXAv4VHCbYX/0z2OEb5A
eH3hL4UP5PmF2wj/K3y08BXCuwv/I9xT+HNdf2/hx3W9scJfCO8j/ITwTcI/
Ch8s/JLwzcJX6fw9hBPhY4VHC/cUXF/4JOFzhNcS/lDX7yJ8rnBTvofwAcJ7
C08TbqT39bDw2br+eWrbX99vLdWf0vc6X/gc9XlS9fd1rGXib9GoTpLcGPz9
1tP9+uj8I3Sdejp3K52zp46drfYmvGuuqfZvdN5+wk+rbZzwAOFz1NZHxz7g
m+see+n8ZcKv6NzrVQ5QfQ219Vb/rsJzhDfUfR4T7qfz++n8Qxmf6nO8cE/h
XXWNv9XndV1vkvCVjBfVZ6j0EB6ivi/r/NN1vc/Utpv6viJ8hvDnwq2FXxXu
JvyM8CbCTwi/qfOn6PxROvaG6tfpfhOFL+Ia3F/956veSv2fU/+DhZ8Vbik8
W/g44XnC2wk/K9xX+GPhnYVfYvzrenfrep/o2Chd7xPd4x7h1/lmqs9TuUN4
PT3fUp37ovpvrLZb1fcGnT9L7esIjxNeLryXymvCY9WvId9LfyfXPMdbq89e
uu8i1X9Uaad6L13zbdW3Vf0ZnXuk8KvCWwo/KVzo+tvr3ucKv8Hv1/X68L7V
Z6auV6p9T7XnOv4/tZ+ivyerfTe1P6D2g3S9p1VvofMfV/sBwrOFNxB+VPgt
nT9V/Q/RNc5XfV+1P6j2pmqfpfZ2ld/FMbpupud5W31uV/8m6v+9+u6rfr+q
Pdexz1XuUHtH/T1D956jc78Wflb4fsY241XnvKL+W+i8uYwn4S+Edxd+Tfg0
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
frXw88MtCt3vTtVHFX532Aw0wk31e89X39/0e4fo3A2DfY0fhQdW9gnQ45+N
+g8+xE7Cc6I+tp++xx/C/fDhcvsM6PvPRT0ajojv8HzUk7pxTd27GX3UtrQw
l5yXOZ7BnMUXeSvq5QehSdYcI3i2sCaPNo9m/xQYzpeYc+xc2Adh7DwT9a6u
+LD8LsYEepKe7xb4On5DZZ+JeMCCzL7Ufpm/9VO63j261rrBvtVCHT9H7Ufp
vAapNe6OmX04+Bs8Dt8OezZO7acyR3X8ktxa/bjIN79V/xd0/Ns4PvDh8LXe
zuzb8fuuZrrD9SvHRIiNrMczFY4RECsgJjUXe6V+zVJzCubYQl3/TdUfL8xv
uufGL6o8XFgnRC98S+Uj+AnfSPXmfCO1d9L97+B96rzr1NZR+Hb4o/C1wpN1
zqKaNXW09c5qv1P19eCNaj9J7TM5H38id0yF2AoxjifV/zgda6q2ISqPqn4T
NlXtr6s8Vji+hu+7SNc5T+c+WritFTYqdwyOWFxj9Zmtto2Cfe/F6n8+eoT+
zld7I8YXsR+Vm1Svr3OvrhzPmSjcWPga4TbCY4TrCo8Sbis8VrgevpHw7sKj
oU7CV0Z9E60EDQ8t7x61D1V7W933ArVP1bHZNfPrKTwv+qz6LxRuqvrAYNv4
mfr8hK0KHmOMrXMr85F5sf/FudfsDpltAGt5f+GdMq8xTYLt9c/R30dL2Vb3
uFj131S+DOYXX6i+Qv0vzX2PXTPbBO59VmnfkfO3Ks3f0He+V/tF+D7qv0vm
NWKd4DV9n8w2irUefvRuas2GmClrSPvMNoS1BRu0d2Ybi23iHfGusCn7VP5m
bTLbFL4l35y4C/EXxsIA4Z0z25SmwWvS7pltFmvVMaW1IH7vWqVtYLvMNhbb
yBw6NPOcZ25NCo7VoX3/XNkGd1X9xsS2Gb71ja73l/Dlep6/4McqNwh/Hjxn
WdtZ85nLxBSJLbLmfVyYj32V2qcfmdv//iHqG5uXXuOI3bLmsPa9ktlWYbMW
R761KPZHW1xbeHFqvQntdhv0Z9WXqnwWzFkOzDxG4TJjSvseaCRol+OEW6t+
qco3wTa+k/pfldj2wykOzjxH4BrY/G6Z5wBc4HSd/2O8/xalbX7nzGsUXGB4
XDOvScwV4CwHZZ5TcJmtS2ttaLALgjnLXnCJxFwGDtIjt32Cm7wZrC+/qWO/
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
a0VoPqcJz0qsBW2q652XOaeT3E40l2Mza0RoMWhIpwg/lFhbIuetceacXXLh
yIlrmDnHmFw5cnyX16zXk/tLji/6PflO5BOg2RydWaNCyyGnlPs/F8fTPnre
O1LHkIk9k49AvhTfDy1zPbWfltqGvg6XKa3Xr855Em5WWq9e7ZMG5wCS77B/
Yq1yXPRH0BzRHsm5WzP68+TiEW8g/oCPia9JzuIPUT8jl5Ec6T9qzmkkd5oc
MvS1FonjE+RYENvgGdqXzmGdH/Uv9Dc0bvQD+Di5g7z/U+L3Yf6QU9s3vm++
Bzm6J8fvTe4uOaZodg8kzj3dsbQ2Byf4Q/g+tW+UOaewrvC0yjo5NrV+MF99
qLCmSS7ivcIbZs5prNR+t3DzzDmPteAcceIz5K+Q7zKptK9JDHRFcA78upnj
N+TGw7fxvcjZ7Kz6PSobZM7pDMH8/KDcnBvujT6JPojPje8NHzlN7S1S57qS
s3tO5pzlXnH894zjh/FIDu1RwlPjfNge+5Sa4ywSHltaXyHGuzg4R/ncON7J
XSbn9fjMewDIhSVnHP1pYpxP7Ak4JOpR7BVAg+4U9RT0qcfi/Jse7RExJWJL
2Cdyc8mBPTtzjjC5satzcjPn3JKrS47wCXH+kjtc5da30IfQMslRPjNzzIrc
ZfwDfG3yIVpXztlarXslXm/IyUGLIqens+qjSu8taB79mxNKcwvm0LqlNS76
o2GdWpofk7v5ss5pVVlDQktC0zoj8tU3UsdoidUeqTI3dc7aicGa6cLEmih8
Ff8ZLf+NyG+Hlc4taawyNNrDZblzYMiFQVNCW/pJpR/jM7hOzBJ+gWaIv4zm
eWzpnJSPcufLs16sityQnAnyGeYF34sY4JBo35sU1vjQ+vqUts2sGcS68CeI
eb+p621f2Z6hMfRQ+x6V+WAD4bWEF8I3g+toUAeW9k/JGSIfesfK/vlhwnWE
P43+MXkr5K/Mxz8K1nqJMbeO/Iq+5JTAj7C38Gj4NP4G6yPPOiCuL/iI+Iqs
gcQuPwrOzSEGfSnfOnhsEHPeI74P7k0Mm/ePv00eD+d8HJzjRayWnLi9SnNg
uPCUeD7XX7vmHJwRkW+RF3peHD/wcfKezonjr0vpvSnkrB5Q2v9/VHho6nwv
NEN0IPQg1ms0XrTegXG88f3hlufH8TBD7Ztnzr9bO5jff5k7x49cv83ieL03
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
v876lWMbxDyIffwfgZ4JpQ==
          "]], Polygon3DBox[CompressedData["
1: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
k87lGvFfovXuoA==
          "]], 
         Polygon3DBox[{{1549, 1548, 2090, 1102, 1103, 2091}, {1694, 995, 1457,
           2115, 1554, 1555}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rtPk1EYB+BTe0HxxqwRwmJEo4ktA0NhdcBI0iAmMsEmg00cvKxGbUVR
JvkLIDFhhMVJU00MC5ZaKwVLUUOIcTImupj4nDTp6fN7337n8n1f+6eLhZuJ
EMKC8U+I+bWvb3yVDqGH79jHKi9wm8Pc52X+5iRTmRDSxox8ivd4hmXmMp09
ql0hvDwQwpL8UV6WV+Vxv7+Na+idtf+Yfi3uLQ8YV9QPkuboXZPP6T1U19WP
+IklNljmZz7mJm+lnNv1V82b1Wvq3Vc/kbfkp9zmHL/wGVt8zh3Os83b1sma
N2GdXfV7+aJRdPYN9RQrLHCFl7jIPF8wyxJP8y5P8oRxQ07wOn95lqPcY55N
nuc6e1lx3c94vTMc5wf7Dxl76mPq7zzKrzzCNg+zxW6OuIcf8Z7NOcS/6oq8
H58XD/KP3pu4Zny2bJrrtYQ1edDYVDtGaNCxQp2mhBqT8R3TJ9zRzCU6/6v/
4LpQzw==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1466, 1729, 913, 1465, 2119, 1648, 1467, 2120, 1649, 1468, 
       2121, 1650, 1469, 2122, 1651, 1470, 2088, 2123, 1811, 1881, 1652, 1970,
        2309, 1882, 1883, 1812, 1884, 2028, 2294, 1971, 1885, 1886, 1813, 
       1887, 2284, 1653, 1974, 1972, 1973, 1911, 2297, 1654, 1471, 2124, 1655,
        1472, 2125, 1656, 1473, 2126, 1657, 1474, 2127, 1658, 1475, 2252, 
       1730, 1659, 1731}], 
      Line3DBox[{1477, 2029, 2192, 1476, 926, 1478, 2128, 1660, 1479, 2129, 
       1661, 1480, 2130, 1662, 1481, 2253, 1732, 1912, 605, 606, 1378, 465, 
       1814, 466, 1379, 607, 467, 1815, 468, 1380, 609, 608, 1913, 2298, 1663,
        1482, 2131, 1664, 1483, 2132, 1665, 1484, 2133, 1666, 1485, 2134, 
       1667, 1486, 2135, 1668, 1487}], 
      Line3DBox[{1489, 2030, 2193, 1488, 2031, 2194, 1490, 940, 1491, 2136, 
       1669, 1492, 2320, 2010, 1670, 2011, 2321, 1733, 1816, 1888, 1992, 1889,
        1799, 2278, 1890, 1734, 1818, 1891, 1892, 2310, 1800, 1893, 1735, 
       1820, 1894, 2254, 2103, 1801, 1975, 1736, 1916, 2032, 2255, 1493, 2137,
        1671, 1494, 2138, 1672, 1495, 2139, 1673, 1496, 2140, 1674, 1497, 
       2141, 1675, 1498}], 
      Line3DBox[{1500, 2033, 2195, 1499, 2034, 2196, 1501, 2035, 2197, 1502, 
       953, 1503, 2142, 1676, 1504, 2256, 1737, 1817, 1738, 1846, 1914, 2097, 
       2257, 1739, 1819, 1740, 2287, 2098, 1915, 1847, 1741, 1821, 1742, 2288,
        2099, 1919, 1918, 1743, 1917, 1744, 2258, 1505, 2036, 2198, 1506, 
       2143, 1677, 1507, 2144, 1678, 1508, 2145, 1679, 1509, 2146, 1680, 
       1510}], Line3DBox[{1512, 2037, 2199, 1511, 2038, 2200, 1513, 2039, 
       2201, 1514, 2040, 2202, 1515, 967, 1516, 2259, 1745, 1822, 1746, 1848, 
       1920, 2299, 1849, 1747, 1823, 1748, 1850, 2279, 1921, 1851, 1749, 1824,
        1750, 2289, 2100, 1924, 1923, 1751, 1922, 1752, 2260, 1517, 2041, 
       2203, 1518, 2042, 2204, 1519, 2147, 1681, 1520, 2148, 1682, 1521, 2149,
        1683, 1522}], 
      Line3DBox[{1524, 2043, 2205, 1523, 2044, 2206, 1525, 2045, 2207, 1526, 
       2046, 2208, 1527, 2111, 2209, 2012, 1528, 1440, 2013, 1925, 1927, 1926,
        1529, 2290, 1852, 1853, 1825, 1855, 1854, 2300, 1530, 1856, 1857, 
       1826, 1859, 1858, 2301, 1531, 1929, 1930, 1928, 2210, 2089, 1532, 2024,
        2211, 2118, 1533, 2047, 2212, 1534, 2048, 2213, 1535, 2150, 1684, 
       1536, 2151, 1685, 1537}], 
      Line3DBox[{1541, 2152, 1686, 1539, 2153, 1687, 1543, 2154, 1688, 1545, 
       2155, 1689, 1547, 2156, 1690, 1549, 2091, 2157, 1934, 1976, 1691, 1977,
        2104, 2295, 1895, 1830, 1896, 993, 1978, 1897, 1898, 1831, 1899, 2286,
        1692, 1802, 1980, 1981, 1979, 2116, 2311, 1693, 2020, 2019, 2158, 
       1694, 1555, 2159, 1695, 1557, 2160, 1696, 1559, 2161, 1697, 1561, 2163,
        1699, 1563}], 
      Line3DBox[{1562, 1698, 2162, 1560, 2222, 2056, 1558, 2221, 2055, 1556, 
       2220, 2054, 1554, 2115, 2219, 2025, 2027, 2026, 1553, 2023, 2324, 2117,
        1931, 1933, 1932, 1552, 2101, 2291, 1867, 1829, 1866, 1865, 1551, 
       2302, 1863, 1864, 1828, 1862, 1243, 1550, 1860, 1861, 1827, 2285, 2090,
        1548, 2218, 2053, 1546, 2217, 2052, 1544, 2216, 2051, 1542, 2215, 
       2050, 1538, 2214, 2049, 1540}], 
      Line3DBox[{1565, 2057, 2223, 1564, 2164, 1700, 1566, 2165, 1701, 1567, 
       2166, 1702, 1568, 2112, 2167, 1703, 2014, 2092, 2168, 1832, 1900, 1704,
        1982, 2312, 1901, 1902, 1833, 1903, 2058, 2296, 1985, 1983, 1984, 
       1935, 1005, 1803, 1753, 2169, 1705, 1569, 2170, 1706, 1570, 2171, 1707,
        1571, 2172, 1708, 1572, 2173, 1709, 1573, 2174, 1710, 1574}], 
      Line3DBox[{1576, 1993, 1994, 2059, 2316, 1575, 1995, 1996, 2060, 2317, 
       1577, 2175, 1711, 1578, 2176, 1712, 1579, 2177, 1713, 1580, 2261, 1754,
        1936, 1986, 1987, 1804, 2280, 1904, 1755, 1834, 1905, 1906, 2313, 
       1805, 1907, 1756, 1835, 2061, 2262, 1806, 1757, 1019, 1581, 2178, 1714,
        1582, 2179, 1715, 1583, 2180, 1716, 1584, 2181, 1717, 1585, 2182, 
       1718, 1586}], 
      Line3DBox[{1587, 1758, 1937, 1988, 2263, 2107, 1807, 1908, 1759, 1836, 
       2062, 2264, 1588, 2063, 2224, 1589, 2183, 1719, 1590, 2322, 2015, 1720,
        2016, 2323, 1760, 1838, 1909, 1997, 1910, 1808, 2108, 2314, 1761, 
       1939, 1989, 1990, 2315, 1809, 1991, 1762, 1942, 2064, 2265, 1810, 1763,
        2065, 2266, 1591, 1032, 1592, 2184, 1721, 1593, 2185, 1722, 1594, 
       2186, 1723, 1595, 2187, 1724, 1596}], 
      Line3DBox[{1607, 1728, 2191, 1606, 1727, 2190, 1605, 1726, 2189, 1604, 
       1046, 1603, 2227, 2068, 1602, 2270, 1775, 1774, 1601, 2281, 1773, 1943,
        1772, 1944, 1945, 1354, 1771, 1940, 1770, 2269, 2106, 1941, 1869, 
       1769, 1839, 1768, 2268, 1600, 1725, 2188, 1599, 2226, 2067, 1598, 2225,
        2066, 1597, 2267, 1767, 1837, 1766, 1868, 1938, 2105, 2318, 1998, 
       1765, 2003, 1764, 2021, 2002, 2001}], 
      Line3DBox[{1618, 1789, 1788, 2275, 1617, 1787, 1786, 2274, 1616, 1060, 
       1615, 2233, 2074, 1614, 2232, 2073, 1613, 2231, 2072, 1612, 2273, 1785,
        1952, 1784, 1953, 1954, 2283, 1951, 1783, 1948, 1782, 1949, 2303, 
       1950, 1871, 1781, 1841, 1780, 2272, 1611, 2230, 2071, 1610, 2229, 2070,
        1609, 2228, 2069, 1608, 2271, 1779, 1840, 1778, 1870, 1947, 2282, 
       1946, 1999, 1777, 2006, 1776, 2022, 2005, 2004}], 
      Line3DBox[{1620, 1790, 1842, 1873, 1872, 2304, 1619, 1956, 1957, 1955, 
       2234, 2093, 1621, 2075, 2235, 1622, 2076, 2236, 1623, 2113, 2237, 2017,
        1624, 2114, 2305, 2018, 1958, 1960, 1959, 1625, 2292, 1874, 1875, 
       1843, 1877, 1876, 2306, 1626, 1962, 1963, 1961, 1791, 2276, 1627, 2077,
        2238, 1628, 2078, 2239, 1629, 2079, 2240, 1630, 2080, 2241, 1631, 
       1132, 1792, 1632, 2277, 1793, 1794, 1633}], 
      Line3DBox[{1647, 1798, 1141, 1646, 1797, 2251, 2096, 1645, 2250, 2087, 
       1644, 2249, 2086, 1643, 2248, 2085, 1642, 2247, 2084, 1641, 2095, 2246,
        1965, 1967, 1966, 1640, 2308, 1968, 1969, 1964, 2007, 2307, 2110, 
       1639, 2008, 2009, 2000, 2319, 2109, 1638, 2245, 2083, 1637, 2244, 2082,
        1636, 2243, 2081, 1635, 2094, 2242, 1845, 1880, 1879, 1634, 2102, 
       2293, 1878, 1844, 1795, 1796}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{721, 914, 2119, 722, 926, 745, 2194, 939, 758, 2196, 951, 
       771, 2200, 964, 784, 2206, 977, 797, 2215, 989, 2153, 810, 1001, 2164, 
       823, 1425, 2317, 1013, 836, 1112, 2264, 1026, 849, 1116, 2267, 1038, 
       862, 1121, 2271, 1051, 875, 2234, 1129, 1062, 888, 2242, 1136, 1072, 
       901}], Line3DBox[{723, 915, 2120, 724, 927, 2128, 746, 940, 759, 2197, 
       952, 772, 2201, 965, 785, 2207, 978, 798, 2216, 990, 2154, 811, 1002, 
       2165, 824, 1014, 2175, 837, 2224, 1027, 850, 2225, 1039, 863, 2228, 
       1052, 876, 2235, 1063, 889, 2243, 1073, 902}], 
      Line3DBox[{725, 916, 2121, 726, 928, 2129, 747, 941, 2136, 760, 953, 
       773, 2202, 966, 786, 2208, 979, 799, 2217, 991, 2155, 812, 1003, 2166, 
       825, 1015, 2176, 838, 1028, 2183, 851, 2226, 1040, 864, 2229, 1053, 
       877, 2236, 1064, 890, 2244, 1074, 903}], 
      Line3DBox[{727, 917, 2122, 728, 929, 2130, 748, 1432, 2320, 1433, 761, 
       954, 2142, 774, 967, 787, 2209, 1437, 1438, 800, 2218, 992, 2156, 813, 
       1442, 1443, 2167, 826, 1016, 2177, 839, 1447, 2322, 1448, 852, 1041, 
       2188, 865, 2230, 1054, 878, 2237, 1452, 1453, 891, 2245, 1075, 904}], 
      Line3DBox[{729, 1083, 1084, 2123, 1190, 1089, 2253, 1090, 1321, 1435, 
       1436, 1434, 2321, 1092, 1193, 1094, 2256, 1095, 1195, 1097, 2259, 1098,
        1331, 1440, 1441, 1439, 1100, 1198, 2285, 1102, 1103, 2157, 1338, 
       1445, 1446, 1444, 1105, 2168, 1201, 1108, 2261, 1109, 1343, 1450, 1451,
        1449, 2323, 1113, 1204, 1117, 2268, 1118, 1205, 1122, 2272, 1123, 
       1367, 2305, 1455, 1456, 1454, 1130, 1428, 2319, 1426, 1427, 905}], 
      Line3DBox[CompressedData["
1:eJwV0EsopWEcB+B3cHJciqKIMklZKGWhLDRl47JjzkpZKKWm1BFSOCUkGqUs
3BYWdiQaETMbs5nZmM2wYOGyoEzDhqQsKJ5v8fT7/d9LX+9X3tWbSH4IIaQ4
Swvhe0YIFbEQfsghXuk0x7JCeNHXOKDS2k+ZIuhdvOnr/KLK/FuOkqH/i4fQ
LdPZsHZItf5HHtsbl3HzFzLZNP+lRn+xf6RPkmvuIYct8wmP9mvNp/o0+XqS
PL6Zz6nTL+QMhXofBTy7u23tinrztZylWB8g7t1FcsfaDZ+it8g5SvX/7g/K
Enat3dKg38l5st0fMacYppEmWmjm0v1l58b1CcZopY1E9E/tf5YrznyUU5Sx
b77nyX67+UFfjd6nf6Uj+te+vSiXWIjusEe/c+82qELm
       "]], 
      Line3DBox[{734, 921, 2124, 735, 933, 2131, 752, 945, 2137, 765, 2198, 
       958, 778, 2203, 971, 791, 2211, 1464, 983, 804, 2219, 1457, 995, 2158, 
       817, 1007, 2170, 830, 1020, 2178, 843, 1032, 856, 2227, 1045, 869, 
       2232, 1058, 882, 2239, 1068, 895, 2248, 1079, 909}], 
      Line3DBox[{736, 922, 2125, 737, 934, 2132, 753, 946, 2138, 766, 959, 
       2143, 779, 2204, 972, 792, 2212, 984, 805, 2220, 996, 2159, 818, 1008, 
       2171, 831, 1021, 2179, 844, 1033, 2184, 857, 1046, 870, 2233, 1059, 
       883, 2240, 1069, 896, 2249, 1080, 910}], 
      Line3DBox[{738, 923, 2126, 739, 935, 2133, 754, 947, 2139, 767, 960, 
       2144, 780, 973, 2147, 793, 2213, 985, 806, 2221, 997, 2160, 819, 1009, 
       2172, 832, 1022, 2180, 845, 1034, 2185, 858, 1047, 2189, 871, 1060, 
       884, 2241, 1070, 897, 2250, 1081, 911}], 
      Line3DBox[{740, 924, 2127, 741, 936, 2134, 755, 948, 2140, 768, 961, 
       2145, 781, 974, 2148, 794, 986, 2150, 807, 2222, 998, 2161, 820, 1010, 
       2173, 833, 1023, 2181, 846, 1035, 2186, 859, 1048, 2190, 872, 1125, 
       2274, 1126, 885, 1132, 1133, 898, 2251, 1139, 1140, 912}], 
      Line3DBox[{742, 1087, 2252, 1088, 743, 937, 2135, 756, 949, 2141, 769, 
       962, 2146, 782, 975, 2149, 795, 987, 2151, 808, 999, 2162, 2163, 821, 
       1011, 2174, 834, 1024, 2182, 847, 1036, 2187, 860, 1049, 2191, 873, 
       1127, 2275, 1182, 1128, 886, 1134, 2277, 1186, 1135, 899, 1141, 1189, 
       1274, 1273, 1142}], 
      Line3DBox[{900, 1071, 1314, 1269, 1187, 1268, 1370, 1267, 2293, 887, 
       1061, 1416, 1313, 1183, 1262, 1366, 2304, 1261, 874, 1050, 1413, 1309, 
       1179, 1357, 2282, 1358, 1356, 861, 1037, 1407, 1406, 1175, 2318, 1347, 
       1348, 1346, 848, 1025, 1400, 1399, 2263, 1171, 1424, 1423, 835, 1012, 
       2316, 1422, 822, 1000, 2223, 809, 2152, 988, 2214, 796, 976, 2205, 783,
        963, 2199, 770, 950, 2195, 757, 938, 2193, 744, 925, 2192, 720, 913, 
       1082, 1143}], Line3DBox[CompressedData["
1:eJwV0U0oZXEcxvG/yzUkC2KhFEpJSk1RaqTsjNl5WUwhUUrJrUlK3ZsyRF6m
ZkFZWIys7Wcs2JgUG1KUZkoUhcTiegn5nMW35/k9z+/8z/90KvoSbcMZIYQU
ZjNDqMsKYSEeQpquoZvvQVZuCF00aadaPs/P4Rd/j698zM4dn7BTRqdl5Vjh
O+hVTgidtB19dgrlk/x3LPOt9As+o1Mfl6X4POcm6aL5Gs3RWbTFzhNGzbl2
SulP+SWa+Av6SX+NR+8ekZXgh/wcjfwZrdWf4pu5OPou2X808G+e+8dX6A+R
kBVgRnaMev7FzhFfpN/BkCwfU7IDXOg/mvf5D/oNDEZ3xoTsVr8X3cO8S59j
IazbGTBn+644HZf/RQ2/TW/srNrpN2dE/0W2hSp+k57ol/RpZ/fKXmVj+INK
82/6gHdcZ0OS
       "]], Line3DBox[CompressedData["
1:eJwVzs0rA3Acx/GvYS0HB+LMSklKKUr5B1x3cHCYzEpZmKtaKaVEKQfK1R/g
D7CLHTwc7OKhJuUhF8UiFxF57fDu8/T91a83t5RZbIqILDabI0ZaIpZxkooo
yQP8M1+gRbmHPsp5Oit30n286KbppC5Ja/IuncKE7hs3up3GDcblN2zzGQzx
dfsT7W6N2NI9YIy/p5+2tO0aRV0HNvS3GOV/7TW+y36OBV071nUftis6LF/S
lL2MebkNa7p3N9XGP+QL+pOIOHQzJydRta/qzzAon9K6mwM3eTmBkq6Cfv6Y
3tlfvdtzM6P7062gjD75iH7hH31kNp4=
       "]], 
      Line3DBox[{908, 1078, 2247, 894, 1067, 2238, 881, 1057, 2231, 868, 1044,
        2270, 1120, 855, 1031, 2266, 1115, 842, 1019, 1111, 829, 2169, 1006, 
       1107, 816, 2311, 1460, 1459, 1458, 1104, 1463, 2324, 803, 982, 1101, 
       2210, 790, 970, 2260, 1099, 777, 957, 2258, 1096, 764, 944, 2255, 1093,
        751, 2298, 932, 1091, 733, 2297, 920, 1085, 1086}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
d4vU869tG0D1qj7hQz/jkJaPdjd7CnnfHXZ3iKmM4q+d4irCki9RTd540fP0
AuwXpOfyCiwE88lpFvPQAIzWO8wUQ845SzAsUbqA9Enazrb30i64OnCVroH0
ya28WRtT1zogLFqhzeOoC+qbSyVZkPxWNByMVNU23LtfxyVh+wMc3+7DHMBG
gIXJVtQxGYDHg0/Xdh2xQKXV6cPtIRSYO2xSL7CegbSCuvqxD21AwYFBjJWc
w6KeVJbrkS7ciPbicet6gqd53XyxgMxT4d9SUVN5MGJyO+Tl+GtwvM5wTpzU
//EvX8ruvolBimPHuYvbneFO018uB9Jvh9Pm48WKYqGipvF595ZACEjtnDIn
+WGL4vmDTetvAB650PiyB8HU6fejemTvVko7e99+90dMuczpU3/cB2QorDpN
JAfeVTO8rYTFoJoY3zRYHgJG1ZJt30j+PJzVZnLWexBpfvKJKBjawcbC+9ei
6hToVXMWjdo5hiJ6wrO5Q2mgkn1E5sX3eVAJqpZnPV4MNTPLtoUumRC/riMz
TN475wfN/IrFg/hiS2DEjyc5UCKsFJR6lQKii7vauZQ64N5nzbGN/Dzo/1l7
lonkt2+fbkSmJLZiQ+23hFPsBfBhsK0IWQjIZhfTZknrh66ecD+x+GzIskyj
NcinQJ1WNZfLtQzMtdPNiN+fBzHvyn9GkffRdrfO4+3nOvA7a4e/YUMiRNq9
++hO3pfV8u6T4VaZwAsqi7NdKWDjrnSdlSDgOXP9X9HfxnjX0bxMijYE8nss
hU1IfjgbqVFrcOUxGNwo4GVQfgVnLlTYa5L8ILD3j2Ej8RZkT8ld3btijJe9
F3e9aCbAV1OyUfRWAxY3t+7j+h6K666jtQetSL7tFH2Z8qoY+P++/BHyIAav
0Un4/iD179uoepTr5DByWBkNiGenIx9F9q3j4gJMet23NV0twntRjn+C4kPQ
fW0nT+sMyb1J1gESx6uQsmaqHUWjh0ly3H4tneS98B8VHTYeRLaeWe+Cr5EY
aTjz2FabAjspFYqLdB3gks727Qt3DE6tXmCX+U2F/zY16fJ0t0NgzsUzOzPz
sesa5AZSqXCr5u3LzdbtuLb5k1xkQBi+KCioDaEj38/7/OBobzt6ZXwq/NaU
g6HAbnr+OxXc1Q79Wt8zCATf8uOkFyEYkSf0usCCAt73WSc9zgxCX7PD89bl
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
mZbk+26zd+NCIrFNaH/YyqiCOh3SN+9sPKRLAv3k80q7/LoQ5Ytar1sj1ojW
80zHUvwstIUwkvJZG0A01tQ0eKsbSvHS+yLoQoJ783rKbp1t6NcHRotnB6yQ
AY/Aah8tCZQelHOTHnSjpG80pN0LliDz63VopP0sDGtynW1sbYKsX/yCXR1u
8Fk3bpJfiwTZR8aPMZ9+ib7IFWaunPIFB8nL5s4jJPjL/iBGaPINNKoOV1xd
dAQ93ccXMwNJ0KCyxrD3YxiEfOKX+SAdDA8ZGD/Z43WfsZDIR2LxKO5kR1N5
HDWIKx3dzoPbX5/d1bztQwC489PfaN8VjHb1nEq3xHo7lTbo1bbWggI1l77t
m7iPgjMrdx7kJoGpi1wlU1o3UvpLTTK+Y4+kwztbFk1noYD317U110YI9Py+
t6DQDa0sb1dfMiX/rn98WsSsHe2t5V83MXiOPHQ4/FIpSNDGujp5Oeg9eLYL
vZ3cqovEC44/4/SZgUSR/l9y0IW86axqKKbtwGrr4O/KrFnIGFub2mzXCLt3
Mp9UZPGGcleZDmYzvC6Nx/Ze2VGE/EWzQ7vLA6B6tKJReJIEEbTDF/Z31ILl
r6hnl5ncYKpPWrUtD9uP7d7fbRdiYdV8oGiIPxTUS3jYJnEcsftK5S52vwBt
OliYPrvwAH5q39RlmcF2yG3OyyMcDpc5dTYX1gcgiaa6/nfk/5s2FBYWc+xA
b2oL060mGNHTz8bL499nIal031pJTA96+pumU0/REjmrakeo3JgF/6z22fb5
JniRmcvit+SEVGO233bXwP48iJFm7Xs74qZks2huNUEkIYvoI2uzwPQnT1Tm
z3u4YStSPJWijqbC1DazWsyAUuKV29FMnYhi8/FfBg9sYOZVNk9v7yxovl0M
mFuoB0HN4JMnLDxBonUC/XYlgeVE3+ecW7moOjF3KTHTD9o0+xhfYr897xIc
/uBrFezn+DY/8coJTqr8rZFtxn4j5L1M7u8EeDiem8rPGwzLasoWtFg/B+6L
+e85Xol6HzwxKnlCD0c1Urtb8X4c/9GeMiMWC0qN86SCnmOI4pzbtnSsH3vL
SKd/9LvQqyf27UGxTpAsvk9pX+oszNVLDbbb9SLX8/e1zDb7QcrzwBpejll4
aPGV/4foOyiiymux3BMIR8botzTKkmBTidXk2JEOdMUv7L7jqwj4xfNN4gP2
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

    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{371.614206837263, 357.3546354484918},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {-0.01410133766777577, 0.02069749917449548}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.4796663776796084`, -1.0844444406926943`, 2.8433374168070906`},
  
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6748338718259563`*^9, 3.674833880223381*^9}, {
   3.674834103380261*^9, 3.6748341514508953`*^9}, 
   3.6748342126871634`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzEfXVclVn3/R2csQNQkIZLN+jMvNMzxtitqNiB3d2t2Njd3R3YgYqK3V0g
KnYhDeu39nmeC1ff9/v3j8/ninDvfe55zl577bX32edQq02/Tu27t+nXOaKN
W5U+bXp16hzR161yzz78Vb7vDIbv+vHR3s0g/4fBYPpHffWXf/Qf/j/8f736
lg/p6enIyclRP/3wP353Qnv5OvWtKPbt24dp06Zh5syZePbsGd6+fYu5c+ci
NTVVXd30/KxZs5CYmKi/e636Vhy3b99GZGQkkpKSEBMTo66SkpKC+/fvIysr
Sz0/fvx49fzx48fV8/x9jPlV8mPv3r3YuHGj+jwZ6ogRI/D+/XsL/ek9e/Zg
8+bN6um0tDQMHz4cHz58+OYimzZtws6dO3MvMmbMGDx9+tR0Ebn+rl27ci8i
T/N+/sdFtm3blnuRUaNG4cWLF+YX2bFjx1dP89a+uciRI0ewaNEi9ao3b95g
5MiR+PLli+kihw8fxuLFi9XTr1+/Vk9zzr65yKdPnzB58mQ1munTp6ux04QW
ul0/fvyont6+fbt6evfu3V9b9nv10QcOHMCVK1eQnZ39/f/+9Yn/RtIKHTUZ
GRnQvwxXtaeW6RcRMMlkDxkyBMeOHbtm/mx+nDp1Ci1btlS4EesvX75cDHZF
e9VS9a2gzL6ywqRJkxAdHS1TpOZffnfp0qXL2quXqG9FlM2mTJmC2NhYZQa5
BfkSnA4bNgxDhw7FqlWr8PnzZ8NF7a1qig3F1GDXr1+PFSvUnWHhwoU4e/as
+v/atWvV22Q+5flx48bh7t27hgvmlyikXj5hwgQkJyery8mU82XqTvXfGyz0
uTl//rxCsACFU3hOu9Ii/Upy12Lxx48fqwFkZmaqGRDvEDg9efLEYDIVkYcZ
M2aoeSSU47QrLdTNIzMiEDh48GDuZ4vviXsIBOPi4vLraKGdcejQIWUuvlx+
NpzRrrbAzKIySWKrXJzlU3Qg08sLc/DaSxMSEtQEyIMAPm1+oXxqqsSEBDB/
0n4nNz169GgxsaGwfhW5cYGQzDjfE6tdZb7+jufPn6t3PHz4UJ+OfLhz546a
bHoeiUu7ihCNTKcMm6Y/qV1lnv4O8VGZQN57LhdevHhRTajMQTH9KmJWQYJ8
Ip/XfWKu2dQIMPWpMV3o5MmTmDdP+6gS+kuJW3WRNWvWyHCOm18oHy5cuKCm
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
qln62iYP1Kwciosrec3TTsihb2SSo9PJE6kc0xcSYDKtkswxJ5NckhmkP5FU
Xk+wQsJoSzwaUQI3BhRHtRBrlLCyRuduml/Y6ZAXfpZyxOrVq5XalJUHU9Xo
2LFjqv1Hcjnhc6kqyZfEOjGVELjUoeR5WekX36JJO2gW6m9G9aJhRalqFqrB
rPAJXJ3ssKVdYSTQax/SX57QQqf6GzG4czjiBhnxclRxvBxtRQazQtpkK+zs
6oLa/4RgbFMfvJzO8a8uhZU9mIzUDUQaIyqIT2zl9+26tYRJJZod0y111sxS
wjqk8ExVkGIWNC5A03KmyCpUz1CQ9cILB7f9i86dWuDvf2qgQZ0QbFvsgwyx
8mM3JXHenTWieX2qVFoRV+RznJEjMogSJJ0SJJWhKYXM+oVj+0L2SiFzpSy0
YRQtiXdTrPGM9/d0dHEsae2E+uWCsaBRcVR0M8Cb4WBv9P7cjJrgV2mQLHvI
1zf5gWntSgTxiRMn1EtkOUnoKj093UJ/2ozclI4R4ZeUlPSNzcSaslQlfRua
zbzRpVsvhIUY8JRM+3icNRLo73dHlMbormHY1TcECbRf/DBLPGfUeUW7ved9
ZU7hvY2xxYB6vgirGIwtvYxoVCkY96fRJht4Z+QSCP9t0m23i49oM7ud1O0m
IVaiBHlr+wJftGocguSbYgOjlqp7aYHoqUlNuuPZ9VBMGtcELZo3RLUqv6F7
u0Bc2OuNVJq8X+cgjOgZqFXS9AwthwEo84wLg54TUhnFU+noqUJ7HFoqnSuN
zpVG5/owvSTe8LYO9LJHpd9DsLYdM87+xXCyWzEMKmcBB8v86NGrnyzb5q7+
S5TRuS037ZfkRVbTxGkY6ovp9hF/kxKSfL1//960cm8yn/SUSLFEGreOHj2q
AEDr6ubr902YevTokW6+Ojh+4hQ87AvjIsPSMwbMBJoxkSQxr3clLOzzL16O
KY6nIyzxmCFMzPhMN+M7KrGUSTRllDW2dXWFX/BPaEeBm7yA5lvJOyScsap0
ninFjDt1M0oIO6qbURWyXPDssDtqVS2D81toswdumooyLaiqUqO+qpWouWD6
M29Eb6qEwQNaYHDff9GcppcypKRP6XfdtbW7W1o4y6FrZ1JEZxAyaRQtaaLE
JHxR3KTT9dI51gy6Xuqckrg/zgYNKwZhVitX3BtRHBf7F8eZXsVwukcxrGxc
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
Rej/V70ttkiaY6+qqRcnOOt9KHZ5za8U7ynbHDGtuy/qUSjP6OOLpG0uqsqj
LZw5YUpvP4zsEmAhIc0Q+D9aG/S02hTIHuc1FU0a7o/JIwJxas/fGDKgBfas
/xdqF3uSMW8r6Etty+dVdapGiNLN0at88IWqcM9iD9QlVfZt74eTyx1wgVR7
nInhPqbZ2+mc6ykeVjDFXtCROplOPaVRYYypWRD/SlCzKiFBzXxftnQoy3m+
1DjNvsaPJNumA6FsdPXTu3dvdRTf3BG18X6rIz4zZiVTaaSL51J9nFnvpSrE
XalKHhxwR+o5etphUUiMxJvs8Wi1LXaOcUL1csHYO4IDn2iNaMrjnRz0NlFJ
RP4eJmDbiJfVTQVHBYmjAgpHy4ij9fL7DiVQ/e9AzOroqJoTz0wriUtkt5vE
0UPiKGmnPT6TjU4tYZwKC2Z2HoxzKz20zQO3tE1TI3tRuVBqquMCxFhiPIkv
kiFLVXWXav3bamdw05ZVduutNmqTV2mMbuWH0S2pQNZqMQ3rdLlt6kDbpVX/
n651wbiOfkpSLxxEA+5nnN/ohgY04LOdGjt+VamTgxSvfxXLcjcYxbvj3nEv
NKD4eXHeQ7U5vbjMaZhUH5PHNsajs/pREc/cv95DRjzJ0XZyhkhEs2A0qBWK
HQs8kUihdn+vPa4S9nEM1THMuw5wKncyp91I0bqKrrqIpphFl57CwDCxXiG0
/knC2ndo01YLayYikvYzORtVOqsTEhKaakBqbSaGZDeXnM+lAameOhDWxzcQ
g7s1QvwyF9U38W67Az4wx/nM0JVySluqeH/GiOkjAlCjShkcWeWNNFL1B2n2
YVB+zNe3rh+IKd08cGNpKZwmCI5T2h2aoK0sHhxqiaOk02Mihkg+25g5riGo
FhFMc0lOixoUQMS/bgiv6KNWBHb3L46DzDZjxlvjLGfiCq93h7nTExr37S57
vCHYV4zyVqv9UYP98eKkESfXeqNR3VB8uqpvzBajSXiLMzt6RAhpp94gdUgv
2Uufz34HXJntqrLxZ0v488a8xjsFqI16I852s+YqgurmEld0bRxIgLaqG2wo
gvmDfLVm0VhdZp/Xw9l/N8rpx6UwXWD23rdTMGaPDdCarlSTqhHZvIfjW//C
kP5kprUVkfbIUx00krszkeFN9pNWq1xGyfCq/5KZlnnhAyV3EsPsA97rdTrJ
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
dyS2Jrgic4ItTtGSTwyxURXWR0m8D8XJhhMLHKBbP9rdCqfjrZHJ318lQb83
zR69GwWhT9NgvKXr+rDeFd+kJCHDDY+2emFy3xA12GxCv1A8SPPRBmGrrSte
ahrw090GVXV9mB5CrF6rdvXKXTGr0RRDnhmXeSz9lpwl5OYtNA9rqRu7D3Lo
zDct1Pree3eOxKMzAcrCZUnMs8wAqmR9O9MTZeTaAnKa+efbgejXqzpiYlrg
hDhzffhCrhN31szcmFSW043bBlzY7o9y5GR/lyumTiHbNo7A0C5BGNXFDzN6
uJGp2GNOR2vMamOOKU1NVWXDIFpXlzIFVZN0QEAgVq1Zm9vzumbNGlXNKv8Z
l+rl2YJQ5r/2LmtjZL28MHDNs/cjwXmAIIMTZtY1R7+2tTClTQlkdDLDqV78
7CgOnzOs31/uge7Nw9G8XhQyVvjgNGXCUtr9UF5ZNzLyDiXzo1JxT5QuFoz2
5S0xvKEpJrW1RHKcNZbL5AiKxr2kBUfJVq+sdcGd7W7YOctX2aPY/rbJpCZ7
PFWfWxYFYg497pnJHmhZKQx96gbhkRzwjdYO+Z5ShD6Tggoy+RdCfRZrglNq
x2R4o8zz+7JHW4i2k1GkYc0ofDiuHZR8I0ufMyZUSagxA8NxL4PyKNMLb8ka
nu/3UC0r98n079I+7/E6+8cEoXfzYNyc54BLpCYXZDzABDslIk/LPG++tmNk
60do+0e60Mt3s8QZev+rg62wpKMHahOv58dpCyJeE0cfZKjgJldkkaXjoODM
gNE9QpXtTx8SgjfGokjafP/2YRjVPVQrBzqa17N75WEyhv+fydDiXp32Uye/
VJaSQdbVpfn36lfVJUnWcs4f4weHK+aSPJEinUY/m1/ju0Vq3ZKFpddNVrTr
SzifX/BH0/qRWDf/N4wd1kgNoHl1UbVB6E/i+t27556neKMPpdjkAaG4meqL
8fFhKtW+PckHT3Y44+oqR5xgKEynk9jOD3lNgg0W9rBCInXn6IZmGFi5CCrR
yzuY50PzFq0U7zaWSghV0f/LLZW4c+eOGggs+yMYBv7UIFA7D3uXqlx5FKPL
X7RkGX51N8HotuUxpE1FbGhpjs2tLZDW0Qon+9rgygQGazLS55vcVQ2MpEVX
TA9UxzorCIMRVQujDVlX6eLhaFbMFK2L51eEp09lTahOirZAcmcrLONjbRpm
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
NewtTJXfZGZDE2WnL24tTSqFIaZ1LFqU80FiSSMlgtqXKIROZQpjIMlFpvRc
JGjv4+y4SB08Ldkf9asVR95EP1xYSNpLEhPfMBy3MlzxbZYQF3sSCVLEMdZ4
MNwKy+Jd0bxyKJpXCkZmUy6GrblgNhI7eWOkEMmk/j9eR5rOvxVCYjlz/PFL
BPpUtVY9vGdIDxVOgxVtzHCYM317L0fUKl8cV0c5KS3+mO/3kDr9AYXYvaXO
uLuIiyNn+77BroimQLo6kgJEFkCiyY0J0v7ZVvVFkT5K1+SeJOMyBct5EooL
RKLZ0qmes39nsg32kP5u72yBHZKL081CJSZe5My/lW6HdUnU9KTeE5u5oVHl
SNyc6Kai3yIIP/AzvCZxkb6RT3jOJNT5jIjziijzcaINZsT6ILVhAJ6Q3t8m
gRJn1lsDtAoxQRxDkbx00L2iCuQtsLajI5pWCiXiWSpDR+nJogrkEn50/xZT
dHlsrXTSbUWZ08xSeZnu7mqNrR3NVM2uWDxLgZx4iyxsbqr8DZbI5lVTE6RV
t0aj370wuo4kz5sgr7sZzqdb4mC6MzJ7+qN3uxCVCCPtdXu2CkHzupG4usxb
7YB83eGOT9vd8ZGy6N0WN7wh5PxDefSScPM8l1BDuPm43FEVDCZRZt2aYYfz
XBkuz7THDR53eUjbiXvTSEAJO7dlK5Ji8jkJaWsxQ+rtiqtpRFrZBZdoPK9N
Hq/JVpLZbfzu8vhdXsvXhLEPHA+dG4dh3Ug//DXaF7U5Xuf288ZxCvN1ccWw
njBzLNMWB0kyt1EM53JcrYg3RXItZ1T5NRRTosyVnFoba4rNhLE9YiEtoTaS
3OMc22ckTM3P+0BKi+Y7AEu4gsx3QTvOg4UD/bFsqD+ia0diWFIIbmzwFqjR
2lWbaPtVV3/qen3PB4/O+Knw7/515DcPFbLcVn2wDaEWA9pISFWed88bCyeH
IDUpXPawtLCLeDLe9MKjQ77KrU6SPcVv5Nkhzcfx2T5XFA+xxNGjeiTF5F/e
YleuXFGgIfvdsj8ku00SLtGxRksMLKLCtnooV91ki/yn4tmffq0hVwF5yGDB
LHk/gmGS3y0/Hz16VJdQ/XDw8FG4OtphUPXCWNVe2hoUI0oZY3Rdc3RvUxdx
dX9B2ZIhP+RVqYIKpTpS7vQhX5nAv19ILiDi9uosW0zr5asWmN9+LaUWmy+S
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
dcKMmr8s8MRDXj/Tru7Rpu4wSt1iRL83zhlDGZUGNwzH49muuDvZlTblaqZ4
zbi+ohdZzhWCvx97WJ1+W1q6GTmBbS1dTLTal76pprk10SS7EpPRaI0i1Q+M
xtP6hKF6pQRs6umCY33tsbafPyqUyoMN4yOAUwFmTlxNitKy0tTU1tHBqFcx
Ds8XeuHDck/8xfv3aqGWkboxKr2Y5mrnihf8+15McsHbKc4YnhrGvzsczwly
BQjJ0cwGQNmU6VWWxld3K1qparmrjav5G/a3tpgl7SiDWpLsInC0rRWgdjFo
HWmdE7PreqJuyUgzHZTemGgkSutYAXhWug4yj9TIuq6oWiEB83g7+tO8ehKf
NyrkhobFA9Gxop9RYetXxw8/jKSJE9D8uMAd99a441cCmJtrfTCnX6jRU6yf
lIDhXaNxfXMIrm/0REKoHeYvXGL3pS3JUlQWpLUUtGzJ3ZbZUJ5SVqagpIk8
lf/Jt4qbT+/Dr4+fYO7M8Vg+OBZP1nng6VprHvYCz8ox+tIdJE1VyMI7V/fH
/MbZMa2etWZ7IsHvOCKp0fyjRyRlw9Aa2Yy83YCq2dC7jCr9WVE2f6hZFS4N
3yp5PUyl/8uOHpGo1iRQw/g90iVZ0ssH1el/hrSJwesNPvh7kbtZRPd6hlYW
WhMyb2lL7+a4G9sCz+ih3kQ4ZeOQN28+FC+YG5tae9HfK01vCVhrjbUekKpP
YypmM4L4PRSfCjI+5bfik9Cfuo/qFfEh4cqKlY3t8QPPyAay/ApFc+PuOA/T
B6/83W9LvPCY16OFniYu/czXdn+qG86N8ERSmThcmsTP0+dbi+nczBIUzc/e
JhG9qekcIr3r/dQ542DS9X2rh5hOGI2raZp8jyppbazmXmlEpU+2CB0dlhbO
cn+0bBiPUkXj0busCw53o78f6EN0HI/uLeJxb3cInhwOMuL9Ws6qZa1Le4cb
qYb3G73NRNPrFR6mq08bPV+RSKlp+A3v552xnqZx+uwgEq8JzkZd4Ld0+2Es
VTlBnX03bCvGVU5Y2cQLySWiDQGU9lW6hp5ilTp9FI8kMH6mQ06Mqe2PNhXC
TMzS3yPBzeW2qr/eLrQlJLVQeUiyJ1KrxWEh/YiMaWgZyVtkRvuiDkgt6I02
RZ0xv3YWrGvB2NSdiJix+Rjj6Tn6gOtzXPFwObHDag8cne6Hfk2jUJz4JCLE
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
XVwOzA==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sparse Basis", "Subsection",
 CellChangeTimes->{{3.673277052290266*^9, 3.673277061302971*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sparseCoefficients2D", "[", 
    RowBox[{"f_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"getCoefficient2D", "[", 
          RowBox[{"f", ",", 
           RowBox[{
            RowBox[{"switch2", "[", 
             RowBox[{"getrow", "[", 
              RowBox[{"perp", ",", "diag"}], "]"}], "]"}], " ", "i"}], ",", 
           RowBox[{
            RowBox[{"switch2", "[", 
             RowBox[{"getcol", "[", 
              RowBox[{"perp", ",", "diag"}], "]"}], "]"}], " ", "j"}], ",", 
           RowBox[{"getrow", "[", 
            RowBox[{"perp", ",", "diag"}], "]"}], ",", 
           RowBox[{"getcol", "[", 
            RowBox[{"perp", ",", "diag"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"switch", "[", 
              RowBox[{"getrow", "[", 
               RowBox[{"perp", ",", "diag"}], "]"}], "]"}]], "-", "1"}], ",", 
           "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"switch", "[", 
              RowBox[{"getcol", "[", 
               RowBox[{"perp", ",", "diag"}], "]"}], "]"}]], "-", "1"}], ",", 
           "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"perp", ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"endperp", "[", "diag", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"diag", ",", 
       RowBox[{"-", "1"}], ",", "n"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sparseIterate", "[", 
    RowBox[{"n_Integer", ",", "d_Integer", ",", "ki_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "i", ",", "hashTable", ",", "hashMap"}], "}"}], ",", 
     RowBox[{
      RowBox[{"hashMap", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "l", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"l", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "\[LessEqual]", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"switch", "[", "k", "]"}]], "-", "1"}]}], ",", 
             RowBox[{"i", "+=", "2"}], ",", 
             RowBox[{
              RowBox[{"hashTable", "=", 
               RowBox[{"{", 
                RowBox[{"Append", "[", 
                 RowBox[{
                  RowBox[{"Append", "[", 
                   RowBox[{"ki", ",", 
                    RowBox[{"k", "+", "2"}]}], "]"}], ",", "i"}], "]"}], 
                "}"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"hashMap", "=", 
               RowBox[{"Join", "[", 
                RowBox[{"hashMap", ",", "hashTable"}], "]"}]}], ";"}]}], 
            "]"}]}], "]"}], ";", 
         RowBox[{"Return", "[", "hashMap", "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"l", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "\[LessEqual]", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"switch", "[", "k", "]"}]], "-", "1"}]}], ",", 
             RowBox[{"i", "+=", "2"}], ",", 
             RowBox[{
              RowBox[{"hashTable", "=", 
               RowBox[{"hierIterate", "[", 
                RowBox[{
                 RowBox[{"l", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
                 RowBox[{"Append", "[", 
                  RowBox[{
                   RowBox[{"Append", "[", 
                    RowBox[{"ki", ",", 
                    RowBox[{"k", "+", "2"}]}], "]"}], ",", "i"}], "]"}]}], 
                "]"}]}], ";", 
              RowBox[{"hashMap", "=", 
               RowBox[{"Join", "[", 
                RowBox[{"hashMap", ",", "hashTable"}], "]"}]}]}]}], "]"}]}], 
          "]"}], ";", 
         RowBox[{"Return", "[", "hashMap", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sparseReconstruct2D", "[", "coefficients_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"coefficients", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"diag", "+", "2"}], ",", 
            RowBox[{"perp", "+", "2"}], ",", 
            RowBox[{"ceil", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"switch", "[", 
               RowBox[{"getrow", "[", 
                RowBox[{"perp", ",", "diag"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"ceil", "[", 
             RowBox[{"#2", ",", 
              RowBox[{"switch", "[", 
               RowBox[{"getcol", "[", 
                RowBox[{"perp", ",", "diag"}], "]"}], "]"}]}], "]"}]}], "]"}],
           "]"}], " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Phi]", "[", 
           RowBox[{
            RowBox[{"getrow", "[", 
             RowBox[{"perp", ",", "diag"}], "]"}], ",", 
            RowBox[{"getcol", "[", 
             RowBox[{"perp", ",", "diag"}], "]"}], ",", 
            RowBox[{"ceil", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"switch", "[", 
               RowBox[{"getrow", "[", 
                RowBox[{"perp", ",", "diag"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"ceil", "[", 
             RowBox[{"#2", ",", 
              RowBox[{"switch", "[", 
               RowBox[{"getcol", "[", 
                RowBox[{"perp", ",", "diag"}], "]"}], "]"}]}], "]"}]}], "]"}],
           "[", 
          RowBox[{"#1", ",", "#2"}], "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"perp", ",", 
          RowBox[{"-", "1"}], ",", 
          RowBox[{"endperp", "[", "diag", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"diag", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         RowBox[{"Length", "[", "coefficients", "]"}], "-", "2"}]}], "}"}]}], 
     "]"}], "&"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sparseProject2D", "[", 
    RowBox[{"f_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"sparseReconstruct2D", "[", 
    RowBox[{"sparseCoefficients2D", "[", 
     RowBox[{"f", ",", "n"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reverseFlattenSparse", "[", 
   RowBox[{"coefficients_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "k", "}"}], ",", 
    RowBox[{
     RowBox[{"k", "=", "0"}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"coefficients", "[", 
             RowBox[{"[", 
              RowBox[{"++", "k"}], "]"}], "]"}], " ", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"switch", "[", 
                 RowBox[{"getrow", "[", 
                  RowBox[{"perp", ",", "diag"}], "]"}], "]"}]], "-", "1"}], 
              ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"switch", "[", 
                 RowBox[{"getcol", "[", 
                  RowBox[{"perp", ",", "diag"}], "]"}], "]"}]], "-", "1"}], 
              ",", "2"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"perp", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"endperp", "[", "diag", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"diag", ",", 
          RowBox[{"-", "1"}], ",", "n"}], "}"}]}], "]"}], "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.672618929348575*^9, 3.6726189300061407`*^9}, {
   3.672618978737381*^9, 3.672619078806769*^9}, {3.672619110725196*^9, 
   3.672619157350065*^9}, {3.672619193438739*^9, 3.67261920365707*^9}, {
   3.672619319494294*^9, 3.672619334232011*^9}, {3.67262008873687*^9, 
   3.672620094647687*^9}, {3.67262015651656*^9, 3.672620440911069*^9}, {
   3.6726205701211433`*^9, 3.67262063754361*^9}, {3.672676267266491*^9, 
   3.672676273622691*^9}, {3.6726763961071568`*^9, 3.672676404788162*^9}, {
   3.6732665910954447`*^9, 3.673266619018859*^9}, {3.673266658674885*^9, 
   3.673266663847871*^9}, {3.673269162063302*^9, 3.673269227835155*^9}, {
   3.6732692710491867`*^9, 3.673269277740987*^9}, {3.673269310322139*^9, 
   3.6732693403785973`*^9}, {3.673277030707767*^9, 3.673277034000938*^9}, {
   3.673627599666712*^9, 3.673627625079471*^9}, {3.673627832142569*^9, 
   3.6736279276961527`*^9}, {3.6736279872590714`*^9, 3.673627987495245*^9}, {
   3.673628028968935*^9, 3.673628098048843*^9}, {3.673628424293537*^9, 
   3.673628424484264*^9}, {3.673628628463648*^9, 3.673628628574724*^9}, {
   3.6736287722368917`*^9, 3.673628812901684*^9}, {3.673628856743156*^9, 
   3.673628899406356*^9}, {3.6736294759345503`*^9, 3.673629483468844*^9}, 
   3.6736295186229763`*^9, {3.673630334859116*^9, 3.6736304022984457`*^9}, {
   3.673630813940319*^9, 3.673630816180293*^9}, 3.67370039301103*^9, {
   3.673782946285776*^9, 3.673782964305489*^9}, {3.6737829947533092`*^9, 
   3.6737830274457273`*^9}, {3.673783160702259*^9, 3.673783172602543*^9}, {
   3.67378326572011*^9, 3.673783308866743*^9}, {3.673783340462134*^9, 
   3.673783419519454*^9}, {3.673784243401146*^9, 3.6737842639124947`*^9}, {
   3.67378452670199*^9, 3.673784566047907*^9}, {3.6737846210423727`*^9, 
   3.67378464273494*^9}, {3.673784738036634*^9, 3.67378476262145*^9}, {
   3.673785866920824*^9, 3.673785886606626*^9}, {3.673786447224745*^9, 
   3.673786477162902*^9}, {3.6737875807216*^9, 3.67378764476019*^9}, {
   3.673787718978281*^9, 3.673787763520397*^9}, {3.673788178123294*^9, 
   3.67378822384226*^9}, {3.6737987403772593`*^9, 3.6737987463428993`*^9}, {
   3.673798833989471*^9, 3.673798854517301*^9}, {3.67379902265583*^9, 
   3.673799153787937*^9}, {3.6738031149029207`*^9, 3.673803117513816*^9}, {
   3.6738032301133327`*^9, 3.67380323901864*^9}, {3.67380351441521*^9, 
   3.6738036175419273`*^9}, {3.673804153635599*^9, 3.673804241715304*^9}, {
   3.6738042961849813`*^9, 3.673804296724662*^9}, {3.673873396311283*^9, 
   3.673873397564124*^9}, {3.673873430072906*^9, 3.673873433691896*^9}, {
   3.673917687909233*^9, 3.673917688455737*^9}, {3.674392109558003*^9, 
   3.67439214927945*^9}, {3.674834356865294*^9, 3.67483442684452*^9}, {
   3.674834458210053*^9, 3.674834482865242*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differentiation", "Subsection",
 CellChangeTimes->{{3.673277052290266*^9, 3.673277061302971*^9}, {
  3.673277119209675*^9, 3.6732771212386723`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"diffx", "[", 
    RowBox[{"f_", ",", "l_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"#1", "<", " ", 
       RowBox[{"2", "^", 
        RowBox[{"-", "l"}]}]}], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"#1", "+", 
           SuperscriptBox["2", 
            RowBox[{"-", "l"}]]}], ",", "#2"}], "]"}], "-", 
        RowBox[{"f", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}]}], 
       SuperscriptBox["2", 
        RowBox[{"-", "l"}]]], ",", 
      RowBox[{"#1", ">", 
       RowBox[{"1", "-", 
        RowBox[{"2", "^", 
         RowBox[{"-", "l"}]}]}]}], " ", ",", 
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "-", 
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"#1", "-", 
           SuperscriptBox["2", 
            RowBox[{"-", "l"}]]}], ",", "#2"}], "]"}]}], 
       SuperscriptBox["2", 
        RowBox[{"-", "l"}]]], ",", "True", ",", 
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"#1", "+", 
           SuperscriptBox["2", 
            RowBox[{"-", "l"}]]}], ",", "#2"}], "]"}], "-", 
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"#1", "-", 
           SuperscriptBox["2", 
            RowBox[{"-", "l"}]]}], ",", "#2"}], "]"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["2", 
         RowBox[{"-", "l"}]]}]]}], " ", "]"}], "&"}]}], "\[IndentingNewLine]",
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffy", "[", 
   RowBox[{"f_", ",", "l_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"#2", "<", " ", 
      SuperscriptBox["2", 
       RowBox[{"-", "l"}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#2", "+", 
          SuperscriptBox["2", 
           RowBox[{"-", "l"}]]}]}], "]"}], "-", 
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}]}], 
      SuperscriptBox["2", 
       RowBox[{"-", "l"}]]], ",", 
     RowBox[{"#2", ">", " ", 
      RowBox[{"1", "-", 
       SuperscriptBox["2", 
        RowBox[{"-", "l"}]]}]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}], "-", 
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#2", "-", 
          SuperscriptBox["2", 
           RowBox[{"-", "l"}]]}]}], "]"}]}], 
      SuperscriptBox["2", 
       RowBox[{"-", "l"}]]], ",", "True", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#2", "+", 
          SuperscriptBox["2", 
           RowBox[{"-", "l"}]]}]}], "]"}], "-", 
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#2", "-", 
          SuperscriptBox["2", 
           RowBox[{"-", "l"}]]}]}], "]"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["2", 
        RowBox[{"-", "l"}]]}]]}], "]"}], "&"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQvXeFs4xA3GvH4mYmHRBdVN1bDKLTNrGUgOifC7yq
QfQ/Xb9aEP1r+c+pIHreRqdpILpuxsTZIDqO9RiYlmv/tRBEN3ysWgSi96XN
2wii7+c+2gSi9dkPaJoBabbjJlogmkkoKvQpkE4o3pkEopn+z8oC0RoLkrJB
9De+KR2vgXRuKmsniN4aL+iYGA80Z1k+mJ5R8yMIRD/R3xICojdoHM9IAtIa
LJ8yQfSBzXwaaUD6xK8uTRBtd+qSKYgOvHPdGkSzMFo5gegtbN/A9L4yB/ZW
IF1W4wamUzqmHv0IpO+99z0OojnaCtg+A+mq90XcIBoA/Jyafg==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Algorithms to form the D Matrices", "Subsection",
 CellChangeTimes->{{3.673277052290266*^9, 3.673277061302971*^9}, {
  3.673277119209675*^9, 3.6732771212386723`*^9}, {3.673348508736053*^9, 
  3.673348513701818*^9}, {3.673726996709992*^9, 3.673726996814013*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dxMatrix", "[", 
   RowBox[{"lx_", ",", "ly_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"fullCoefficients2D", "[", 
           RowBox[{
            RowBox[{"diffx", "[", 
             RowBox[{
              RowBox[{"\[Phi]", "[", 
               RowBox[{"kx", ",", "ky", ",", "i", ",", "j"}], "]"}], ",", 
              "lx"}], "]"}], ",", "lx", ",", "ly"}], "]"}], "//", "Flatten"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           SuperscriptBox["2", 
            RowBox[{
             RowBox[{"switch", "[", "kx", "]"}], "-", "1"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           SuperscriptBox["2", 
            RowBox[{
             RowBox[{"switch", "[", "ky", "]"}], "-", "1"}]]}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"kx", ",", 
         RowBox[{"-", "1"}], ",", "lx"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ky", ",", 
         RowBox[{"-", "1"}], ",", "ly"}], "}"}]}], "]"}], ",", "3"}], "]"}], "//",
    "Transpose"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dyMatrix", "[", 
    RowBox[{"lx_", ",", "ly_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"fullCoefficients2D", "[", 
            RowBox[{
             RowBox[{"diffy", "[", 
              RowBox[{
               RowBox[{"\[Phi]", "[", 
                RowBox[{"kx", ",", "ky", ",", "i", ",", "j"}], "]"}], ",", 
               "lx"}], "]"}], ",", "lx", ",", "ly"}], "]"}], "//", 
           "Flatten"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            SuperscriptBox["2", 
             RowBox[{
              RowBox[{"switch", "[", "kx", "]"}], "-", "1"}]]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            SuperscriptBox["2", 
             RowBox[{
              RowBox[{"switch", "[", "ky", "]"}], "-", "1"}]]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"kx", ",", 
          RowBox[{"-", "1"}], ",", "lx"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ky", ",", 
          RowBox[{"-", "1"}], ",", "ly"}], "}"}]}], "]"}], ",", "3"}], "]"}], 
    "//", "Transpose"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dxMatrixStandard", "[", 
   RowBox[{"lx_", ",", "ly_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"standardCoefficients2D", "[", 
        RowBox[{
         RowBox[{"diffx", "[", 
          RowBox[{
           RowBox[{"\[Psi]", "[", 
            RowBox[{"lx", ",", "ly", ",", "i", ",", "j"}], "]"}], ",", "lx"}],
           "]"}], ",", "lx", ",", "ly"}], "]"}], "//", "Flatten"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        SuperscriptBox["2", "lx"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", 
        SuperscriptBox["2", "ly"]}], "}"}]}], "]"}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dyMatrixStandard", "[", 
    RowBox[{"lx_", ",", "ly_"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"standardCoefficients2D", "[", 
         RowBox[{
          RowBox[{"diffy", "[", 
           RowBox[{
            RowBox[{"\[Psi]", "[", 
             RowBox[{"lx", ",", "ly", ",", "i", ",", "j"}], "]"}], ",", 
            "lx"}], "]"}], ",", "lx", ",", "ly"}], "]"}], "//", "Flatten"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         SuperscriptBox["2", "lx"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         SuperscriptBox["2", "ly"]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dxMatrixSparse", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"sparseCoefficients2D", "[", 
              RowBox[{
               RowBox[{"diffx", "[", 
                RowBox[{
                 RowBox[{"\[Phi]", "[", 
                  RowBox[{
                   RowBox[{"getrow", "[", 
                    RowBox[{"perp", ",", "diag"}], "]"}], ",", 
                   RowBox[{"getcol", "[", 
                    RowBox[{"perp", ",", "diag"}], "]"}], ",", "i", ",", 
                   "j"}], "]"}], ",", "n"}], "]"}], ",", "n"}], "]"}], "//", 
             "Flatten"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              SuperscriptBox["2", 
               RowBox[{
                RowBox[{"switch", "[", 
                 RowBox[{"getrow", "[", 
                  RowBox[{"perp", ",", "diag"}], "]"}], "]"}], "-", "1"}]]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              SuperscriptBox["2", 
               RowBox[{
                RowBox[{"switch", "[", 
                 RowBox[{"getcol", "[", 
                  RowBox[{"perp", ",", "diag"}], "]"}], "]"}], "-", "1"}]]}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"perp", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"endperp", "[", "diag", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"diag", ",", 
          RowBox[{"-", "1"}], ",", "n"}], "}"}]}], "]"}], ",", "3"}], "]"}], "//",
     "Transpose"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dyMatrixSparse", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"sparseCoefficients2D", "[", 
             RowBox[{
              RowBox[{"diffy", "[", 
               RowBox[{
                RowBox[{"\[Phi]", "[", 
                 RowBox[{
                  RowBox[{"getrow", "[", 
                   RowBox[{"perp", ",", "diag"}], "]"}], ",", 
                  RowBox[{"getcol", "[", 
                   RowBox[{"perp", ",", "diag"}], "]"}], ",", "i", ",", "j"}],
                  "]"}], ",", "n"}], "]"}], ",", "n"}], "]"}], "//", 
            "Flatten"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             SuperscriptBox["2", 
              RowBox[{
               RowBox[{"switch", "[", 
                RowBox[{"getrow", "[", 
                 RowBox[{"perp", ",", "diag"}], "]"}], "]"}], "-", "1"}]]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             SuperscriptBox["2", 
              RowBox[{
               RowBox[{"switch", "[", 
                RowBox[{"getcol", "[", 
                 RowBox[{"perp", ",", "diag"}], "]"}], "]"}], "-", "1"}]]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"perp", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"endperp", "[", "diag", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"diag", ",", 
         RowBox[{"-", "1"}], ",", "n"}], "}"}]}], "]"}], ",", "3"}], "]"}], "//",
    "Transpose"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.673277867319282*^9, 3.6732779300785646`*^9}, {
   3.673277978146747*^9, 3.6732780613417473`*^9}, {3.673278163936036*^9, 
   3.673278194240142*^9}, {3.6732783469534073`*^9, 3.6732783674885817`*^9}, {
   3.673278532659255*^9, 3.673278558822431*^9}, {3.673278639088067*^9, 
   3.673278640005465*^9}, {3.673290353189601*^9, 3.6732903560928698`*^9}, {
   3.673290433654249*^9, 3.673290460510437*^9}, {3.673314006761815*^9, 
   3.6733140253354063`*^9}, {3.673347895510769*^9, 3.673347979542997*^9}, {
   3.67334800955755*^9, 3.673348010890189*^9}, {3.673348519527342*^9, 
   3.6733485396519337`*^9}, {3.6733720182152987`*^9, 3.673372091710594*^9}, {
   3.673372138253531*^9, 3.673372155572139*^9}, {3.673373040842484*^9, 
   3.6733730522313433`*^9}, {3.673576517299284*^9, 3.6735765213924427`*^9}, {
   3.6735777990523787`*^9, 3.6735778022107058`*^9}, {3.6735779933788157`*^9, 
   3.673577993517743*^9}, {3.6735782590440693`*^9, 3.673578266240716*^9}, {
   3.6735783990495977`*^9, 3.6735784109048443`*^9}, {3.673578875313389*^9, 
   3.673578905089498*^9}, 3.673579073462871*^9, {3.67357912109041*^9, 
   3.6735791212321453`*^9}, {3.6736291034321833`*^9, 3.67362913050037*^9}, {
   3.6736296430613728`*^9, 3.673629730192254*^9}, {3.6737828651909122`*^9, 
   3.673782876276456*^9}, {3.673783015579423*^9, 3.6737830232833347`*^9}, {
   3.673875729211529*^9, 3.6738757646233187`*^9}, 3.67387604992782*^9, {
   3.673895478819028*^9, 3.6738955391636343`*^9}, {3.673918971595016*^9, 
   3.673918992615596*^9}, {3.673919105126129*^9, 3.673919140744754*^9}, {
   3.673919175081188*^9, 3.673919231992662*^9}, {3.6739192641361027`*^9, 
   3.6739193481964273`*^9}, {3.673919472835343*^9, 3.673919478628847*^9}, {
   3.673957144534629*^9, 3.673957149687254*^9}, {3.673957211497443*^9, 
   3.673957220083222*^9}, {3.67395725773326*^9, 3.673957257883729*^9}, {
   3.6739573072534647`*^9, 3.673957313782132*^9}, 3.673958190339581*^9, {
   3.673959049805601*^9, 3.673959070272468*^9}, {3.6739592988708563`*^9, 
   3.673959300827764*^9}, {3.6739600381740103`*^9, 3.673960040501626*^9}, {
   3.673960289205824*^9, 3.673960293107542*^9}, {3.673960345754664*^9, 
   3.673960349436475*^9}, {3.6741811064040537`*^9, 3.674181111789928*^9}, {
   3.674184135291176*^9, 3.6741841374659348`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Showing the Grids", "Subsection",
 CellChangeTimes->{{3.673277052290266*^9, 3.673277061302971*^9}, {
  3.673277119209675*^9, 3.6732771212386723`*^9}, {3.673348508736053*^9, 
  3.673348513701818*^9}, {3.6737269924034224`*^9, 3.6737269925381393`*^9}, {
  3.6739173803011847`*^9, 3.6739173831779957`*^9}, {3.673976589259214*^9, 
  3.673976594082218*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeFull", "[", 
   RowBox[{"lx_", ",", "ly_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"switch2", "[", "kx", "]"}], " ", "i"}], ",", 
        RowBox[{
         RowBox[{"switch2", "[", "ky", "]"}], " ", "j"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"switch", "[", "kx", "]"}]], "-", "1"}], ",", "2"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"switch", "[", "ky", "]"}]], "-", "1"}], ",", "2"}], 
       "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"kx", ",", 
      RowBox[{"-", "1"}], ",", "lx"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ky", ",", 
      RowBox[{"-", "1"}], ",", "ly"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673976295843335*^9, 3.673976324456502*^9}, {
  3.6739764051358023`*^9, 3.673976409670679*^9}, {3.673976443216154*^9, 
  3.67397644959867*^9}, {3.673976570690834*^9, 3.673976571212369*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeSparse", "[", "n_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"switch2", "[", 
            RowBox[{"getrow", "[", 
             RowBox[{"perp", ",", "diag"}], "]"}], "]"}], " ", "i"}], ",", 
          RowBox[{
           RowBox[{"switch2", "[", 
            RowBox[{"getcol", "[", 
             RowBox[{"perp", ",", "diag"}], "]"}], "]"}], " ", "j"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           SuperscriptBox["2", 
            RowBox[{"switch", "[", 
             RowBox[{"getrow", "[", 
              RowBox[{"perp", ",", "diag"}], "]"}], "]"}]], "-", "1"}], ",", 
          "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{
           SuperscriptBox["2", 
            RowBox[{"switch", "[", 
             RowBox[{"getcol", "[", 
              RowBox[{"perp", ",", "diag"}], "]"}], "]"}]], "-", "1"}], ",", 
          "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"perp", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"endperp", "[", "diag", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"diag", ",", 
      RowBox[{"-", "1"}], ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673976489827297*^9, 3.673976506875458*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integration on the Grids", "Subsection",
 CellChangeTimes->{{3.673277052290266*^9, 3.673277061302971*^9}, {
  3.673277119209675*^9, 3.6732771212386723`*^9}, {3.673348508736053*^9, 
  3.673348513701818*^9}, {3.6737269924034224`*^9, 3.6737269925381393`*^9}, {
  3.6739173803011847`*^9, 3.6739173831779957`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"posW", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "\[Equal]", "0"}], "||", 
       RowBox[{"x", "\[Equal]", "1"}]}], ")"}], ",", 
     RowBox[{"1", "/", "2"}], ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fullIntegrate", "[", 
    RowBox[{"f_", ",", "kx_", ",", "ky_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "^", 
       RowBox[{"-", "kx"}]}], " ", 
      RowBox[{"2", "^", 
       RowBox[{"-", "ky"}]}], "  ", 
      RowBox[{"posW", "[", "i", "]"}], 
      RowBox[{"posW", "[", "j", "]"}], " ", 
      RowBox[{"f", "[", 
       RowBox[{"i", ",", "j"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "1", ",", 
       SuperscriptBox["2", 
        RowBox[{"-", "kx"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "1", ",", 
       SuperscriptBox["2", 
        RowBox[{"-", "ky"}]]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fullIntegrate", "[", 
    RowBox[{"f_", ",", "kx_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "^", 
       RowBox[{"-", "kx"}]}], "  ", 
      RowBox[{"posW", "[", "i", "]"}], 
      RowBox[{"f", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "1", ",", 
       RowBox[{"2", "^", 
        RowBox[{"-", "kx"}]}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sparseIntegrate", "[", 
    RowBox[{"f_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"posW", "[", 
           RowBox[{
            RowBox[{"switch2", "[", 
             RowBox[{"getrow", "[", 
              RowBox[{"perp", ",", "diag"}], "]"}], "]"}], " ", "i"}], "]"}], 
          
          RowBox[{"posW", "[", 
           RowBox[{
            RowBox[{"switch2", "[", 
             RowBox[{"getcol", "[", 
              RowBox[{"perp", ",", "diag"}], "]"}], "]"}], " ", "j"}], "]"}], 
          
          RowBox[{"switch2", "[", 
           RowBox[{"getcol", "[", 
            RowBox[{"perp", ",", "diag"}], "]"}], "]"}], 
          RowBox[{"switch2", "[", "n", "]"}], 
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"switch2", "[", 
              RowBox[{"getrow", "[", 
               RowBox[{"perp", ",", "diag"}], "]"}], "]"}], " ", "i"}], ",", 
            RowBox[{
             RowBox[{"switch2", "[", 
              RowBox[{"getcol", "[", 
               RowBox[{"perp", ",", "diag"}], "]"}], "]"}], " ", "j"}]}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           SuperscriptBox["2", 
            RowBox[{"switch", "[", 
             RowBox[{"getrow", "[", 
              RowBox[{"perp", ",", "diag"}], "]"}], "]"}]], ",", "2"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"switch", "[", 
              RowBox[{"getcol", "[", 
               RowBox[{"perp", ",", "diag"}], "]"}], "]"}]], "-", "1"}], ",", 
           "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"perp", ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"endperp", "[", "diag", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"diag", ",", 
       RowBox[{"-", "1"}], ",", "n"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sparseIntegrateByCoefficients", "[", 
    RowBox[{"f_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"getCoefficient2D", "[", 
           RowBox[{"f", ",", 
            RowBox[{
             RowBox[{"switch2", "[", 
              RowBox[{"getrow", "[", 
               RowBox[{"perp", ",", "diag"}], "]"}], "]"}], " ", "i"}], ",", 
            RowBox[{
             RowBox[{"switch2", "[", 
              RowBox[{"getcol", "[", 
               RowBox[{"perp", ",", "diag"}], "]"}], "]"}], " ", "j"}], ",", 
            RowBox[{"getrow", "[", 
             RowBox[{"perp", ",", "diag"}], "]"}], ",", 
            RowBox[{"getcol", "[", 
             RowBox[{"perp", ",", "diag"}], "]"}]}], "]"}], " ", 
          RowBox[{"area", "[", 
           RowBox[{"getrow", "[", 
            RowBox[{"perp", ",", "diag"}], "]"}], "]"}], " ", 
          RowBox[{"area", "[", 
           RowBox[{"getcol", "[", 
            RowBox[{"perp", ",", "diag"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           SuperscriptBox["2", 
            RowBox[{"switch", "[", 
             RowBox[{"getrow", "[", 
              RowBox[{"perp", ",", "diag"}], "]"}], "]"}]], ",", "2"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           SuperscriptBox["2", 
            RowBox[{"switch", "[", 
             RowBox[{"getcol", "[", 
              RowBox[{"perp", ",", "diag"}], "]"}], "]"}]], ",", "2"}], 
          "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"perp", ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"endperp", "[", "diag", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"diag", ",", 
       RowBox[{"-", "1"}], ",", "n"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sparseBoundaryXIntegrate", "[", 
    RowBox[{"f_", ",", "n_"}], "]"}], ":=", "0"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"do", " ", "later"}], ",", " ", 
    RowBox[{
    "if", " ", "you", " ", "find", " ", "a", " ", "better", " ", 
     "definition"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"posW", "[", "i", "]"}], 
        RowBox[{"posW", "[", "j", "]"}], " ", 
        FractionBox["1", 
         RowBox[{" ", 
          RowBox[{"GCD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "^", "n"}], " ", "i"}], ",", 
            RowBox[{"2", "^", 
             RowBox[{"(", "n", ")"}]}]}], "]"}]}]], 
        RowBox[{"1", "/", 
         RowBox[{"2", "^", "n"}]}], " ", 
        RowBox[{"f", "[", 
         RowBox[{"i", ",", " ", "j"}], " ", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "1", ",", 
         RowBox[{"1", "/", 
          RowBox[{"GCD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "^", "n"}], " ", "i"}], ",", 
            RowBox[{"2", "^", 
             RowBox[{"(", "n", ")"}]}]}], "]"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "1", ",", 
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"-", "n"}], ")"}]}]}], "}"}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "area", " ", "weights"}], ",", " ", 
    RowBox[{"although", " ", "they", " ", "sum", " ", "to", " ", "1"}], ",", 
    " ", 
    RowBox[{
    "are", " ", "not", " ", "totally", " ", "right", " ", "for", " ", 
     "sparse", " ", "grids"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.673913112737192*^9, 3.673913190086637*^9}, {
   3.6739132722211037`*^9, 3.673913412083212*^9}, {3.673913492566742*^9, 
   3.673913513414613*^9}, {3.673913586167919*^9, 3.673913593994001*^9}, {
   3.673913672965742*^9, 3.67391369223491*^9}, {3.67391377872025*^9, 
   3.6739137973109007`*^9}, {3.673913924793683*^9, 3.673914027240034*^9}, {
   3.673914160114106*^9, 3.673914221895009*^9}, {3.6739143916895742`*^9, 
   3.6739145331206093`*^9}, {3.673914594090477*^9, 3.673914610210465*^9}, {
   3.673914675219448*^9, 3.673914688962699*^9}, {3.673914833997225*^9, 
   3.673914867610242*^9}, {3.673914976578474*^9, 3.6739149854145193`*^9}, {
   3.673915022645698*^9, 3.6739150543556957`*^9}, {3.673915117319284*^9, 
   3.673915132081748*^9}, {3.673915279550877*^9, 3.673915293701923*^9}, {
   3.6739169166314077`*^9, 3.6739169534174833`*^9}, {3.673917107616473*^9, 
   3.673917107978497*^9}, {3.673917695473206*^9, 3.673917848938649*^9}, {
   3.673918823918103*^9, 3.673918843774968*^9}, {3.673918917040648*^9, 
   3.6739189194188137`*^9}, {3.673957920483602*^9, 3.673958038101882*^9}, 
   3.673958083722206*^9, {3.673958209451334*^9, 3.6739582140975237`*^9}, {
   3.673968265666698*^9, 3.673968303750602*^9}, {3.673976192172984*^9, 
   3.673976214066881*^9}, {3.673976578362255*^9, 3.673976661268655*^9}, {
   3.6739767007570972`*^9, 3.6739768429528637`*^9}, {3.673977141777309*^9, 
   3.673977191189653*^9}, {3.673978134518664*^9, 3.673978165469441*^9}, {
   3.673978308347847*^9, 3.673978318209403*^9}, {3.6739787649743958`*^9, 
   3.673978767252328*^9}, {3.673978877464623*^9, 3.673978883098538*^9}, {
   3.673980093499876*^9, 3.6739801249024353`*^9}, {3.673980995259432*^9, 
   3.673981023282233*^9}, {3.673981082272324*^9, 3.673981083133692*^9}, {
   3.6739811335714703`*^9, 3.673981138548029*^9}, {3.673981178883544*^9, 
   3.6739811847913237`*^9}, {3.67418052922116*^9, 3.674180529361578*^9}, {
   3.6741805990322866`*^9, 3.674180603818716*^9}, {3.674235656469858*^9, 
   3.67423565674017*^9}, {3.674312314684051*^9, 3.674312319193611*^9}, 
   3.674312408117704*^9, {3.674312909200194*^9, 3.674312919427949*^9}, {
   3.6743500278558397`*^9, 3.67435003116987*^9}, {3.67435010845201*^9, 
   3.674350115939509*^9}, {3.674350193092217*^9, 3.674350203464357*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Weights for the Sparse Grid", "Subsection",
 CellChangeTimes->{{3.673277052290266*^9, 3.673277061302971*^9}, {
  3.673277119209675*^9, 3.6732771212386723`*^9}, {3.673348508736053*^9, 
  3.673348513701818*^9}, {3.6737269924034224`*^9, 3.6737269925381393`*^9}, {
  3.6742149257106323`*^9, 3.674214930931775*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"weights1D", "[", 
    RowBox[{"i_", ",", "kx_", ",", "lx_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"i", ",", 
        SuperscriptBox["2", 
         RowBox[{"lx", "-", "kx"}]]}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"switch3", "[", 
      RowBox[{"kx", ",", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"kx", "-", "lx"}]], "i"}]}], "]"}], ",", "0"}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showFullWeights", "[", 
    RowBox[{"lx_", ",", "ly_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"weights1D", "[", 
         RowBox[{"i", ",", "kx", ",", "lx"}], "]"}], " ", 
        RowBox[{"weights1D", "[", 
         RowBox[{"j", ",", "ky", ",", "ly"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         SuperscriptBox["2", "lx"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         SuperscriptBox["2", "ly"]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"kx", ",", "0", ",", "lx"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ky", ",", "0", ",", "ly"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showSparseWeights", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"weights1D", "[", 
       RowBox[{"i", ",", "0", ",", "n"}], "]"}], " ", 
      RowBox[{"weights1D", "[", 
       RowBox[{"j", ",", "0", ",", "n"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       SuperscriptBox["2", "n"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", 
       SuperscriptBox["2", "n"]}], "}"}]}], "]"}], "+", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"weights1D", "[", 
           RowBox[{"i", ",", 
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{"getrow", "[", 
               RowBox[{"perp", ",", "diag"}], "]"}]}], "]"}], ",", "n"}], 
           "]"}], 
          RowBox[{"weights1D", "[", 
           RowBox[{"j", ",", 
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{"getcol", "[", 
               RowBox[{"perp", ",", "diag"}], "]"}]}], "]"}], ",", "n"}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           SuperscriptBox["2", "n"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", 
           SuperscriptBox["2", "n"]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"perp", ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"endperp", "[", "diag", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"diag", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.674214215951852*^9, 3.674214236340961*^9}, {
  3.674214267738717*^9, 3.674214293639688*^9}, {3.674214339125592*^9, 
  3.674214342627858*^9}, {3.6742149617240562`*^9, 3.674214971859111*^9}, {
  3.6742150632155437`*^9, 3.674215088826158*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Algorithms to form the W Matrices", "Subsection",
 CellChangeTimes->{{3.673277052290266*^9, 3.673277061302971*^9}, {
  3.673277119209675*^9, 3.6732771212386723`*^9}, {3.673348508736053*^9, 
  3.673348513701818*^9}, {3.6737269924034224`*^9, 3.6737269925381393`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lagrangeW", "[", 
    RowBox[{"lx_", ",", "ly_"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"fullIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"lx", ",", "ly", ",", "i1", ",", "j1"}], "]"}], "[", 
               RowBox[{"#1", ",", "#2"}], "]"}], " ", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"lx", ",", "ly", ",", "i2", ",", "j2"}], "]"}], "[", 
               RowBox[{"#1", ",", "#2"}], "]"}]}], "&"}], ",", "lx", ",", 
            "ly"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i2", ",", "0", ",", 
            SuperscriptBox["2", "lx"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j2", ",", "0", ",", 
            SuperscriptBox["2", "ly"]}], "}"}]}], "]"}], "//", "Flatten"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i1", ",", "0", ",", 
         SuperscriptBox["2", "lx"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j1", ",", "0", ",", 
         SuperscriptBox["2", "ly"]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lagrangedW", "[", 
    RowBox[{"lx_", ",", "ly_"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"fullIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"\[Psi]", "[", 
                 RowBox[{"lx", ",", "ly", ",", "i1", ",", "j1"}], "]"}], "[", 
                
                RowBox[{"1", ",", "#1"}], "]"}], " ", 
               RowBox[{
                RowBox[{"\[Psi]", "[", 
                 RowBox[{"lx", ",", "ly", ",", "i2", ",", "j2"}], "]"}], "[", 
                
                RowBox[{"1", ",", "#1"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Psi]", "[", 
                 RowBox[{"lx", ",", "ly", ",", "i1", ",", "j1"}], "]"}], "[", 
                
                RowBox[{"0", ",", "#1"}], "]"}], " ", 
               RowBox[{
                RowBox[{"\[Psi]", "[", 
                 RowBox[{"lx", ",", "ly", ",", "i2", ",", "j2"}], "]"}], "[", 
                
                RowBox[{"0", ",", "#1"}], "]"}]}]}], "&"}], ",", "ly"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i2", ",", "0", ",", 
            SuperscriptBox["2", "lx"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j2", ",", "0", ",", 
            SuperscriptBox["2", "ly"]}], "}"}]}], "]"}], "//", "Flatten"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i1", ",", "0", ",", 
         SuperscriptBox["2", "lx"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j1", ",", "0", ",", 
         SuperscriptBox["2", "ly"]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fullW", "[", 
    RowBox[{"lx_", ",", "ly_"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"fullIntegrate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Phi]", "[", 
                    RowBox[{"kx1", ",", "ky1", ",", "i1", ",", "j1"}], "]"}], 
                   "[", 
                   RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                  RowBox[{
                   RowBox[{"\[Phi]", "[", 
                    RowBox[{"kx2", ",", "ky2", ",", "i2", ",", "j2"}], "]"}], 
                   "[", 
                   RowBox[{"#1", ",", "#2"}], "]"}]}], "&"}], ",", "lx", ",", 
                "ly"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i2", ",", "1", ",", 
                SuperscriptBox["2", 
                 RowBox[{
                  RowBox[{"switch", "[", "kx2", "]"}], "-", "1"}]]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"j2", ",", "1", ",", 
                SuperscriptBox["2", 
                 RowBox[{
                  RowBox[{"switch", "[", "ky2", "]"}], "-", "1"}]]}], "}"}]}],
              "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"kx2", ",", 
              RowBox[{"-", "1"}], ",", "lx"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"ky2", ",", 
              RowBox[{"-", "1"}], ",", "ly"}], "}"}]}], "]"}], "//", 
          "Flatten"}], ",", 
         RowBox[{"{", 
          RowBox[{"i1", ",", "1", ",", 
           SuperscriptBox["2", 
            RowBox[{
             RowBox[{"switch", "[", "kx1", "]"}], "-", "1"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j1", ",", "1", ",", 
           SuperscriptBox["2", 
            RowBox[{
             RowBox[{"switch", "[", "ky1", "]"}], "-", "1"}]]}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"kx1", ",", 
         RowBox[{"-", "1"}], ",", "lx"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ky1", ",", 
         RowBox[{"-", "1"}], ",", "ly"}], "}"}]}], "]"}], ",", "3"}], "]"}]}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fulldW", "[", 
    RowBox[{"lx_", ",", "ly_"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"fullIntegrate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"kx1", ",", "ky1", ",", "i1", ",", "j1"}], "]"}], 
                    "[", 
                    RowBox[{"1", ",", "#"}], "]"}], " ", 
                   RowBox[{
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"kx2", ",", "ky2", ",", "i2", ",", "j2"}], "]"}], 
                    "[", 
                    RowBox[{"1", ",", "#"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"kx1", ",", "ky1", ",", "i1", ",", "j1"}], "]"}], 
                    "[", 
                    RowBox[{"0", ",", "#"}], "]"}], " ", 
                   RowBox[{
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"kx2", ",", "ky2", ",", "i2", ",", "j2"}], "]"}], 
                    "[", 
                    RowBox[{"0", ",", "#"}], "]"}]}]}], "&"}], ",", "ly"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i2", ",", "1", ",", 
                SuperscriptBox["2", 
                 RowBox[{
                  RowBox[{"switch", "[", "kx2", "]"}], "-", "1"}]]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"j2", ",", "1", ",", 
                SuperscriptBox["2", 
                 RowBox[{
                  RowBox[{"switch", "[", "ky2", "]"}], "-", "1"}]]}], "}"}]}],
              "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"kx2", ",", 
              RowBox[{"-", "1"}], ",", "lx"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"ky2", ",", 
              RowBox[{"-", "1"}], ",", "ly"}], "}"}]}], "]"}], "//", 
          "Flatten"}], ",", 
         RowBox[{"{", 
          RowBox[{"i1", ",", "1", ",", 
           SuperscriptBox["2", 
            RowBox[{
             RowBox[{"switch", "[", "kx1", "]"}], "-", "1"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j1", ",", "1", ",", 
           SuperscriptBox["2", 
            RowBox[{
             RowBox[{"switch", "[", "ky1", "]"}], "-", "1"}]]}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"kx1", ",", 
         RowBox[{"-", "1"}], ",", "lx"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ky1", ",", 
         RowBox[{"-", "1"}], ",", "ly"}], "}"}]}], "]"}], ",", "3"}], "]"}]}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sparseW", "[", "n_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Table", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"sparseIntegrateByCoefficients", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{
                    RowBox[{"getrow", "[", 
                    RowBox[{"perp1", ",", "diag1"}], "]"}], ",", 
                    RowBox[{"getcol", "[", 
                    RowBox[{"perp1", ",", "diag1"}], "]"}], ",", "i1", ",", 
                    "j1"}], "]"}], "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], 
                    RowBox[{
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{
                    RowBox[{"getrow", "[", 
                    RowBox[{"perp2", ",", "diag2"}], "]"}], ",", 
                    RowBox[{"getcol", "[", 
                    RowBox[{"perp2", ",", "diag2"}], "]"}], ",", "i2", ",", 
                    "j2"}], "]"}], "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}]}], "&"}], ",", "n"}], 
                   "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i2", ",", "1", ",", 
                    SuperscriptBox["2", 
                    RowBox[{
                    RowBox[{"switch", "[", 
                    RowBox[{"getrow", "[", 
                    RowBox[{"perp2", ",", "diag2"}], "]"}], "]"}], "-", 
                    "1"}]]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j2", ",", "1", ",", 
                    SuperscriptBox["2", 
                    RowBox[{
                    RowBox[{"switch", "[", 
                    RowBox[{"getcol", "[", 
                    RowBox[{"perp2", ",", "diag2"}], "]"}], "]"}], "-", 
                    "1"}]]}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"perp2", ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"endperp", "[", "diag2", "]"}]}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"diag2", ",", 
                RowBox[{"-", "1"}], ",", "n"}], "}"}]}], "]"}], "//", 
            "Flatten"}], ",", 
           RowBox[{"{", 
            RowBox[{"i1", ",", "1", ",", 
             SuperscriptBox["2", 
              RowBox[{
               RowBox[{"switch", "[", 
                RowBox[{"getrow", "[", 
                 RowBox[{"perp1", ",", "diag1"}], "]"}], "]"}], "-", "1"}]]}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j1", ",", "1", ",", 
             SuperscriptBox["2", 
              RowBox[{
               RowBox[{"switch", "[", 
                RowBox[{"getcol", "[", 
                 RowBox[{"perp1", ",", "diag1"}], "]"}], "]"}], "-", "1"}]]}],
             "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"perp1", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"endperp", "[", "diag1", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"diag1", ",", 
         RowBox[{"-", "1"}], ",", "n"}], "}"}]}], "]"}], ",", "3"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sparsedW", "[", "n_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"sparseBoundaryXIntegrate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{
                    RowBox[{"getrow", "[", 
                    RowBox[{"perp1", ",", "diag1"}], "]"}], ",", 
                    RowBox[{"getcol", "[", 
                    RowBox[{"perp1", ",", "diag1"}], "]"}], ",", "i1", ",", 
                    "j1"}], "]"}], "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], 
                    RowBox[{
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{
                    RowBox[{"getrow", "[", 
                    RowBox[{"perp2", ",", "diag2"}], "]"}], ",", 
                    RowBox[{"getcol", "[", 
                    RowBox[{"perp2", ",", "diag2"}], "]"}], ",", "i2", ",", 
                    "j2"}], "]"}], "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}]}], "&"}], ",", "n"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i2", ",", "1", ",", 
                   SuperscriptBox["2", 
                    RowBox[{
                    RowBox[{"switch", "[", 
                    RowBox[{"getrow", "[", 
                    RowBox[{"perp2", ",", "diag2"}], "]"}], "]"}], "-", 
                    "1"}]]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j2", ",", "1", ",", 
                   SuperscriptBox["2", 
                    RowBox[{
                    RowBox[{"switch", "[", 
                    RowBox[{"getcol", "[", 
                    RowBox[{"perp2", ",", "diag2"}], "]"}], "]"}], "-", 
                    "1"}]]}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"perp2", ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"endperp", "[", "diag2", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"diag2", ",", 
               RowBox[{"-", "1"}], ",", "n"}], "}"}]}], "]"}], "//", 
           "Flatten"}], ",", 
          RowBox[{"{", 
           RowBox[{"i1", ",", "1", ",", 
            SuperscriptBox["2", 
             RowBox[{
              RowBox[{"switch", "[", 
               RowBox[{"getrow", "[", 
                RowBox[{"perp1", ",", "diag1"}], "]"}], "]"}], "-", "1"}]]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j1", ",", "1", ",", 
            SuperscriptBox["2", 
             RowBox[{
              RowBox[{"switch", "[", 
               RowBox[{"getcol", "[", 
                RowBox[{"perp1", ",", "diag1"}], "]"}], "]"}], "-", "1"}]]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"perp1", ",", 
          RowBox[{"-", "1"}], ",", 
          RowBox[{"endperp", "[", "diag1", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"diag1", ",", 
        RowBox[{"-", "1"}], ",", "n"}], "}"}]}], "]"}], ",", "3"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.67391540187792*^9, 3.673915430987019*^9}, {
   3.673916702154879*^9, 3.673916743203536*^9}, {3.6739168769210157`*^9, 
   3.673916877399384*^9}, {3.673916961162126*^9, 3.673916982587229*^9}, {
   3.6739600534412003`*^9, 3.673960229216563*^9}, 3.674180918914068*^9, {
   3.674183319036901*^9, 3.674183406281576*^9}, {3.674183458850205*^9, 
   3.674183463533923*^9}, {3.6742356886185703`*^9, 3.674235689286757*^9}, {
   3.674235889518992*^9, 3.674235904767621*^9}, {3.674312229193261*^9, 
   3.6743123074201727`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Redefining differentiation (Sparse Differentiation)", "Subsection",
 CellChangeTimes->{{3.673277052290266*^9, 3.673277061302971*^9}, {
  3.673277119209675*^9, 3.6732771212386723`*^9}, {3.673348508736053*^9, 
  3.673348513701818*^9}, {3.6737269924034224`*^9, 3.6737269925381393`*^9}, {
  3.6743022367902737`*^9, 3.674302248244155*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sparseDiffx", "[", 
    RowBox[{"f_", ",", "n_", ",", "kx_", ",", "ky_", ",", "i_", ",", "j_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"#1", "<", " ", 
       RowBox[{"2", "^", 
        RowBox[{"-", "n"}]}]}], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"#1", "+", 
           SuperscriptBox["2", 
            RowBox[{"-", "l"}]]}], ",", "#2"}], "]"}], "-", 
        RowBox[{"f", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}]}], 
       SuperscriptBox["2", 
        RowBox[{"-", "l"}]]], ",", 
      RowBox[{"#1", ">", 
       RowBox[{"1", "-", 
        RowBox[{"2", "^", 
         RowBox[{"-", "n"}]}]}]}], " ", ",", 
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "-", 
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"#1", "-", 
           SuperscriptBox["2", 
            RowBox[{"-", "l"}]]}], ",", "#2"}], "]"}]}], 
       SuperscriptBox["2", 
        RowBox[{"-", "l"}]]], ",", "True", ",", 
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"#1", "+", 
           SuperscriptBox["2", 
            RowBox[{"-", "l"}]]}], ",", "#2"}], "]"}], "-", 
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"#1", "-", 
           SuperscriptBox["2", 
            RowBox[{"-", "l"}]]}], ",", "#2"}], "]"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["2", 
         RowBox[{"-", "l"}]]}]]}], " ", "]"}], "&"}]}], "\[IndentingNewLine]",
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sparseDiffy", "[", 
   RowBox[{"f_", ",", "l_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"#2", "<", " ", 
      SuperscriptBox["2", 
       RowBox[{"-", "l"}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#2", "+", 
          SuperscriptBox["2", 
           RowBox[{"-", "l"}]]}]}], "]"}], "-", 
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}]}], 
      SuperscriptBox["2", 
       RowBox[{"-", "l"}]]], ",", 
     RowBox[{"#2", ">", " ", 
      RowBox[{"1", "-", 
       SuperscriptBox["2", 
        RowBox[{"-", "l"}]]}]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}], "-", 
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#2", "-", 
          SuperscriptBox["2", 
           RowBox[{"-", "l"}]]}]}], "]"}]}], 
      SuperscriptBox["2", 
       RowBox[{"-", "l"}]]], ",", "True", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#2", "+", 
          SuperscriptBox["2", 
           RowBox[{"-", "l"}]]}]}], "]"}], "-", 
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#2", "-", 
          SuperscriptBox["2", 
           RowBox[{"-", "l"}]]}]}], "]"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["2", 
        RowBox[{"-", "l"}]]}]]}], "]"}], "&"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQvXeFs4xA3GvH4mYmHRBdVN1bDKLTNrGUgOifC7yq
QfQ/Xb9aEP1r+c+pIHreRqdpILpuxsTZIDqO9RiYlmv/tRBEN3ysWgSi96XN
2wii7+c+2gSi9dkPaJoBabbjJlogmkkoKvQpkE4o3pkEopn+z8oC0RoLkrJB
9De+KR2vgXRuKmsniN4aL+iYGA80Z1k+mJ5R8yMIRD/R3xICojdoHM9IAtIa
LJ8yQfSBzXwaaUD6xK8uTRBtd+qSKYgOvHPdGkSzMFo5gegtbN/A9L4yB/ZW
IF1W4wamUzqmHv0IpO+99z0OojnaCtg+A+mq90XcILrAgf+5TsJrR+Zzum9B
dITd7ghdIM3VKB4Jop8IBcWDaIfuy2AaAOKerq4=
  "]]
}, Open  ]]
},
WindowSize->{998, 651},
WindowMargins->{{39, Automatic}, {Automatic, 5}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 25, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 110, 1, 44, "Subsection"],
Cell[693, 25, 10726, 318, 575, "Code",
 InitializationCell->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[11456, 348, 176, 2, 44, "Subsection"],
Cell[11635, 352, 10407, 267, 519, "Input"],
Cell[CellGroupData[{
Cell[22067, 623, 1186, 30, 63, "Input"],
Cell[23256, 655, 284, 6, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23589, 667, 146, 2, 44, "Subsection"],
Cell[23738, 671, 33192, 803, 1101, "Input"],
Cell[56933, 1476, 10993, 259, 647, "Input"],
Cell[CellGroupData[{
Cell[67951, 1739, 214, 6, 28, "Input"],
Cell[68168, 1747, 120, 2, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68325, 1754, 502, 14, 28, "Input"],
Cell[68830, 1770, 96, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68963, 1776, 348, 10, 28, "Input"],
Cell[69314, 1788, 2040, 72, 95, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71391, 1865, 619, 18, 28, "Input"],
Cell[72013, 1885, 597, 12, 24, "Message"],
Cell[72613, 1899, 599, 12, 24, "Message"],
Cell[73215, 1913, 595, 12, 24, "Message"],
Cell[73813, 1927, 599, 12, 24, "Message"],
Cell[74415, 1941, 595, 12, 24, "Message"],
Cell[75013, 1955, 558, 11, 24, "Message"],
Cell[75574, 1968, 599, 12, 24, "Message"],
Cell[76176, 1982, 559, 11, 24, "Message"],
Cell[76738, 1995, 2033, 47, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78808, 2047, 1081, 32, 46, "Input"],
Cell[79892, 2081, 322509, 5284, 372, 143383, 2346, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[402450, 7371, 100, 1, 44, "Subsection"],
Cell[402553, 7374, 11755, 274, 679, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414345, 7653, 154, 2, 44, "Subsection"],
Cell[414502, 7657, 3535, 110, 259, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418074, 7772, 267, 3, 44, "Subsection"],
Cell[418344, 7777, 10179, 250, 488, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428560, 8032, 357, 5, 44, "Subsection"],
Cell[428920, 8039, 1196, 34, 57, "Input"],
Cell[430119, 8075, 1511, 43, 95, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431667, 8123, 315, 4, 44, "Subsection"],
Cell[431985, 8129, 9991, 250, 580, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442013, 8384, 316, 4, 44, "Subsection"],
Cell[442332, 8390, 3311, 94, 176, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445680, 8489, 271, 3, 44, "Subsection"],
Cell[445954, 8494, 16307, 423, 911, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462298, 8922, 340, 4, 44, "Subsection"],
Cell[462641, 8928, 3647, 112, 259, "Input"]
}, Open  ]]
}
]
*)

